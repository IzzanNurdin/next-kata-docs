{
  "app": {
    "config": "./markdown-to-json/settings/kata-platform.json",
    "cwd": "./",
    "deterministicOrder": false,
    "display": true,
    "dist": "./markdown-to-json/outputs/kata-platform.json",
    "filePattern": "**/*.md",
    "ignore": "",
    "port": 3001,
    "server": false,
    "src": "./docs/kata-platform",
    "name": "kata-platform",
    "metadata": true,
    "version": "1.6.1"
  },
  "data": [
    {
      "id": "analyze-your-bot-conversations",
      "contents": "<h2 id=\"introduction\">Introduction</h2>\n<p>In the Kata Platform, you can view various reports and analytics regarding your chatbots. Whether it’s to analyze the end-user (read: chatbot’s user) behavior, chatbot’s most popular topic and keyword, or even chat log between your chatbot and its end-user, we got you covered.</p>\n<p>There are 3 main features you can choose:</p>\n<ul>\n<li><strong>Users</strong> feature provides you the end-user information such as the number of new users, active users, and many more.</li>\n<li><strong>Topics</strong> feature is a feature that relates to what topics, flows, or states that the end-user is asking the most.</li>\n<li><strong>Transcripts</strong> is a feature to see end-user conversations with a chatbot.</li>\n</ul>\n<p>Let’s elaborate on each feature definition and functionalities.</p>\n<h2 id=\"users\">Users</h2>\n<p>The Users feature contains the data of your end-user. First is the filter option on top of the feature screen.</p>\n<h3 id=\"user-filter\">User Filter</h3>\n<p><img src=\"/assets/images/products/kata-platform/analyze-your-bot-conversations/image1.png\" alt=\"Image 1 alt\"></p>\n<blockquote>\n<p><strong>Figure 1</strong>: Filter option in Users feature.</p>\n</blockquote>\n<p>You can filter the analytics based on:</p>\n<ul>\n<li><strong>Environment</strong> is a container your chatbot is deployed to. In Kata Platform, we have 3 environments: Development, Staging, or Production. Environment is a part when creating channels.</li>\n<li><strong>Channel</strong> is a deployed messaging platform where your bot lives.</li>\n<li><strong>Date</strong> is a feature to choose the date range for your analytics data. Note that you can only view maximum 2 months data at a time. For a broader date range, please contact us at <a href=\"mailto:support@kata.ai\">support@kata.ai</a>.</li>\n</ul>\n<h3 id=\"various-user-analytics\">Various User Analytics</h3>\n<p><img src=\"/assets/images/products/kata-platform/analyze-your-bot-conversations/image2.png\" alt=\"Image 2 alt\"></p>\n<blockquote>\n<p><strong>Figure 2</strong>: Various user analytics data.</p>\n</blockquote>\n<p>After selecting the filter, we can view specific data for your chatbot:</p>\n<ul>\n<li><strong>New and Returning Users</strong>: an analytics graphic to show the number of end-users who used the chatbot first-time and repeatedly.</li>\n<li><strong>Active Users</strong>: number of end-users who repeatedly used the chatbot in total.</li>\n<li><strong>Sessions</strong>: a session count when the end-user engages in conversation with the bot until the conversation ends. A session counts as “ended” when your end-user does not reply to the bot until 5 minutes after.</li>\n<li><strong>New Users</strong>: number of end-users that used the chatbot for the first time. If your end-user chats “Hi” for the first time to your bot, then it will be counted as 1. This metric cannot be applied to Whatsapp.</li>\n<li><strong>Messages</strong>: number of total messages received (incoming messages) and sent (outgoing messages) through the chatbot.</li>\n</ul>\n<h3 id=\"user-activities\">User Activities</h3>\n<p><img src=\"/assets/images/products/kata-platform/analyze-your-bot-conversations/image3.png\" alt=\"Image 3 alt\"></p>\n<blockquote>\n<p><strong>Figure 3</strong>: User Activities analytics.</p>\n</blockquote>\n<p>In User Activities, you can see how many sessions, active users, messages, and new users your chatbot has throughout the date range. You can also hover at any date to view the stats for that day. The data can be downloaded in CSV format.</p>\n<h3 id=\"peak-hours\">Peak Hours</h3>\n<p><img src=\"/assets/images/products/kata-platform/analyze-your-bot-conversations/image4.png\" alt=\"Image 4 alt\"></p>\n<blockquote>\n<p><strong>Figure 4</strong>: Peak Hours analytics.</p>\n</blockquote>\n<p>In Peak Hour&#39;s analytics, you can analyze at what day and time the end-users are more engaged with your chatbot. The blue color indicates engagement. The darker the blue, the more engagement the end-user has with your chatbot on that specific day &amp; time.</p>\n<p>Notice on Monday at 12PM, when you hover the block, there are 28 incoming messages with dark blue color, indicating on that day and time the end-user is more active. You can use this analysis to make a better decision as to when is the best time to engage with your user.</p>\n<h3 id=\"cohort\">Cohort</h3>\n<p><img src=\"/assets/images/products/kata-platform/analyze-your-bot-conversations/image5.png\" alt=\"Image 5 alt\">\n<img src=\"/assets/images/products/kata-platform/analyze-your-bot-conversations/image6.png\" alt=\"Image 6 alt\"></p>\n<blockquote>\n<p><strong>Figure 5</strong>: Cohort (simple &amp; expanded) analytics - Daily.</p>\n</blockquote>\n<div className=\"info\">\n    <img className=\"borderless\" src=\"/assets/images/icon-info.svg\" />\n    <p>Important note: The cohort data is standalone analytics, which means the data is shown not filtered by date range.</p>\n</div>\n\n<p>Cohort analysis allows us to see end-user retention which shows the engagement level of end-users to the bot. For example, it counts <strong>active users</strong> who interact with our bot on month 0 and return on the following month (month 1), and return after the next following month (month 2), the higher the percentage of users that returned on month 1, 2, and 3 showing that our bot has a high <strong>retention level</strong>.</p>\n<p>It has a <strong>cohort size</strong> to choose a range which are <strong>monthly, weekly, daily</strong> (default daily):</p>\n<ul>\n<li>Monthly will show <strong>2 previous months</strong> from today.</li>\n<li>Weekly will show <strong>11 previous weeks</strong> from today.</li>\n<li>Daily will show <strong>14 previous days</strong> from today.</li>\n</ul>\n<p>It has a download <strong>button</strong> to export data to a CSV file. We define <strong>5 colors</strong> as follows:</p>\n<ul>\n<li><strong>A dark</strong> color for the <strong>100%</strong> active users.</li>\n<li><strong>A medium-dark</strong> color for <strong>75% to 100%</strong> active users .</li>\n<li><strong>Medium-light</strong> color for <strong>50% to 76%</strong> active users.</li>\n<li><strong>Light</strong> color for <strong>25% to 51%</strong> active users.</li>\n<li><strong>White</strong> for <strong>0% to 26%</strong> active users.</li>\n</ul>\n<h2 id=\"topics\">Topics</h2>\n<p>The <strong>Topics</strong> option within the analytics dashboard contains information regarding mostly used features in your platform. The first thing you will find is a box with 3 filters, which allows you to obtain customized information based on your chosen filters.</p>\n<h3 id=\"topics-filter\">Topics Filter</h3>\n<p><img src=\"/assets/images/products/kata-platform/analyze-your-bot-conversations/image7.png\" alt=\"Image 7 alt\"></p>\n<blockquote>\n<p><strong>Figure 6</strong>: Filter option in Topics feature.</p>\n</blockquote>\n<p>You may adjust the filters based on the following parameters:</p>\n<ul>\n<li><strong>Environment</strong> is a container your chatbot is deployed to. In Kata Platform, we have 3 environments: Development, Staging, or Production. Environment is a part when creating channels.</li>\n<li><strong>Channel</strong> is a deployed messaging platform where your bot lives.</li>\n<li><strong>Date</strong> is a feature to choose the date range for your analytics data. Note that you can only view maximum 2 months data at a time. For a broader date range, please contact us at <a href=\"mailto:support@kata.ai\">support@kata.ai</a>.</li>\n</ul>\n<h3 id=\"top-topics-analytics\">Top Topics Analytics</h3>\n<p><img src=\"/assets/images/products/kata-platform/analyze-your-bot-conversations/image8.png\" alt=\"Image 8 alt\"></p>\n<blockquote>\n<p><strong>Figure 7</strong>: Top Topics analytics.</p>\n</blockquote>\n<p>Once you apply the filters, you can view specific information regarding Top topics for a given feature. For example, shown above are the top 5 topics that appear the most for the flows, intents, states, and messages feature.</p>\n<ul>\n<li><strong>Top 5 flows</strong> will show you an insight about which flows are visited by end-users.</li>\n<li><strong>Top 10 intents</strong> featured the intents that the end-user repeatedly asked.</li>\n<li><strong>Top 10 states</strong> provide which response that chatbot repeatedly replied to the end-user.</li>\n<li><strong>Top 10 messages</strong> show what words were repeatedly talked about by your end-users.</li>\n</ul>\n<p>All those pie charts are downloadable. The output files will be CSV.</p>\n<h3 id=\"word-cloud\">Word Cloud</h3>\n<p><img src=\"/assets/images/products/kata-platform/analyze-your-bot-conversations/image9.png\" alt=\"Image 9 alt\"></p>\n<blockquote>\n<p><strong>Figure 8</strong>: Word Cloud analytics.</p>\n</blockquote>\n<p>When you scroll to the end of the page, you will find the <strong>Word Cloud</strong> box which is a collection of most commonly used words by your end-user. The bigger the size of the font indicates how often the word is being used. You can hover over the words to see total messages for each word.</p>\n<h2 id=\"transcripts\">Transcripts</h2>\n<p>Transcripts feature provides the complete log of conversations between your users &amp; chatbot, complete with date range, total incoming and outgoing messages, duration, and user ID. Also, you can download each transcript log in CSV format.</p>\n<h3 id=\"transcript-filter\">Transcript Filter</h3>\n<p><img src=\"/assets/images/products/kata-platform/analyze-your-bot-conversations/image10.png\" alt=\"Image 10 alt\"></p>\n<blockquote>\n<p><strong>Figure 9</strong>: Filter option in Transcripts feature.</p>\n</blockquote>\n<p>You may adjust the filters based on the following parameters:</p>\n<ul>\n<li><strong>Environment</strong> is a container your chatbot is deployed to. In Kata Platform, we have 3 environments: Development, Staging, or Production. Environment is a part when creating channels.</li>\n<li><strong>Channel</strong> is a deployed messaging platform where your bot lives.</li>\n<li><strong>Date</strong> is a feature to choose the date range for your analytics data. Note that you can only view maximum 2 months data at a time. For a broader date range, please contact us at <a href=\"mailto:support@kata.ai\">support@kata.ai</a>.</li>\n</ul>\n<h3 id=\"transcript-log\">Transcript Log</h3>\n<p><img src=\"/assets/images/products/kata-platform/analyze-your-bot-conversations/image11.png\" alt=\"Image 11 alt\"></p>\n<blockquote>\n<p><strong>Figure 10</strong>: Transcript Log.</p>\n</blockquote>\n<p>After choosing the filter, you can view the transcript log, you can also search for a specific User ID in the search bar on the upper left corner. Here is the explanation for each column:</p>\n<ul>\n<li><strong>Start Date</strong> means start date and time of the conversation.</li>\n<li><strong>End Date</strong> means end date and time of the conversation.</li>\n<li><strong>Incoming</strong> means the total number of messages from the end-user.</li>\n<li><strong>Outgoing</strong> means the total number of messages from the chatbot.</li>\n<li><strong>Duration</strong> means the total time of each conversation.</li>\n<li><strong>User ID</strong> means the user ID of the user in the conversation.</li>\n<li><strong>Download</strong> means a feature to download a transcript log in CSV format.</li>\n</ul>\n<p>You can also click on the transcript row to view the log of each row, for example:</p>\n<p><img src=\"/assets/images/products/kata-platform/analyze-your-bot-conversations/image12.png\" alt=\"Image 12 alt\"></p>\n<blockquote>\n<p><strong>Figure 11</strong>: Transcript Detail.</p>\n</blockquote>\n<p>Here, you can view the log of conversations between your user &amp; chatbot. We also include the state flow your user is in after each chat.</p>\n<pre><code></code></pre>",
      "title": "Analyze Your Bot Conversations",
      "prev": "start-your-first-chatbot",
      "next": "error-log",
      "excerpt": "<p>In the Kata Platform, you can view various reports and analytics regarding your chatbots. Whether it&#x2019;s to analyze the end-user (read: chatbot&#x2019;s user) behavior, chatbot&#x2019;s most popular topic and keyword, or even chat log between your chatbot and its end-user, we got you covered.</p>",
      "meta": {
        "relativePath": "documentation-content\\analyze-your-bot-conversations.html",
        "createdAt": "2022-01-28T04:12:05.051Z",
        "lastModified": "2022-01-28T04:12:05.051Z",
        "size": 9929,
        "formattedSize": "9.7 KB"
      }
    },
    {
      "id": "designing-conversation",
      "contents": "<h2 id=\"what-is-conversation-design\">What is Conversation Design?</h2>\n<p>Conversation Design is a process of designing conversation between the user and operating system based on principles of human-to-human dialogues. Conversation Design&#39;s primary goal is to help users complete their activities on a product, whether it is a transaction, a questions-and-answer, or a casual chat. The final result of Conversation Design is a conversational product with a natural and comfortable conversational flow.</p>\n<h2 id=\"how-to-start-designing-the-conversation\">How to start designing the conversation</h2>\n<p>There are 3 stages of designing conversation; requirement stage, high-level design stage, and detailed design stage. Each of them contains a question that you need to answer throughout the design process.</p>\n<h3 id=\"requirements-stage\">Requirements Stage</h3>\n<p>Always start your product with a clear goal in the requirement stage. It will help you identify your product’s use case and set the scope of your first phase product. You may start this stage by researching your target audience to help you build a user-friendly conversational AI product.</p>\n<p>If you’re confused about whether your product will solve the problem, you may start your research with these 3 basic questions:</p>\n<ol>\n<li>Is a conversational product an appropriate solution for your product?</li>\n<li>Does conversational product improve user experience?</li>\n<li>Does conversational product add real value to your product?</li>\n</ol>\n<p>These questions will help you identify what kind of solution you want to build for your end-users problems.</p>\n<h3 id=\"high-level-design-stage\">High-level Design Stage</h3>\n<p>After fulfilling the requirements, the next step is getting into high-level design. Based on the use case, you can break down what are the key features are going to be. Then, with the features figured out, you should map out the content for your conversational UI.</p>\n<p>In this stage, you may start designing your first conversation flow. Our Kata Platform is designed to build 3 types of conversational products; keyword-based bot, menu-based bot, and NLP-based bot.</p>\n<h3 id=\"detailed-design-stage\">Detailed Design Stage</h3>\n<p>The last stage is the detailed design, where you can develop a system persona for your conversational product. You can build a tone of voice to help your product stay consistent by creating a persona.\nText is the primary medium that conversation designers use to convey messages to users, so good writing is the main key to a smooth user experience. When writing responses for conversational UI, always use plain words, short explanations, and the correct spelling. Remember to write based on your system persona and predefined style guide.</p>\n",
      "title": "Designing Conversation",
      "next": "start-your-first-chatbot",
      "prev": "all-use-cases",
      "excerpt": "<p>Conversation Design is a process of designing conversation between the user and operating system based on principles of human-to-human dialogues. Conversation Design&apos;s primary goal is to help users complete their activities on a product, whether it is a transaction, a questions-and-answer, or a casual chat. The final result of Conversation Design is a conversational product with a natural and comfortable conversational flow.</p>",
      "meta": {
        "relativePath": "documentation-content\\designing-conversation.html",
        "createdAt": "2022-01-24T00:16:44.192Z",
        "lastModified": "2022-01-24T00:16:44.192Z",
        "size": 2678,
        "formattedSize": "2.6 KB"
      }
    },
    {
      "id": "error-log",
      "contents": "<h2 id=\"introduction\">Introduction</h2>\n<p>To build a great conversational experience for end-users, you must create a bot with nearly zero bugs. To achieve this, debugging during development is necessarily needed. You will receive any errors in the Kata Platform when publishing a bot. Also, we provide a feature named Error Logs to show any errors that happened in bot activity after release. Hence, it is an end-to-end error monitoring tool.</p>\n<p>Kata Platform will show these error messages in 3 ways:</p>\n<ol>\n<li>When you publish a chatbot in Kata Platform (<a href=\"https://platform.kata.ai\" target=\"_blank\"><span>http</span>s://platform.kata.ai</a>).</li>\n<li>When you execute a command <code>kata push</code> in Kata CLI.</li>\n<li>When end-users receive the error message <strong>“Maaf terjadi kesalahan pada sistem”</strong>. FYI, you can change the error copy by following this guide. Kata Platform will log it into the Error Log feature. This feature is available in the menu: <strong>Flow &gt; Error Log</strong>.</li>\n</ol>\n<p><img src=\"/assets/images/products/kata-platform/error-log/image1.png\" alt=\"Image 1 alt\"></p>\n<blockquote>\n<p><strong>Figure 1</strong>: Error Log feature is located.</p>\n</blockquote>\n<h2 id=\"available-error-messages\">Available Error Messages</h2>\n<table>\n<thead>\n<tr>\n<th>Error code</th>\n<th>Explanation</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>Error Code 1002-Message shall be either of type &#39;command&#39;, &#39;text&#39; or &#39;data&#39;</td>\n<td>This error message commonly happens if you push your bot using Kata CLI. It means your defined intent is not included in the 3 available options: command, text, or data.</td>\n</tr>\n</tbody></table>\n<p><strong>Solution</strong></p>\n<p>Define one of the intent types correctly:</p>\n<pre><code>intents:\n  myIntent:\n    type: text | data | command\n</code></pre><table>\n<thead>\n<tr>\n<th>Error code</th>\n<th>Explanation</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>Error Code 1003-Cannot find action type: <code>${desc.type}</code></td>\n<td>This error message commonly happens if you push your bot via Kata CLI. It means the action type is not supported or has a typo on the action type description on KataML</td>\n</tr>\n</tbody></table>\n<p>For example, you have the following case.</p>\n<p><img src=\"/assets/images/products/kata-platform/error-log/image2.png\" alt=\"Image 2 alt\"></p>\n<blockquote>\n<p><strong>Figure 2</strong>: Error message example.</p>\n</blockquote>\n<p>It means your bot cannot find the action type <code>txt</code>.</p>\n<p><strong>Solution</strong></p>\n<p>If your case is choosing not supported action type, then you must define one of correct action types:</p>\n<ul>\n<li><code>text</code> - returns one or multiple text bubble</li>\n<li><code>image</code> - returns image</li>\n<li><code>template</code> - returns rich action</li>\n<li><code>command</code> - trigger command</li>\n<li><code>api</code> - trigger an API call.</li>\n</ul>\n<p>Here is the example:</p>\n<pre><code>myAction:\n  type: text\n  options:\n    text: hello $(data.name)!\n</code></pre><p>If the above solution still has issues, then compare the defined actions you have with action inside a state.</p>\n<table>\n<thead>\n<tr>\n<th>Error code</th>\n<th>Explanation</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>Error Code 1004-Invalid method head</td>\n<td>This error message commonly happens if you push your bot via Kata CLI or publish via Platform. The bot has an invalid method in the header or a typo in method definition.</td>\n</tr>\n</tbody></table>\n<p>For example you have a case as follows.</p>\n<p><img src=\"/assets/images/products/kata-platform/error-log/image3.png\" alt=\"Image 3 alt\"></p>\n<blockquote>\n<p><strong>Figure 3</strong>: Error message example.</p>\n</blockquote>\n<p>It means your method named <code>mappingAksBrand</code> head is not found.</p>\n<p><strong>Solution</strong></p>\n<p>You must check your available bot method name, then it should be in these formats for the header:</p>\n<pre><code>methodName(methodParam)</code></pre><p>or</p>\n<pre><code>method(methodParam, methodParam2, ...)</code></pre><table>\n<thead>\n<tr>\n<th>Error code</th>\n<th>Explanation</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>Error Code 1005-Cannot create methe thod <code>${head}: {message}</code></td>\n<td>This error message will show if you push-ing your bot via Kata CLI. It means there is an error when creating the method. In this error message, you will find a specific error in the method.</td>\n</tr>\n</tbody></table>\n<p>For example you have a case as follows.</p>\n<p><img src=\"/assets/images/products/kata-platform/error-log/image4.png\" alt=\"Image 4 alt\"></p>\n<blockquote>\n<p><strong>Figure 4</strong>: Error message example.</p>\n</blockquote>\n<p>It means your method named mappingTitle has an error or incomplete method where <code>)</code> symbol is located.</p>\n<p><strong>Solution</strong></p>\n<p>Check the method name function syntax if there are any typos.</p>\n<table>\n<thead>\n<tr>\n<th>Error code</th>\n<th>Explanation</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>Error Code 1006-Error executing method <code>${method}: ${e.message}</code></td>\n<td>This error message will show if your bot already deployed to any channels. It means there is a failure when executing method(s).</td>\n</tr>\n</tbody></table>\n<p>For example you have a case as follows.</p>\n<p><img src=\"/assets/images/products/kata-platform/error-log/image5.png\" alt=\"Image 5 alt\"></p>\n<blockquote>\n<p><strong>Figure 5</strong>: Error message example.</p>\n</blockquote>\n<p>It means there is an error when executing <code>deleteSoon</code> method.</p>\n<p><strong>Solution</strong></p>\n<p>Check the method function syntax if there are any typos.</p>\n<table>\n<thead>\n<tr>\n<th>Error code</th>\n<th>Explanation</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>Error Code 1007-Method <code>${name}</code> is not defined</td>\n<td>This error message will show if you push your bot via Kata CLI. It means you create an action using a method, but not yet defined in KataML.</td>\n</tr>\n</tbody></table>\n<p><strong>Solution</strong></p>\n<p>You must check the method name from the error message and write code for the method.</p>\n<table>\n<thead>\n<tr>\n<th>Error code</th>\n<th>Explanation</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>Error Code 1010-Failed creating mapping <code>${i}:${map[i]}</code></td>\n<td>This error message will show if you push your bot via Kata CLI or publish via Platform. It means an error in doing mapping in transition.</td>\n</tr>\n</tbody></table>\n<p>For example you have a case as Figure 6. It means your key mapping named <code>tryTransit</code> has an typo or incorrectly mapped with <code>tryValue</code> value.</p>\n<p><img src=\"/assets/images/products/kata-platform/error-log/image6.png\" alt=\"Image 6 alt\"></p>\n<blockquote>\n<p><strong>Figure 6</strong>: Error message example.</p>\n</blockquote>\n<p><strong>Solution</strong></p>\n<p>You must check the mapping inside the transition, then fix any possible typos in expression syntax.</p>\n<table>\n<thead>\n<tr>\n<th>Error code</th>\n<th>Explanation</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>Error Code 1016-Error in flow <code>${this.id}</code> while updating state: <code>${e &amp;&amp; e.message}</code></td>\n<td>This error message will show if you are push-ing your bot via Kata CLI or publishing via Platform. It means there is a state error inside a flow. There are several error messages inside this error code:</td>\n</tr>\n</tbody></table>\n<ol>\n<li>If the error message shows, for example <code>Error in flow greetingFlow while updating state: null, details: No next state found from state init</code>. It means in <code>greetingFlow</code> flow is no next state found.</li>\n<li>If the error message shows, for example: <code>Error in flow greetingFlow while updating state: null, details: Next state ‘greeting’ from ‘init’ doesn’t exist</code>. It means in <code>greetingFlow</code> flow, there is a state name <code>greeting</code> that is not defined yet. |</li>\n</ol>\n<p><strong>Solution</strong></p>\n<p>Check the flow name, then check inside the state if any possible typos.</p>\n<table>\n<thead>\n<tr>\n<th>Error code</th>\n<th>Explanation</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>Error Code 1019-No flow selected.</td>\n<td>This error message will show if you push-ing your bot via Kata CLI or publish via Platform. It means conversation does not match with any flow.</td>\n</tr>\n</tbody></table>\n<p><strong>Solution</strong></p>\n<p>Check whether you have any flow definition or fallback flow, also checking possible typos in flow name.</p>\n<table>\n<thead>\n<tr>\n<th>Error code</th>\n<th>Explanation</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>Error Code 1020-Cannot create Nlu from method: no method <code>${desc.method}</code> found</td>\n<td>This error message will show if you push-ing your bot via Kata CLI. It means bot can not create NLU from a method, because method definition does not exist.</td>\n</tr>\n</tbody></table>\n<p><strong>Solution</strong></p>\n<p>Check definition in the method name.</p>\n<table>\n<thead>\n<tr>\n<th>Error code</th>\n<th>Explanation</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>Error Code 1022-Cannot find nlu: <code>${desc.nlu}</code> on [creating classifier or creating intent attributes]</td>\n<td>This error message will show if you push-ing your bot via Kata CLI. It means bot can not find NLU with specific name on creating intent <strong>or</strong> on creating intent attributes.</td>\n</tr>\n</tbody></table>\n<p>Here is the error example.</p>\n<p><img src=\"/assets/images/products/kata-platform/error-log/image7.png\" alt=\"Image 7 alt\"></p>\n<blockquote>\n<p><strong>Figure 7</strong>: Cannot find NLU named <code>misccc</code> in NLUs mapping.</p>\n</blockquote>\n<p><strong>Solution</strong></p>\n<p>Check the NLU definitions in labels.</p>\n<table>\n<thead>\n<tr>\n<th>Error code</th>\n<th>Explanation</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>Error Code 1023-Error during post-processing Nlu <code>${this.id}</code>, details: <code>${e.message}</code></td>\n<td>This error message will show if you push-ing your bot via Kata CLI. It means it has a failure when executing NLU processors.</td>\n</tr>\n</tbody></table>\n<p>Here is the error example:</p>\n<p><img src=\"/assets/images/products/kata-platform/error-log/image8.png\" alt=\"Image 8 alt\"></p>\n<blockquote>\n<p><strong>Figure 8</strong>: Cannot execute similar NLU with different expressions and processor.</p>\n</blockquote>\n<p><strong>Solution</strong></p>\n<p>Check method definition on your bot code.</p>\n<table>\n<thead>\n<tr>\n<th>Error code</th>\n<th>Explanation</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>Error Code 1028-No Initial State defined</td>\n<td>This error message will show if you push-ing your bot via Kata CLI and publish in Kata Platform.. It means the initial state is not found.</td>\n</tr>\n</tbody></table>\n<p>Here is the error example:</p>\n<p><img src=\"/assets/images/products/kata-platform/error-log/image9.png\" alt=\"Image 9 alt\"></p>\n<blockquote>\n<p><strong>Figure 9</strong>: Cannot publish because no state is found.</p>\n</blockquote>\n<p><strong>Solution</strong></p>\n<p>Add the initial state at least in a flow.</p>\n<table>\n<thead>\n<tr>\n<th>Error code</th>\n<th>Explanation</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>Error Code 1029-Cannot get state &#39;${state}&#39;</td>\n<td>This error message will show if you push-ing your bot via Kata CLI. It means there is no state with a certain name, or no initial state defined.</td>\n</tr>\n</tbody></table>\n<p><strong>Solution</strong></p>\n<p>Check if any possible typos or incorrect definition inside the state name.</p>\n<table>\n<thead>\n<tr>\n<th>Error code</th>\n<th>Explanation</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>Error Code 1030-Invalid action in state <code>${i}</code></td>\n<td>This error message will show if you push-ing your bot via Kata CLI. It means there is no action defined with a certain name in a certain state.</td>\n</tr>\n</tbody></table>\n<p><strong>Solution</strong></p>\n<p>Checking action definition or possible typos in action name, inside the state name.</p>\n<table>\n<thead>\n<tr>\n<th>Error code</th>\n<th>Explanation</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>Error Code 1031-Next state &#39;${state}&#39; from &#39;${prevState}&#39; doesn&#39;t exist</td>\n<td>This error message will show if you push-ing your bot via Kata CLI. It means there is no next state defined.</td>\n</tr>\n</tbody></table>\n<p><strong>Solution</strong></p>\n<p>Check to the next state name whether it has typos or undefined yet.</p>\n<table>\n<thead>\n<tr>\n<th>Error code</th>\n<th>Explanation</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>Error Code 1032-No next state found from state <code>${meta.state}</code></td>\n<td>This error message will show if you push-ing your bot via Kata CLI. It means there is no next state from the state name.</td>\n</tr>\n</tbody></table>\n<p><strong>Solution</strong></p>\n<p>Check to the next state name whether it has typos or undefined yet.</p>\n<table>\n<thead>\n<tr>\n<th>Error code</th>\n<th>Explanation</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>Error Code 1033-Cannot execute enter mapper in state <code>${this.id}: ${e.message}</code></td>\n<td>This error message will show if you push-ing your bot via Kata CLI. It means in <code>onEnter</code> mapping, there is incorrect syntax.</td>\n</tr>\n</tbody></table>\n<p><strong>Solution</strong></p>\n<p>Check the mapping expression in <code>onEnter</code>.</p>\n<table>\n<thead>\n<tr>\n<th>Error code</th>\n<th>Explanation</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>Error Code 1036-Cannot find method ${name} for process</td>\n<td>This error message will show if you push-ing your bot via Kata CLI. It means you cannot find methods defined as processors.</td>\n</tr>\n</tbody></table>\n<p><strong>Solution</strong></p>\n<p>Check method definition on your bot code.</p>\n<table>\n<thead>\n<tr>\n<th>Error code</th>\n<th>Explanation</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>Error Code 1037-Cannot parse condition: <code>${cond}</code></td>\n<td>This error message will show if you push-ing your bot via Kata CLI. It means there is an error on parsing conditional expressions.</td>\n</tr>\n</tbody></table>\n<p><strong>Solution</strong></p>\n<p>Check for typos in actions, intents, and NLUs definitions.</p>\n<table>\n<thead>\n<tr>\n<th>Error code</th>\n<th>Explanation</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>Error Code 1038-Cannot recognize condition with type:${ast.type} and <code>op:${ast.operator}</code></td>\n<td>This error message will show if you push-ing your bot via Kata CLI. It means the condition expression is not found.</td>\n</tr>\n</tbody></table>\n<p><strong>Solution</strong></p>\n<p>Check your condition expression if there is any typos or incorrect syntax. Furthermore, you can check this operator list <a href=\"https://www.w3schools.com/js/js_comparisons.asp\">here</a>.</p>\n<table>\n<thead>\n<tr>\n<th>Error code</th>\n<th>Explanation</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>Error Code 1040-Error in flow ${this.id} while classifying, details ${e &amp;&amp; e.message}</td>\n<td>This error message will show if you push-ing your bot via Kata CLI. It means there is an error when classifying intent.</td>\n</tr>\n</tbody></table>\n<p><strong>Solution</strong></p>\n<p>See the message details for more info.</p>\n<table>\n<thead>\n<tr>\n<th>Error code</th>\n<th>Explanation</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>Error Code 1041-Error classifying intent <code>${this.id}</code> with classifier <code>${</code></td>\n<td>This error message will show if you push-ing your bot via Kata CLI. It means there is an error when classifying intent.</td>\n</tr>\n</tbody></table>\n<p><strong>Solution</strong></p>\n<p>Check the message details for more info.</p>\n<table>\n<thead>\n<tr>\n<th>Error code</th>\n<th>Explanation</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>Error Code 1047-Invalid nlu</td>\n<td>This error message will show if you push-ing your bot via Kata CLI. It means nluID is not recognized by the bot.</td>\n</tr>\n</tbody></table>\n<p><strong>Solution</strong></p>\n<p>Check again with <code>nluID</code> if any possible typos.</p>\n<h2 id=\"coming-soon\">Coming Soon</h2>\n<p>We try our best to provide detailed error messages and solutions. So, we will provide these error messages details with the solution soon.</p>\n<ul>\n<li><code>Error Code 1001: Error processing action ${this.id}, details ${e &amp;&amp; e.message}</code></li>\n<li><code>Error Code 1008: Cannot handle expression, because no expr is defined</code></li>\n<li><code>Error Code 1009: No handler found for type:${ast.type} and op:${ast.operator}</code></li>\n<li><code>Error Code 1011: Max Recursion of ${maxRecursion} is reached.\\n\\n ${JSON.stringify({</code></li>\n<li><code>Error Code 1012: No command handler for &#39;${message.content}&#39;</code></li>\n<li><code>Error Code 1014: Error in flow ${this.id} while executing action, details: ${e.message}</code></li>\n<li><code>Error Code 1015: Error in flow ${this.id} while processing attributes, details: ${e &amp;&amp; e.message}</code></li>\n<li><code>Error Code 1017: Error in flow ${this.id}: Cannot update state from &#39;${state}&#39; data: ${{ context, data, message: pMessage, }}</code></li>\n<li><code>Error Code 1018: Flow is not defined: &#39;${flowName}&#39;</code></li>\n<li><code>Error Code 1021: Cannot find nlu type: ${desc.type}</code></li>\n<li><code>Error Code 1024: Error parsing attribute ${i}, details: ${e &amp;&amp; e.message}</code></li>\n<li><code>Error Code 1026: Session greater than limit (&quot; + this.limitSessionSize / 1000 + &quot;kB)</code></li>\n<li><code>Error Code 1027: No session</code></li>\n<li><code>Error Code 1034: Cannot execute exit mapper in state ${this.id}: ${e.message}</code></li>\n<li><code>Error Code 1035: Cannot execute transit mapper in state ${this.id}: ${e.message}</code></li>\n<li><code>Error Code 1039: Method ${desc.stateMapper} doesn&#39;t exists</code></li>\n<li><code>Error Code 1046: Converse Error, code: ${this.code}, message: ${this.message}, arguments: ${this.printOptions()}</code></li>\n</ul>\n<p>Please don’t hesitate to contact <a href=\"mailto:support@kata.ai\">support@kata.ai</a> if you found any errors above and need an ASAP solution. Thank you</p>\n",
      "title": "Error Log",
      "prev": "analyze-your-bot-conversations",
      "next": "how-to-deploy-your-chatbot-using-generic-channel",
      "excerpt": "<p>To build a great conversational experience for end-users, you must create a bot with nearly zero bugs. To achieve this, debugging during development is necessarily needed. You will receive any errors in the Kata Platform when publishing a bot. Also, we provide a feature named Error Logs to show any errors that happened in bot activity after release. Hence, it is an end-to-end error monitoring tool.</p>",
      "meta": {
        "relativePath": "documentation-content\\error-log.html",
        "createdAt": "2022-02-04T01:03:37.076Z",
        "lastModified": "2022-02-04T01:03:37.076Z",
        "size": 23243,
        "formattedSize": "22.7 KB"
      }
    },
    {
      "id": "start-your-first-chatbot",
      "contents": "<p>A chatbot is an application that allows humans to have online conversations with a computer via text or voice. This tutorial will create a simple chatbot using the Kata Platform. So, let’s get started.</p>\n<h2 id=\"video-tutorial\">Video tutorial</h2>\n<p>You can watch the tutorial to start your first chatbot or follow the steps in this documentation</p>\n<iframe width=\"600\" height=\"300\" src=\"https://www.youtube.com/embed/OYkUylw2x_o\" title=\"YouTube video player\" frameBorder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowFullScreen></iframe>\n\n<h2 id=\"registration-and-login\">Registration and Login</h2>\n<iframe width=\"600\" height=\"300\" src=\"https://www.youtube.com/embed/H83sXg3Wvas\" title=\"YouTube video player\" frameBorder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowFullScreen></iframe>\n\n<ol>\n<li>Open your browser and enter the URL <a href=\"https://platform.kata.ai\" target=\"_blank\"><span>http</span>s://platform.kata.ai/</a>.</li>\n<li>Register your data in the Kata Platform by filling in the required fields.</li>\n</ol>\n<p><img src=\"/assets/images/products/kata-platform/start-your-first-chatbot/image1.png\" alt=\"Image 1 alt\"></p>\n<blockquote>\n<p><strong>Figure 1</strong>: Registration page in Kata Platform</p>\n</blockquote>\n<ol start=\"3\">\n<li>After filling in all the data, click <strong>Sign Up</strong>. We will send a verification email to your registered email.</li>\n<li>Continue to verify your account by entering the password to continue the registration step.</li>\n<li>Login with your account</li>\n</ol>\n<p>In this step, you will create a simple chatbot as in the image below. Let’s start.</p>\n<p><img src=\"/assets/images/products/kata-platform/start-your-first-chatbot/image2.png\" alt=\"Image 2 alt\"></p>\n<blockquote>\n<p><strong>Figure 2</strong>: Simple chatbot example.</p>\n</blockquote>\n<h2 id=\"create-a-project\">Create a Project</h2>\n<iframe width=\"600\" height=\"300\" src=\"https://www.youtube.com/embed/s92bMsSC5gM?list=UUrud2GevnuhBNM7C7RjakVg\" title=\"YouTube video player\" frameBorder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowFullScreen></iframe>\n\n<p>You will see all projects in the project dashboard. A project consists of bot design, NLU, and CMS.</p>\n<ol>\n<li>Click <strong>Create Project</strong> to create a new project.</li>\n</ol>\n<p><img src=\"/assets/images/products/kata-platform/start-your-first-chatbot/image3.png\" alt=\"Image 3 alt\"></p>\n<blockquote>\n<p><strong>Figure 3</strong>: Dashboard project</p>\n</blockquote>\n<ol start=\"2\">\n<li>Fill in project detail, then click <strong>Create Project</strong>.</li>\n<li>After the project has been created, you will be redirected to the <strong>Conversation Flow</strong> page to create flow, state, and action.</li>\n<li>Congratulations, you successfully created a new project.</li>\n</ol>\n<h2 id=\"create-a-flow\">Create a Flow</h2>\n<iframe width=\"600\" height=\"300\" src=\"https://www.youtube.com/embed/jA5oP13_cGY?list=UUrud2GevnuhBNM7C7RjakVg\" title=\"YouTube video player\" frameBorder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowFullScreen></iframe>\n\n<p>Flow is a conversation chatbot flow. In this simple tutorial, you will create 1 flow and use 1 default flow. Default flow is a fallback flow or a flow to answer if questions are not understandable by a chatbot.</p>\n<ol>\n<li>In the Conversation Flow, click the <strong>Create Flow</strong>.</li>\n<li>Fill in the flow name hello, then click <strong>Create</strong>. If a flow is successfully created, it will show in the Conversation Flows sidebar.</li>\n</ol>\n<p><img src=\"/assets/images/products/kata-platform/start-your-first-chatbot/image4.png\" alt=\"Image 4 alt\"></p>\n<blockquote>\n<p><strong>Figure 4</strong>: New flow name “hello”</p>\n</blockquote>\n<h2 id=\"create-a-state\">Create a State</h2>\n<iframe width=\"600\" height=\"300\" src=\"https://www.youtube.com/embed/Yf6cOQ7jYTw?list=UUrud2GevnuhBNM7C7RjakVg\" title=\"YouTube video player\" frameBorder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowFullScreen></iframe>\n\n<p>The state is a step in a conversation. A flow must have 1 state called the initial state, and 1 state called the end state.</p>\n<p>In this tutorial, you will create 2 states in the flow “hello”, which are “init” state and “hello” state. “Init” state will become the initial state, and the “hello” state becomes the end state.</p>\n<ol>\n<li>Click the icon &quot;+&quot; in the <strong>Conversation Flow</strong> menu.</li>\n</ol>\n<p><img src=\"/assets/images/products/kata-platform/start-your-first-chatbot/image5.png\" alt=\"Image 5 alt\"></p>\n<blockquote>\n<p><strong>Figure 5</strong>: Button “+” to create a new state</p>\n</blockquote>\n<ol start=\"2\">\n<li>In this step, you will create an initial state. Fill in the “init” state, then turn on the toggle Initial State to set it as the initial state.</li>\n</ol>\n<p><img src=\"/assets/images/products/kata-platform/start-your-first-chatbot/image6.png\" alt=\"Image 6 alt\"></p>\n<blockquote>\n<p><strong>Figure 6</strong>: Create a state name “init”</p>\n</blockquote>\n<ol start=\"3\">\n<li>Next, create a “hello” state. This state will be an end state, so you must turn on the End State toggle. Do a similar step with the second step.</li>\n</ol>\n<p>In this step, you will get an error that an end state must have at least 1 action. So, the next step is to create an action in the “hello” state.</p>\n<h2 id=\"create-an-action\">Create an Action</h2>\n<iframe width=\"600\" height=\"300\" src=\"https://www.youtube.com/embed/3XkZlqukvzU?list=UUrud2GevnuhBNM7C7RjakVg\" title=\"YouTube video player\" frameBorder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowFullScreen></iframe>\n\n<p>Action is a bot response in text, images, buttons, interactive messages such as a carousel in LINE, a generic template in FB Messenger, and others. A state must have at least 1 action, except in the initial state. This tutorial will create a text action in the “hello” state.</p>\n<ol>\n<li>Click in the “hello” state, then it will show a form on the right screen.</li>\n<li>To create a new action, click on the <strong>Add action</strong> button.</li>\n</ol>\n<p><img src=\"/assets/images/products/kata-platform/start-your-first-chatbot/image7.png\" alt=\"Image 7 alt\"></p>\n<blockquote>\n<p><strong>Figure 7</strong>: Add new action</p>\n</blockquote>\n<ol start=\"3\">\n<li>Click on the “+” icon. Next, it will show various available actions. Choose action <strong>Text</strong>.</li>\n</ol>\n<p><img src=\"/assets/images/products/kata-platform/start-your-first-chatbot/image8.png\" alt=\"Image 8 alt\"></p>\n<blockquote>\n<p><strong>Figure 8</strong>: Input new action</p>\n</blockquote>\n<p><img src=\"/assets/images/products/kata-platform/start-your-first-chatbot/image9.png\" alt=\"Image 9 alt\"></p>\n<blockquote>\n<p><strong>Figure 9</strong>: Input Text action</p>\n</blockquote>\n<ol start=\"4\">\n<li>After choosing a Text action, it will show an interface like in the image below. Input action name, then click Add Variant button to input text response.</li>\n</ol>\n<p><img src=\"/assets/images/products/kata-platform/start-your-first-chatbot/image10.png\" alt=\"Image 10 alt\"></p>\n<blockquote>\n<p><strong>Figure 10</strong>: Input text response in bot</p>\n</blockquote>\n<ol start=\"5\">\n<li>Finishing your action by clicking the <strong>Create Action</strong> button.</li>\n<li>Then, finalize the state by clicking the <strong>Create</strong> button.</li>\n</ol>\n<h2 id=\"create-an-intent\">Create an Intent</h2>\n<iframe width=\"600\" height=\"300\" src=\"https://www.youtube.com/embed/Xd-jH20VMRs?list=UUrud2GevnuhBNM7C7RjakVg\" title=\"YouTube video player\" frameBorder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowFullScreen></iframe>\n\n<p>A chatbot needs to understand end-users input to show correct action or bot response. The intent will recognize input in the Kata Platform by checking keywords, NL, or regex. End-user is a term for chatbot users.</p>\n<p>This step will create an intent to catch when end-users greet the chatbot.</p>\n<ol>\n<li>In the “hello” flow, choose the <strong>Intent</strong> menu. Next, click <strong>Create Intent</strong>.</li>\n</ol>\n<p><img src=\"/assets/images/products/kata-platform/start-your-first-chatbot/image11.png\" alt=\"Image 11 alt\"></p>\n<blockquote>\n<p><strong>Figure 11</strong>: The page to create a new intent</p>\n</blockquote>\n<ol start=\"2\">\n<li>Input intent detail with name “helloIntent”. Then, turn on toggle <strong>As Initial</strong> to create a trigger in the chatbot and execute the “hello” flow.</li>\n<li>Next, continue to choose the <strong>Text</strong> type. Input a condition to make the chatbot execute the intent when the end-user sends the message “Hello” or “/start”:</li>\n</ol>\n<pre><code>content == ‘Hello’ || content == “/start”</code></pre><ol start=\"4\">\n<li>Click the Create button to finish creating intent.</li>\n</ol>\n<p><img src=\"/assets/images/products/kata-platform/start-your-first-chatbot/image12.png\" alt=\"Image 12 alt\"></p>\n<blockquote>\n<p><strong>Figure 12</strong>: Create helloIntent to recognize greetings from end-users.</p>\n</blockquote>\n<h2 id=\"create-a-transition\">Create a Transition</h2>\n<iframe width=\"600\" height=\"300\" src=\"https://www.youtube.com/embed/hx-zs1EUqSg?list=UUrud2GevnuhBNM7C7RjakVg\" title=\"YouTube video player\" frameBorder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowFullScreen></iframe>\n\n<p>Transition is a procedure to move from one state to another state if a condition is fulfilled. Create transition by pulling a line from the source state to the destination state, like the image below.</p>\n<p><img src=\"/assets/images/products/kata-platform/start-your-first-chatbot/image13.png\" alt=\"Image 13 alt\"></p>\n<blockquote>\n<p><strong>Figure 13</strong>: Transition between states.</p>\n</blockquote>\n<ol>\n<li>In this step, you will create a transition between the “init” state and the “hello” state by pulling a line. If you succeed to create a transition, it will show a form on the right screen.</li>\n<li>Then, input condition detail to create transition can be executed if an end-user input is caught by “helloIntent” intent:</li>\n</ol>\n<pre><code>intent == ‘helloIntent’</code></pre><ol start=\"3\">\n<li>Click the <strong>Save</strong> button to finish creating the transition.</li>\n</ol>\n<h2 id=\"publish-bot\">Publish Bot</h2>\n<iframe width=\"600\" height=\"300\" src=\"https://www.youtube.com/embed/xsOc9NPNBSg?list=UUrud2GevnuhBNM7C7RjakVg\" title=\"YouTube video player\" frameBorder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowFullScreen></iframe>\n\n<p>This publish feature is useful to save changes in the form of revision numbers. The Publish button can be found on all Flow pages.</p>\n<ol>\n<li>In this step, you will save the created bot design. Click the <strong>Publish</strong> button which is placed in the top right corner.</li>\n</ol>\n<p><img src=\"/assets/images/products/kata-platform/start-your-first-chatbot/image14.png\" alt=\"Image 14 alt\"></p>\n<blockquote>\n<p><strong>Figure 14</strong>: Publish button.</p>\n</blockquote>\n<ol start=\"2\">\n<li>To ensure your bot is stored correctly, enter the Revision List menu. The revision list will show every new revision at the top.</li>\n</ol>\n<p><img src=\"/assets/images/products/kata-platform/start-your-first-chatbot/image15.png\" alt=\"Image 15 alt\"></p>\n<blockquote>\n<p><strong>Figure 15</strong>: Revision List interface.</p>\n</blockquote>\n<h2 id=\"testing-your-bot\">Testing Your Bot</h2>\n<iframe width=\"600\" height=\"300\" src=\"https://www.youtube.com/embed/htbCHo9vwTc?list=UUrud2GevnuhBNM7C7RjakVg\" title=\"YouTube video player\" frameBorder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowFullScreen></iframe>\n\n<p>In this step, you will try a simple chatbot using the emulator feature.</p>\n<ol>\n<li>On the lower right of your screen, click on the <strong>Test Chatbot</strong> button. You will see a small window with a chat conversation interface if you succeed.</li>\n</ol>\n<p><img src=\"/assets/images/products/kata-platform/start-your-first-chatbot/image16.png\" alt=\"Image 16 alt\"></p>\n<blockquote>\n<p><strong>Figure 16</strong>: Chatbot emulator position.</p>\n</blockquote>\n<ol start=\"2\">\n<li>Type “Hello” word. If your chatbot works well, then it will show the chatbot reply witn created action. This image is the correct example.</li>\n</ol>\n<p><img src=\"/assets/images/products/kata-platform/start-your-first-chatbot/image2.png\" alt=\"Image 2 alt\"></p>\n<blockquote>\n<p><strong>Figure 17</strong>: Correct chatbot conversation.</p>\n</blockquote>\n<ol start=\"3\">\n<li>Congratulations, your first chatbot is done. Next, continue to deploy your chatbot in messaging platform Telegram.</li>\n</ol>\n<h2 id=\"create-a-deployment\">Create a Deployment</h2>\n<iframe width=\"600\" height=\"300\" src=\"https://www.youtube.com/embed/QtvgTJiDjwM?list=UUrud2GevnuhBNM7C7RjakVg\" title=\"YouTube video player\" frameBorder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowFullScreen></iframe>\n\n<p>Deployment is a step to merge all Revisions in Flow, NLU, and CMS so that bots can be integrated into the channel. Before starting channel integration, chatbots must at least have 1 deployment.</p>\n<ol>\n<li>In the sidebar, choose the <strong>Deploy</strong> menu. Then, choose <strong>Overview</strong>.</li>\n</ol>\n<p><img src=\"/assets/images/products/kata-platform/start-your-first-chatbot/image17.png\" alt=\"Image 17 alt\"></p>\n<blockquote>\n<p><strong>Figure 18</strong>: Deploy menu interface.</p>\n</blockquote>\n<ol start=\"2\">\n<li>Click the <strong>New Deployment</strong> button, then it will show a form on the right screen.</li>\n<li>Choose the deployment version. In Kata Platform, there are 3 deployment versions:<ul>\n<li>Major to deploy big changes, such as change chatbot use-case.</li>\n<li>Minor to deploy medium changes, such as adding new features in your chatbot.</li>\n<li>Patch to deploy small changes, such as change copy in action.</li>\n</ul>\n</li>\n</ol>\n<p><img src=\"/assets/images/products/kata-platform/start-your-first-chatbot/image18.png\" alt=\"Image 18 alt\"></p>\n<blockquote>\n<p><strong>Figure 19</strong>: Create a new deployment.</p>\n</blockquote>\n<ol start=\"4\">\n<li>Then, click the <strong>Submit</strong> button. If deployment is successful, then the interface will be shown like this.</li>\n</ol>\n<p><img src=\"/assets/images/products/kata-platform/start-your-first-chatbot/image19.png\" alt=\"Image 19 alt\"></p>\n<blockquote>\n<p><strong>Figure 20</strong>: Deployment has been created.</p>\n</blockquote>\n<h2 id=\"create-an-environment\">Create an Environment</h2>\n<iframe width=\"600\" height=\"300\" src=\"https://www.youtube.com/embed/6taC7GJgq0I?list=UUrud2GevnuhBNM7C7RjakVg\" title=\"YouTube video player\" frameBorder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowFullScreen></iframe>\n\n<p>Step after creating a deployment is to create an environment. An environment is a zone in computer science that provides a place to run integrated applications. Kata Platform has 3 environments: development, staging, and production.</p>\n<ol>\n<li>Choose the menu <strong>Deploy</strong>, then choose <strong>Environment</strong>.</li>\n</ol>\n<p><img src=\"/assets/images/products/kata-platform/start-your-first-chatbot/image20.png\" alt=\"Image 20 alt\"></p>\n<blockquote>\n<p><strong>Figure 21</strong>: Environment interface.</p>\n</blockquote>\n<ol start=\"2\">\n<li>In this step, you will create a Development environment. Click the button <strong>Create Environment</strong> in the <strong>Development</strong> card.</li>\n<li>Fill in the environment, then click <strong>Create</strong>.</li>\n</ol>\n<p><img src=\"/assets/images/products/kata-platform/start-your-first-chatbot/image21.png\" alt=\"Image 21 alt\"></p>\n<blockquote>\n<p><strong>Figure 22</strong>: Create an environment interface.</p>\n</blockquote>\n<h2 id=\"integration-to-a-channel\">Integration to a Channel</h2>\n<iframe width=\"600\" height=\"300\" src=\"https://www.youtube.com/embed/B_a5-MV9nk8?list=UUrud2GevnuhBNM7C7RjakVg\" title=\"YouTube video player\" frameBorder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowFullScreen></iframe>\n\n<h3 id=\"create-a-channel\">Create a Channel</h3>\n<p>In this step, you will create a chatbot integration with the Telegram messaging platform. Telegram is a free messaging platform to deploy chatbots with a simple setup.</p>\n<ol>\n<li>In the <strong>Deploy &gt; Environment</strong>, click the <strong>Create Channel</strong> button.</li>\n</ol>\n<p><img src=\"/assets/images/products/kata-platform/start-your-first-chatbot/image22.png\" alt=\"Image 22 alt\"></p>\n<blockquote>\n<p><strong>Figure 23</strong>: Create an environment interface.</p>\n</blockquote>\n<ol start=\"2\">\n<li>You will be redirected to the Create Channel page. Click the <strong>“+ Create Channel”</strong> button to create a new channel.</li>\n<li>Fill in the channel name and choose type as Telegram. To fill in the Bot User OAuth Access Token field, we must set up a chatbot in Telegram first. The next step is to open your Telegram application and log in.</li>\n</ol>\n<p>Before you start, you need a Telegram account already registered and logged in to your application.</p>\n<h3 id=\"connect-chatbot-to-telegram\">Connect chatbot to Telegram</h3>\n<ol>\n<li>The first step is to register your bot to the BotFather account.</li>\n</ol>\n<p><img src=\"/assets/images/products/kata-platform/start-your-first-chatbot/image23.png\" alt=\"Image 23 alt\"></p>\n<blockquote>\n<p><strong>Figure 24</strong>: Search BotFather account.</p>\n</blockquote>\n<ol start=\"2\">\n<li>Type <code>/newbot</code> and BotFather will ask for your chatbot name. Feel free to use any name you like.</li>\n<li>After that, you will be asked to enter your chatbot username. Remember that your bot username has to either start or end with <code>bot</code>.</li>\n<li>Once finished, BotFather will respond with a bot token to access the Telegram Bot API.</li>\n</ol>\n<p><img src=\"/assets/images/products/kata-platform/start-your-first-chatbot/image24.png\" alt=\"Image 24 alt\"></p>\n<blockquote>\n<p><strong>Figure 25</strong>: Telegram shows bot token.</p>\n</blockquote>\n<ol start=\"5\">\n<li>Go back to Platform, then copy the bot access token into the channel drawer.</li>\n</ol>\n<p><img src=\"/assets/images/products/kata-platform/start-your-first-chatbot/image25.png\" alt=\"Image 25 alt\"></p>\n<blockquote>\n<p><strong>Figure 26</strong>: Input bot access token.</p>\n</blockquote>\n<ol start=\"6\">\n<li>Click <strong>Create</strong> to get a webhook from the Kata Platform. Then, click the copy button to copy the webhook URL.</li>\n<li>Click on the webhook link to <strong>View Channel</strong> detail. It will show a drawer to copy the access token and webhook URL.</li>\n</ol>\n<p><img src=\"/assets/images/products/kata-platform/start-your-first-chatbot/image26.png\" alt=\"Image 26 alt\"></p>\n<blockquote>\n<p><strong>Figure 27</strong>: Input bot access token.</p>\n</blockquote>\n<ol start=\"8\">\n<li>Next, open a new tab on your browser and enter this URL. Change {my_bot_token} into your own bot token. Also, paste <code>{kata_platform_webhook_url}</code> with the copied webhook URL.</li>\n</ol>\n<pre><code>https://api.telegram.org/bot{my_bot_token}/setWebhook?url={kata_platform_webhook_url}</code></pre><ol start=\"9\">\n<li>Click “Go” or press Enter on the keyboard.</li>\n</ol>\n<p><img src=\"/assets/images/products/kata-platform/start-your-first-chatbot/image27.png\" alt=\"Image 27 alt\"></p>\n<blockquote>\n<p><strong>Figure 28</strong>: Telegram bot has successfully connected.</p>\n</blockquote>\n<ol start=\"10\">\n<li>If you see the message “Webhook was set,” you’re all set! Let’s try our chatbot. Open Telegram on the desktop or mobile, and start chatting with your bot.</li>\n</ol>\n<p><img src=\"/assets/images/products/kata-platform/start-your-first-chatbot/image28.png\" alt=\"Image 28 alt\"></p>\n<blockquote>\n<p><strong>Figure 29</strong>: Testing “Hello” in Telegram chatbot.</p>\n</blockquote>\n<p>This is the end of getting started with a chatbot. You can contact <a href=\"mailto:support@kata.ai\">support@kata.ai</a> if you have any difficulties implementing this.</p>\n",
      "title": "Start Your First Chatbot",
      "next": "analyze-your-bot-conversations",
      "prev": "designing-conversation",
      "excerpt": "<p>A chatbot is an application that allows humans to have online conversations with a computer via text or voice. This tutorial will create a simple chatbot using the Kata Platform. So, let&#x2019;s get started.</p>",
      "meta": {
        "relativePath": "documentation-content\\start-your-first-chatbot.html",
        "createdAt": "2022-01-29T14:22:17.343Z",
        "lastModified": "2022-01-29T14:22:17.343Z",
        "size": 17342,
        "formattedSize": "16.9 KB"
      }
    },
    {
      "id": "bot-development-faqs",
      "contents": "<h3 id=\"what-is-the-best-practice-for-making-a-flow\">What is the best practice for making a flow?</h3>\n<p>A flow should be “volatile” which means it gets closed when switching to another flow.</p>\n<pre><code class=\"language-yaml\">volatile: true</code></pre>\n<h3 id=\"how-to-remove-a-context-after-a-specific-time\">How to remove a context after a specific time?</h3>\n<p>You may use <code>invalidate</code> function and filled it with timestamp type</p>\n<pre><code class=\"language-yaml\">invalidate: 152053926476</code></pre>\n<h3 id=\"how-to-handle-the-intent-that-cannot-catch-users-input\">How to handle the intent that cannot catch user&#39;s input?</h3>\n<p>Always use a transition to the state itself named “default” if there are any branching state.</p>\n<p><img src=\"/assets/images/products/kata-platform/faqs/bot-development-faqs/image1.png\" alt=\"Image 1 alt\"></p>\n<pre><code class=\"language-yaml\">states:\n    showPizza:\n        action: showPizza\n        transitions:\n            askQty:\n                condition: intent == &quot;pizzaType&quot;\n            showPizza:\n                fallback: true</code></pre>\n<p>Also, you must create <code>reenter</code> intent with <code>command</code> type. This intent will help the bot ask a question again to user. Also, it will help you to maintain the active session longer.</p>\n<pre><code class=\"language-yaml\">intents:\n    reenter:\n        type: command\n        condition: content == &quot;reenter&quot;</code></pre>\n<h3 id=\"is-it-possible-to-let-users-trigger-a-flow-by-a-command\">Is it possible to let users trigger a flow by a command?</h3>\n<p>Here is an example of using a command to trigger flow <code>login</code> from flow <code>greet</code></p>\n<pre><code class=\"language-yaml\">flowGreet:\n  intents:\n   ...\n\n  states:\n    ...\n    greet:\n      end: true\n      action:\n        - name: greetingMessage\n        - name: showLoginMessage\n        - name: loginCommand\n\n  actions:\n    ...\n    greetingMessage:\n      type: text\n      options:\n        text: &quot;Hello!&quot;\n    showLoginMessage:\n      type: text\n      options:\n        text: &quot;Untuk menggunakan layanan ini, kamu perlu login terlebih dahulu.&quot;\n    loginCommand:\n      type: command\n      options:\n        command: login</code></pre>\n<pre><code class=\"language-yaml\">flowLogin:\n  intents:\n    loginCommand:\n      initial: true\n      type: command\n      condition: content == &quot;login&quot;\n   ...</code></pre>\n<h3 id=\"how-to-make-a-different-response-on-each-channel\">How to make a different response on each channel?</h3>\n<p>We may use metadata for specific channel response. Each metadata consists of:</p>\n<ul>\n<li>Channel type</li>\n<li>Channel access token</li>\n<li>Sender ID</li>\n</ul>\n<pre><code class=\"language-yaml\">states:\n    showMenu:\n        end: true\n        action:\n            - name: bridgeShowMenu\n            - name: showMenuLine\n              condition: metadata.channelType == &quot;line&quot;\n            - name: showMenuFb\n              condition: metadata.channelType == &quot;fbmessenger&quot;\n            - name: showMenuTelegram\n              condition: metadata.channelType == &quot;telegram&quot;</code></pre>\n<h3 id=\"i-found-out-my-bot-respond-incorrectly-for-first-time-users-who-add-the-bot-how-to-handle-this\">I found out my bot respond incorrectly for first-time users who add the bot. How to handle this?</h3>\n<p>You have to add below code to resolve the condition</p>\n<p>Intent code to handle user&#39;s input:</p>\n<pre><code class=\"language-yaml\">intents:\n    # LINE and FB Messenger\n    getStarted:\n        initial: true\n        type: data\n        condition: &quot;payload.type == &#39;follow&#39;&quot;\n\n    # Telegram\n    startTelegram:\n        initial: true\n        type: text\n        condition: &quot;content == &#39;/start&#39;&quot;</code></pre>\n<p>cURL request to add <code>Get Started</code> button for Facebook Messenger :</p>\n<pre><code>curl -X POST \\\n  &quot;https://graph.facebook.com/v2.6/me/messenger_profile?access_token=&lt;PAGE_ACCESS_TOKEN&gt;&quot; \\\n  -H &#39;Content-Type: application/json&#39; \\\n  -d &#39;{\n    &quot;get_started&quot;: {\n        &quot;payload&quot;: &quot;type=follow&quot;\n    }\n}&#39;</code></pre><h3 id=\"whats-the-best-practice-to-create-an-action-that-calls-api-from-a-bot\">What&#39;s the best practice to create an action that calls API from a bot?</h3>\n<p>API that was called from bot must be returned with status code 200 and JSON Response Body. Otherwise the result in payload will be null.</p>\n<pre><code class=\"language-yaml\">flowAPI:\n  intents:\n    ...\n    status:\n      type: command\n      condition: content == &quot;status&quot;\n\n  states:\n    ...\n    callAPI:\n      action:\n        - name: callAPIMock\n        - name: handleResult\n      transitions:\n        success:\n          condition: intent == &quot;status&quot; &amp;&amp; payload.result\n        fail:\n          condition: intent == &quot;status&quot; &amp;&amp; !payload.result\n        callAPI:\n          fallback: true\n\n  actions:\n    ...\n    callAPIMock:\n      type: api\n      options:\n        method: &quot;GET&quot;\n        uri: &quot;https://www.mocky.io/v2/5185415ba171ea3a00704eed&quot;\n    handleResult:\n      type: command\n      options:\n        command: status\n        payload:\n          result: $(result)</code></pre>\n<h3 id=\"how-to-get-the-username-from-each-channel\">How to get the username from each channel?</h3>\n<p>You have to use API action in the bot to use specified API</p>\n<ul>\n<li>LINE: <a href=\"https://developers.line.me/en/docs/messaging-api/reference/#get-profile\">https://developers.line.me/en/docs/messaging-api/reference/#get-profile</a></li>\n<li>FB Messenger: <a href=\"https://developers.facebook.com/docs/messenger-platform/identity/user-profile\">https://developers.facebook.com/docs/messenger-platform/identity/user-profile</a></li>\n<li>For Telegram: access <code>metadata.telegramSenderName</code></li>\n</ul>\n<p>For example:</p>\n<pre><code class=\"language-yaml\">exampleFlow:\n    intents:\n        getStarted:\n            initial: true\n            type: data\n            condition: &quot;payload.type == &#39;follow&#39;&quot;\n\n    states:\n        addAsFriend:\n            initial: true\n            transitions:\n                greetUser:\n                    fallback: true\n                    mapping:\n                        context.userId: metadata.lineSenderId\n                        context.token: metadata.lineAccessToken\n        greetUser:\n            end: true\n            action:\n                - name: callLineAPI\n                - name: displayResult\n\n    actions:\n        callLineAPI:\n            type: api\n            options:\n                method: &#39;GET&#39;\n                headers:\n                    Authorization: &#39;Bearer $(context.token)&#39;\n                uri: &#39;https://api.line.me/v2/bot/profile/$(context.userId)&#39;\n        displayResult:\n            type: text\n            options:\n                text: &#39;Halo, $(result.displayName) terima kasih sudah add kami...&#39;</code></pre>\n<h3 id=\"is-there-any-configurable-field-where-we-can-put-our-google-map-api-key-due-to-location-action-usage\">Is there any configurable field where we can put our google map api key due to location action usage?</h3>\n<ol>\n<li>For setup your Google API Key, put in config in bot studio:\n<code>googleApiKey: thisisgoogleapikey</code></li>\n<li>Then, call the configuration in action :</li>\n</ol>\n<pre><code class=\"language-yaml\">actions:\n    options:\n        text: $(config.googleApiKey)</code></pre>\n<h3 id=\"if-fb-messenger--line-has-action-button-which-use-url-how-about-twitter-is-there-any-alternative-way-such-as-action-text-url\">If FB messenger &amp; LINE has action button which use URL, how about Twitter? Is there any alternative way such as action text URL?</h3>\n<p>Twitter has <code>quickreply</code> that quite similar with action button. Follow this code to put <code>quickreply</code> :</p>\n<pre><code class=\"language-yaml\">type: &quot;template&quot;\noptions:\n    type: &quot;button&quot; | &quot;confirm&quot;\n    items:\n        quickreply:\n            - type: &quot;text&quot;\n              label: string\n              payload:\n                [key : string]: string</code></pre>\n<h3 id=\"how-to-get-metadata-time\">How to get metadata time?</h3>\n<p>You may use <code>metadata.channelType</code> in Bot configuration</p>\n<h3 id=\"how-to-use-flatten-in-nlus\">How to use Flatten in NLUs?</h3>\n<h4 id=\"config-in-botyml\">Config in bot.yml</h4>\n<pre><code class=\"language-yaml\">nlus:\n  mynl:\n    type: nl\n    options: nluId:&quot;user:nlu-name&quot;\n      token: &quot;token&quot;\n      output: &lt;type&gt;\n      threshold: &lt;number&gt;\n      flatten: true # optional, default false</code></pre>\n<p>If flatten is enabled, first object in array will be the value of the entity with entity name as the key</p>\n<h4 id=\"output-type-raw\">Output Type: Raw</h4>\n<p>flatten: false</p>\n<pre><code>{ &#39;intent&#39;: [{ &#39;type&#39;: &#39;trait&#39;, &#39;score&#39;: 1, &#39;value&#39;: &#39;mainMenu&#39; }] }</code></pre><p>flatten: true</p>\n<pre><code>{\n  &#39;intentArray&#39;: [{ &#39;type&#39;: &#39;trait&#39;, &#39;score&#39;: 1, &#39;value&#39;: &#39;mainMenu&#39; }],\n  &#39;intent&#39;: { &#39;type&#39;: &#39;trait&#39;, &#39;score&#39;: 1, &#39;value&#39;: &#39;mainMenu&#39; },\n}</code></pre><h4 id=\"output-type-value\">Output Type: Value</h4>\n<p>flatten: false</p>\n<pre><code>{ &#39;intent&#39;: [&#39;mainMenu&#39;] }</code></pre><p>flatten: true</p>\n<pre><code>{ &#39;intentArray&#39;: [&#39;mainMenu&#39;], &#39;intent&#39;: &#39;mainMenu&#39; }</code></pre><h3 id=\"how-to-reinit-session-in-katacli-\">How to reinit session in kataCLI ?</h3>\n<p>Execute <code>kata console</code> then <code>clear()</code></p>\n<h3 id=\"how-many-seconds-for-timeout-action-type-api-hit-in-kata\">How many seconds for timeout action type API hit in Kata?</h3>\n<p>Kata put 5 Seconds for timeout condition when hit API</p>\n<h3 id=\"how-to-login-as-team-in-kata-cli-\">How to login as team in Kata-CLI ?</h3>\n<ol>\n<li>First, execute <code>kata login</code> and login using your username</li>\n<li>Then, run <code>kata switch-team &lt;TeamName&gt;</code> for switch into team user</li>\n</ol>\n<h3 id=\"i-invited-by-someone-as-his-team-but-in-my-account-the-team-didnt-show-what-should-i-do-\">I invited by someone as his team, but in my account the team didn&#39;t show. What should I do ?</h3>\n<ol>\n<li>Try to relogin (read : logout then login again)</li>\n<li>Then, you shall see your team is available in account switcher</li>\n</ol>\n<h3 id=\"i-got-an-error-which-written-errror-max-recursion-of-3-is-reached-how-to-fix-this-error-\">I got an error which written &quot;Errror: Max Recursion of 3 is reached&quot;. How to fix this error ?</h3>\n<p>This error defines when your bot is move to another state more than 3 times. Solutions :</p>\n<ol>\n<li>Go to bot configuration</li>\n<li>Write : <code>maxRecursion: 10</code></li>\n</ol>\n",
      "title": "Bot Development FAQs",
      "excerpt": "<p>A flow should be &#x201C;volatile&#x201D; which means it gets closed when switching to another flow.</p>",
      "meta": {
        "relativePath": "faqs\\bot-development-faqs.html",
        "createdAt": "2022-01-26T04:28:47.264Z",
        "lastModified": "2022-01-26T04:28:47.264Z",
        "size": 8344,
        "formattedSize": "8.1 KB"
      }
    },
    {
      "id": "general-faqs",
      "contents": "<h3 id=\"is-it-possible-to-use-nl-from-different-projects\">Is it possible to use NL from different projects?</h3>\n<p>You may define them in NLUs. Learn more about how to integrate chatbots using NLU.</p>\n<h3 id=\"how-do-i-give-access-to-anyone-to-access-and-update-content-on-my-cms-client-dashboard\">How do I give access to anyone to access and update content on my CMS Client Dashboard?</h3>\n<p>You can invite anyone registered to Kata Platform or unregistered to access your CMS Client under the User menu on Kata CMS.</p>\n<h3 id=\"can-i-roll-back-to-the-previous-version\">Can I roll back to the previous version?</h3>\n<p>Yes, you can roll back to previous versions on the Version Page. However, please note this action will create a new version using the old version setup. For example, you’re on version 1.0.1 now and would like to roll back to version 1.0.0. When you hit that roll back button, it will create a new version, 1.0.2, with the same setup as version 1.0.0.</p>\n<h3 id=\"what-is-tps-transaction-per-second-in-the-kata-platform\">What is TPS (Transaction per Second) in the Kata Platform?</h3>\n<p>TPS stands for Transaction per Second. A transaction consists of incoming &amp; outgoing message traffic through the Kata Platform. So, we have a limit for the transaction happening in each project in the Kata Platform.</p>\n<h3 id=\"what-do-you-mean-by-the-limit-for-the-transaction\">What do you mean by the limit for the transaction?</h3>\n<p>We limit the incoming &amp; outgoing message traffic in the Kata Platform. Think of it as bandwidth. The bigger your project’s TPS limit, the bigger your bandwidth for message traffic processing.</p>\n<h3 id=\"how-do-we-know-the-tps-limit-for-our-project\">How do we know the TPS limit for our project?</h3>\n<p>We separate the categories of the project into two: Paid Project &amp; Free Project.</p>\n<ul>\n<li>We offer an exclusive TPS limit for each <strong>Paid Project</strong>. Also, all paid projects will have a verified badge in the Kata Platform.</li>\n</ul>\n<p><img src=\"/assets/images/products/kata-platform/faqs/general-faqs/image1.png\" alt=\"Image 1 alt\"></p>\n<blockquote>\n<p><strong>Figure 1</strong>: Badge for a paid project.</p>\n</blockquote>\n<ul>\n<li><strong>For Free Project</strong>: we offer a shared TPS limit across the Free Project’s users.\nShould you need help to upgrade from Free Project to Paid Project or upgrade your TPS limit, please contact us (<a href=\"mailto:business@kata.ai\">business@kata.ai</a>), and we’ll be happy to assist you.</li>\n</ul>\n<h3 id=\"what-is-the-impact-of-the-tps-limit-on-my-project\">What is the impact of the TPS limit on my project?</h3>\n<p>When your project has reached the TPS limit, the following message will have to wait until the previous message has done processing—resulting in your user experiencing a delay in receiving or sending the message. So, the bigger your TPS limit, the bigger your project’s bandwidth to process the message, resulting in less delay. It’s essential if your project has a significant customer base. We will also send an email notification to the project creator when the Paid Project has reached the TPS limit.</p>\n<h3 id=\"does-the-tps-limit-apply-to-all-channels-in-the-kata-platform\">Does the TPS limit apply to all channels in the Kata Platform?</h3>\n<p>Yes, the TPS limit applies to all channels through the Kata Platform and are used by FIFO (First In First Out) method (e.g., if the first message is from WhatsApp and the second is from Facebook Messenger. Then the message from WhatsApp is processed first, followed by the message from Facebook Messenger)</p>\n<h3 id=\"can-i-switch-from-paid-project-to-free-project\">Can I switch from Paid Project to Free Project?</h3>\n<p>Unfortunately, no, but you’re free to choose among the available subscription plans.</p>\n<h3 id=\"how-do-i-upgrade-my-free-project-to-paid-project\">How do I upgrade my Free Project to Paid Project?</h3>\n<p>We’re glad you have decided to support us! Please let us know your interest via email: <a href=\"mailto:business@kata.ai\">business@kata.ai</a>, and we would be happy to assist you.</p>\n<h3 id=\"does-using-the-emulator-in-the-kata-platform-count-as-transaction-usage\">Does using the emulator in the Kata Platform count as transaction usage?</h3>\n<p>No, emulator usage isn’t affected by the TPS limiter.</p>\n<h3 id=\"does-the-tps-limiter-also-apply-for-on-premise-deployment\">Does the TPS limiter also apply for on-premise deployment?</h3>\n<p>Currently no, TPS limiter only applies to cloud deployment.</p>\n",
      "title": "General FAQs",
      "excerpt": "<p>You may define them in NLUs. Learn more about how to integrate chatbots using NLU.</p>",
      "meta": {
        "relativePath": "faqs\\general-faqs.html",
        "createdAt": "2022-01-26T04:28:47.265Z",
        "lastModified": "2022-01-26T04:28:47.265Z",
        "size": 3598,
        "formattedSize": "3.5 KB"
      }
    },
    {
      "id": "glossary-coming-soon",
      "contents": "<ul>\n<li><p>Intent in Flow</p>\n<ul>\n<li>Intent as Initial</li>\n<li>Intent as Fallback</li>\n<li>Intent Type</li>\n<li>Text Intent</li>\n<li>Data Intent</li>\n<li>Command Intent</li>\n<li>Condition</li>\n<li>Classifiers</li>\n<li>Attributes</li>\n<li>Priority</li>\n</ul>\n</li>\n<li><p>NLUs</p>\n<ul>\n<li>Keyword</li>\n<li>NL</li>\n<li>Regex</li>\n<li>Multiple Regex</li>\n<li>Wit Intent</li>\n<li>Wit Entity</li>\n<li>Method</li>\n</ul>\n</li>\n<li><p>Action</p>\n</li>\n<li><p>Method</p>\n<ul>\n<li>Simple Method</li>\n<li>Advanced Method</li>\n</ul>\n</li>\n<li><p>Error Logs</p>\n</li>\n<li><p>Configurations</p>\n</li>\n<li><p>Kata NL</p>\n<ul>\n<li>What is Kata NL?</li>\n<li>Entity<ul>\n<li>Entity: Trait</li>\n<li>Dictionary Entity</li>\n<li>Phrase Entity</li>\n</ul>\n</li>\n<li>Inherit</li>\n<li>Root</li>\n<li>Belongs to</li>\n<li>Labels</li>\n<li>Kata Entity (Supermodel)</li>\n<li>Training</li>\n<li>Test NLU</li>\n<li>Prediction Logs</li>\n<li>Token</li>\n<li>NLU ID</li>\n</ul>\n</li>\n<li><p>Kata CMS</p>\n<ul>\n<li>What is Kata CMS?</li>\n<li>Pages</li>\n<li>Forms</li>\n<li>Elements</li>\n<li>Label</li>\n</ul>\n</li>\n</ul>\n",
      "title": "Coming Soon",
      "excerpt": "<p>Intent in Flow</p>",
      "meta": {
        "relativePath": "glossary\\coming-soon.html",
        "createdAt": "2022-01-26T04:28:47.266Z",
        "lastModified": "2022-01-26T04:28:47.266Z",
        "size": 981,
        "formattedSize": "981 Bytes"
      }
    },
    {
      "id": "glossary-general",
      "contents": "<h3 id=\"api\">API</h3>\n<p>Application Programming Interface is a type of software that connects computers to another computer program.</p>\n<h3 id=\"bot\">Bot</h3>\n<p>A bot is a software application that runs automated tasks.</p>\n<h3 id=\"chatbot\">Chatbot</h3>\n<p>A chatbot is an application that allows humans to have online conversations with a computer via text or voice.</p>\n<h3 id=\"conversational-ai\">Conversational AI</h3>\n<p>Conversational AI is a technology that allows interaction between humans and computers by making computers understand natural language and mimic human conversations. Conversational AI products communicate by recognizing voice and text, understanding intents, translating multiple languages, and responding to human conversations. Automated messaging apps, text-to-speech, or virtual assistants are examples of conversational AI products.</p>\n<h3 id=\"end-user\">End-user</h3>\n<p>In conversational AI product development, an end-user is a person who ultimately uses or is intended to use the product.</p>\n<h3 id=\"fallback\">Fallback</h3>\n<p>Fallback is a situation when the bot does not understand what the end-user said.</p>\n<h3 id=\"faq\">FAQ</h3>\n<p>Frequently Asked Questions (FAQ) is a list of questions with answers relating to a particular subject.</p>\n<h3 id=\"fsd\">FSD</h3>\n<p>Functional Specification Diagram is a document designed to give an overview of how the software works. This document outlines each of the features and shows a step-by-step flow.</p>\n<h3 id=\"human-agent\">Human-agent</h3>\n<p>Human-agent is a real person that interacts with end-users through conversational AI products such as chatbots.</p>\n<h3 id=\"intent\">Intent</h3>\n<p>Intent is a purpose or goal. Within conversational AI, intent refers to what goal or purpose an end-user has in mind while interacting with a bot. This intent is extracted from the end-user utterance, and then the bot translates it to answer with the appropriate response. For example, an end-user wants to buy a pizza. You can build the bot with a designated reply that offers the pizza menu.\nThere are two types of intents in the Kata Platform; Initial Intent and Follow-up Intent. An initial intent is the one you set at the beginning of the conversation, while follow-up is the following intent. A bot cannot start a conversation without an Initial Intent.</p>\n<h3 id=\"kata-cli\">Kata CLI</h3>\n<p>Kata CLI is a command-line interface that users use to interact with the Kata Platform.</p>\n<h3 id=\"kata-platform\">Kata Platform</h3>\n<p>Kata Platform is an ecosystem of applications and services developers use to build NLP products and conversational AI.</p>\n<h3 id=\"kata-ml\">Kata ML</h3>\n<p>KataML or Kata Markup Language is a computer language that uses tags or markup to write bot designs.</p>\n<h3 id=\"message\">Message</h3>\n<p>A message is a conversation unit delivered by bots to end-users or vice versa in text, voice, or media. It consists of incoming messages and outgoing messages.</p>\n<h3 id=\"nlp\">NLP</h3>\n<p>Natural Language Processing is a subfield of linguistics, computer science, and artificial intelligence involved with the interactions between computers and human language. NLP discusses how computers can process and analyze large amounts of natural language data.</p>\n<h3 id=\"omnichannel\">Omnichannel</h3>\n<p>Omnichannel is a multi-channel communication between end-users and human-agents. Kata Omnichat is an omnichannel product from Kata.ai which provides integrated channels such as Instagram and WhatsApp.</p>\n<h3 id=\"session\">Session</h3>\n<p>A session is an exchange of information between two or more communication devices or between a bot and an end-user. It has a start and an endpoint that you can define by a certain point. For example, Kata Platform measures one session from the start of a conversation until the end-user does not reply until 5 minutes.</p>\n<h3 id=\"transcripts\">Transcripts</h3>\n<p>A transcript is a conversation context between chatbot and end-user that consists of text and media, in which users can download and show information based on filters.</p>\n",
      "title": "General",
      "excerpt": "<p>Application Programming Interface is a type of software that connects computers to another computer program.</p>",
      "meta": {
        "relativePath": "glossary\\general.html",
        "createdAt": "2022-01-26T04:28:47.266Z",
        "lastModified": "2022-01-26T04:28:47.266Z",
        "size": 3777,
        "formattedSize": "3.7 KB"
      }
    },
    {
      "id": "glossary-inside-kata-flow",
      "contents": "<h3 id=\"conversation-flow\">Conversation Flow</h3>\n<p>Conversation Flows contain a collection of conversation flows and actions in a bot. You can create a new flow by clicking the Create Flow button.</p>\n<h4 id=\"active-flow\">Active Flow</h4>\n<p>Active Flow works as an indicator for active and functioning flow inside the bot. If the Active Flow toggle is green, the flow is running. On the other hand, if the Active Flow toggle is off, the flow is inaccessible in the bot.</p>\n<h4 id=\"persistent-flow\">Persistent Flow</h4>\n<p>Persistent Flow is used to make the flow repeat the last state if the end-user gives an inappropriate response. You can build this by turning on the Persistent toggle on Create Flow window.</p>\n<h4 id=\"default-flow\">Default Flow</h4>\n<p>Default is the flow that has been provided by Kata Platform. You can find it on the Conversation Flow screen. Meanwhile, the Default toggle box on the Create Flow screen serves to activate the default mode of flow. The default mode will run when no other flow can respond to end-user input.</p>\n<h3 id=\"transition\">Transition</h3>\n<p>Transition is the process of moving between different states or the state itself (self-transition). In Kata Platform, you can use a transition to connect two states by drawing lines between them or define it through the Transition tab in Create State window.\nEvery time you draw a line from one state to another on the Conversation Flow screen, you must create a Transition. This transition between states requires conditions to make the bot move along the path.\nOn the Transitions tab in the Create States window, you can choose from two types of transitions: Self Transition and Floating Transition. Both of these features are optional.</p>\n<h4 id=\"self-transition\">Self Transition</h4>\n<p>This feature lets you create a looping state if the end-users input an utterance that doesn’t meet the bot condition. For example, you create a bot that requires an end-user email address. To avoid inappropriate end-user answers, you can make this state keep repeating the same question until the end-user provides the correct answer.</p>\n<h4 id=\"floating-transition\">Floating Transition</h4>\n<p>Floating Transition allows you to create a state that a bot can access freely from any prior state. You can find this feature on the Transition tab while you open the Create or Edit State window.</p>\n<h3 id=\"mapping\">Mapping</h3>\n<p>Mapping is a procedure to store a value in a destined variable. For example, you want to input 0 in A variable, which is called “value”, then store it into the destined variable, which is “key”. Mapping in the Kata Platform can be found when creating or editing Transition and creating or editing a State.</p>\n<h4 id=\"simple-mapping\">Simple Mapping</h4>\n<p>Simple Mapping is a Mapping process with inputting key and value.</p>\n<h4 id=\"method-mapping\">Method Mapping</h4>\n<p>Method is JS code that is embedded into the chatbot to perform a certain operation while method mapping is a way to run the methods that have been created in the chatbot.</p>\n<h4 id=\"onenter-mapping\">OnEnter Mapping</h4>\n<p>The mapping process occurs when the bot enters a state.</p>\n<h4 id=\"onexit-mapping\">OnExit Mapping</h4>\n<p>The mapping process occurs after the bot finds a transition from one state to another.</p>\n<h3 id=\"states\">States</h3>\n<p>State represents the stage of the conversation.</p>\n<h4 id=\"initial-state\">Initial State</h4>\n<p>Initial state acts as a flow starter. Each flow has to build one initial state.</p>\n<h4 id=\"end-state\">End State</h4>\n<p>End state indicates the end of one session of conversation.</p>\n",
      "title": "Inside Kata Flow",
      "excerpt": "<p>Conversation Flows contain a collection of conversation flows and actions in a bot. You can create a new flow by clicking the Create Flow button.</p>",
      "meta": {
        "relativePath": "glossary\\inside-kata-flow.html",
        "createdAt": "2022-01-26T04:28:47.267Z",
        "lastModified": "2022-01-26T04:28:47.267Z",
        "size": 3345,
        "formattedSize": "3.3 KB"
      }
    },
    {
      "id": "glossary-kata-platform",
      "contents": "<h3 id=\"analytics\">Analytics</h3>\n<p>A feature to analyze end-users behavior. This data analysis set can be used to enhance conversational AI product quality.</p>\n<h3 id=\"flow\">Flow</h3>\n<p>Flow is a feature to create bot flow, integrate bot with NLU and create data mapping for bot needs. Flow provides an Error Log to see any errors when bot development or bot has been released.</p>\n<h3 id=\"nlu\">NLU</h3>\n<p>Natural Language Understanding is a capability that a computer possesses to transform a text message into a structured object. In the Kata Platform, NLU is a place for users to design and build their NLU capability for their conversational AI product.</p>\n<h3 id=\"channels\">Channels</h3>\n<p>A channel is an instant messaging application that can be integrated with Kata Platform, such as WhatsApp, Telegram, LINE, Facebook Messenger, Instagram, etc.</p>\n<h3 id=\"deploy\">Deploy</h3>\n<p>Deploy is a feature in the Kata Platform to do Deployment which merges all Revisions in Revision List.</p>\n<h3 id=\"deployment\">Deployment</h3>\n<p>Deployment is a step to merge all Revisions in Flow, NLU, and CMS so that bots can be integrated into the channel. Before starting channel integration, chatbots must at least have 1 deployment.</p>\n<h3 id=\"environment\">Environment</h3>\n<p>An environment is a zone in computer science that provides a place to run integrated applications. Kata Platform has 3 environments: development, staging, and production.</p>\n<h3 id=\"project\">Project</h3>\n<p>Project is a feature to start your bot or NLP project. A Project can consist of Flow, NLU, and CMS.</p>\n<h3 id=\"publish\">Publish</h3>\n<p>Publish is a command button to save changes in bot and NLU.</p>\n<h3 id=\"revision-list\">Revision List</h3>\n<p>Revision List is a feature to list available revisions.</p>\n",
      "title": "Kata Platform",
      "excerpt": "<p>A feature to analyze end-users behavior. This data analysis set can be used to enhance conversational AI product quality.</p>",
      "meta": {
        "relativePath": "glossary\\kata-platform.html",
        "createdAt": "2022-01-26T04:28:47.267Z",
        "lastModified": "2022-01-26T04:28:47.267Z",
        "size": 1657,
        "formattedSize": "1.6 KB"
      }
    },
    {
      "id": "how-to-change-error-messages-in-your-chatbot",
      "contents": "<p>In Kata Platform, we have a default error message which will show to end-users “Maaf terjadi kesalahan pada sistem” and “Maaf pesan kamu akan diproses beberapa saat lagi yaa”, then you can check it in the Error Log feature in Kata Platform. Learn more about error messages in the Kata Platform.</p>\n<p>You can change the default error message into your language or based on the chatbot&#39;s persona. Let’s start.</p>\n<h2 id=\"change-default-error-message\">Change Default Error Message</h2>\n<p>These steps are to change the default error message “Maaf terjadi kesalahan pada sistem”.</p>\n<ol>\n<li>Go to your project, then click the <strong>Flow</strong> menu.</li>\n</ol>\n<p><img src=\"/assets/images/products/kata-platform/how-to/how-to-change-error-messages-in-your-chatbot/image1.png\" alt=\"Image 1 Alt\"></p>\n<blockquote>\n<p><strong>Figure 1</strong>: Flow menu located.</p>\n</blockquote>\n<ol start=\"2\">\n<li>In this Flow menu, click the <strong>Configurations</strong> sub-menu.</li>\n</ol>\n<p><img src=\"/assets/images/products/kata-platform/how-to/how-to-change-error-messages-in-your-chatbot/image2.png\" alt=\"Image 2 Alt\"></p>\n<blockquote>\n<p><strong>Figure 2</strong>: Configuration menu located.</p>\n</blockquote>\n<ol start=\"3\">\n<li>Write this code about what you wanted to change.</li>\n</ol>\n<pre><code>defaultErrorMessage: &#39;Sorry, there is an error. Please try again.&#39;</code></pre><ol start=\"4\">\n<li>Click <strong>Save</strong> to save the configuration.</li>\n</ol>\n<h2 id=\"change-default-timeout-message\">Change Default Timeout Message</h2>\n<p>These steps are to change the default timeout message “Maaf pesan kamu sedang diproses yaa”.</p>\n<ol>\n<li>Go to the <strong>Configurations</strong> sub-menu again.</li>\n<li>Write this code about what you want to change.</li>\n</ol>\n<pre><code>defaultTimeoutMessage: &#39;Sorry, there is an error. Please try again.&#39;</code></pre><ol start=\"3\">\n<li>Click <strong>Save</strong> to save the configuration.</li>\n</ol>\n<p>This is the end of the guidance. You can contact <a href=\"mailto:support@kata.ai\">support@kata.ai</a> if you have any difficulties when implementing this.</p>\n",
      "title": "How to Change Error Messages in Your Chatbot to Match Them With Chatbot Persona",
      "prev": "using-custom-api-to-access-third-party-application",
      "excerpt": "<p>In Kata Platform, we have a default error message which will show to end-users &#x201C;Maaf terjadi kesalahan pada sistem&#x201D; and &#x201C;Maaf pesan kamu akan diproses beberapa saat lagi yaa&#x201D;, then you can check it in the Error Log feature in Kata Platform. Learn more about error messages in the Kata Platform.</p>",
      "meta": {
        "relativePath": "how-to\\how-to-change-error-messages-in-your-chatbot.html",
        "createdAt": "2022-01-27T05:49:26.400Z",
        "lastModified": "2022-01-27T05:49:26.400Z",
        "size": 1912,
        "formattedSize": "1.9 KB"
      }
    },
    {
      "id": "how-to-deploy-your-chatbot-using-generic-channel",
      "contents": "<h2 id=\"introduction\">Introduction</h2>\n<p>This documentation will teach you how to build a chatbot app using the Kata Platform and connect it to Generic Channel. You can use Generic Channel for the channel not yet available in Kata Platform so that you can make a “wrapper.” This tutorial will deploy your chatbot to a generic channel using NestJs and connect it with a chatbot.</p>\n<div className=\"info\">\n    <img className=\"borderless\" src=\"/assets/images/icon-info.svg\" />\n    <p>Important: There is no limitation in programming languages or frameworks if you want to create the app.</p>\n</div>\n\n<h2 id=\"deploy-your-chatbot-in-kata-platform\">Deploy Your Chatbot in Kata Platform</h2>\n<p>If you have already developed your chatbot, you must deploy your bot.</p>\n<h3 id=\"create-a-deployment\">Create a Deployment</h3>\n<ol>\n<li>Click the <strong>Deploy</strong> menu in the left sidebar</li>\n<li>On the Deploy page, click on the <strong>New Deployment</strong> button in the top right corner. It will open up the Create Deployment menu.</li>\n<li>Choose any deployment version you want to deploy and fill in the changelog.</li>\n</ol>\n<p><img src=\"/assets/images/products/kata-platform/how-to/deploy-your-chatbot-in-generic-channel/image1.png\" alt=\"Image 1 Alt\"></p>\n<blockquote>\n<p><strong>Figure 1</strong>: Create a new deployment</p>\n</blockquote>\n<ol start=\"4\">\n<li>Click <strong>Submit</strong> to finish the deployment.</li>\n</ol>\n<h3 id=\"create-a-new-environment\">Create a New Environment</h3>\n<p>If you already have an environment created, skip these steps.</p>\n<ol>\n<li>Go to the <strong>Deployments &gt; Environment</strong> menu.</li>\n</ol>\n<p><img src=\"/assets/images/products/kata-platform/how-to/deploy-your-chatbot-in-generic-channel/image2.png\" alt=\"Image 2 Alt\"></p>\n<blockquote>\n<p><strong>Figure 2</strong>: Set up the environment, then set up Generic channel</p>\n</blockquote>\n<ol start=\"2\">\n<li>Click the <strong>Create Environment</strong> button in any environment. You will see a drawer to create a new environment.</li>\n<li>Choose the <strong>development version</strong> you want (in this tutorial, we use the 1.0.0 version)</li>\n<li>Fill in the <strong>environment URL</strong>. This environment URL is used for CMS. Learn more about CMS.</li>\n<li>Click <strong>Create</strong> to create the environment.</li>\n<li>Created environment now has a <strong>Create Channel</strong> button.</li>\n</ol>\n<h3 id=\"finalize-generic-channel-deployment\">Finalize Generic channel deployment</h3>\n<ol>\n<li>Click the <strong>Create Channel</strong> button to start adding channels to the environment. It will open up the Channel menu within the environment.</li>\n<li>Click the <strong>”+ Create Channel”</strong> button in the channel table list. It will show a menu to set up the channel.</li>\n<li>Choose Generic in Channel Type. Fill the form to create your channel:</li>\n</ol>\n<table>\n<thead>\n<tr>\n<th>Field Name</th>\n<th>Functionality</th>\n<th>Limitation</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>Name</td>\n<td>Channel Name</td>\n<td>Max. 30 characters must contain only alphanumeric characters (A-Z, a-z, 0-9), <code>-</code>, and <code>_</code>.</td>\n</tr>\n<tr>\n<td>Token (optional)</td>\n<td>Access token from a third-party app.</td>\n<td>-</td>\n</tr>\n<tr>\n<td>Refresh Token (optional)</td>\n<td>Refresh token, if any.</td>\n<td>-</td>\n</tr>\n<tr>\n<td>Secret (optional)</td>\n<td>Secret key from a third-party app</td>\n<td>-</td>\n</tr>\n<tr>\n<td>URL</td>\n<td>Your endpoint to retrieve data from webhook, for example, <code>http://your_domain/message/retrieveMessage</code></td>\n<td>Make sure your endpoint has public access to retrieve data from the webhook.</td>\n</tr>\n</tbody></table>\n<ol start=\"4\">\n<li>Click <strong>Save</strong> to continue. After successfully making a channel, you will get a webhook. Copy this to be used for your app.</li>\n</ol>\n<p><img src=\"/assets/images/products/kata-platform/how-to/deploy-your-chatbot-in-generic-channel/image3.png\" alt=\"Image 3 Alt\"></p>\n<blockquote>\n<p><strong>Figure 3</strong>: Click the copy button to copy the webhook.</p>\n</blockquote>\n<h3 id=\"parameters\">Parameters</h3>\n<p>To send a message to a chatbot, you must have some parameters. See the parameter below:</p>\n<h4 id=\"urlpost-request\">URL(POST REQUEST)</h4>\n<pre><code>https://kanal.kata.ai/receive_message/webhookId\nREQUEST BODY\n{\n    &quot;userId&quot;: &quot;someUserId&quot;,\n    &quot;messages&quot;: [messageObject]\n}</code></pre><p>Here is the detail of messageObject that you can send to the Kata Platform:</p>\n<h5 id=\"text-message\">Text Message</h5>\n<pre><code>{\n    &quot;type&quot;: &quot;text&quot;,\n    &quot;content&quot;: &quot;Halo&quot;\n}</code></pre><h5 id=\"data-message-postback-button-pressed\">Data message (Postback Button Pressed)</h5>\n<pre><code>{\n    &quot;type&quot;: &quot;data&quot;,\n    &quot;payload&quot;: {\n        &quot;key1&quot;: &quot;value1&quot;,\n        &quot;key2&quot;: &quot;value2&quot;,\n    }\n}</code></pre><h5 id=\"data-message-share-location\">Data message (Share Location)</h5>\n<pre><code>{\n    &quot;type&quot;: &quot;data&quot;,\n    &quot;payload&quot;: {\n        &quot;type&quot;: &quot;location&quot;,\n        &quot;latitude&quot;: &quot;-6.187011099999999&quot;,\n        &quot;longitude&quot;: &quot;106.84574350000003&quot;\n    }\n}</code></pre><h5 id=\"data-message-file-attachment\">Data message (File Attachment)</h5>\n<pre><code>{\n    &quot;type&quot;: &quot;data&quot;,\n    &quot;payload&quot;: {\n        &quot;type&quot;: &quot;image&quot;, // you can use image, audio, video, and file\n        &quot;url&quot;: &quot;https://somelocation.com/file&quot;\n    }\n}</code></pre><h3 id=\"reply-message-to-generic-channel\">Reply Message to Generic Channel</h3>\n<p>Kata Platform will hit your webhook (POST Request) that registered in Generic Channel with request body below:</p>\n<h4 id=\"request-body\">Request Body</h4>\n<pre><code>{\n    &quot;messages&quot;: [messageObject, messageObject, messageObject],\n    &quot;userId&quot;: &quot;someUserId&quot;\n}</code></pre><h5 id=\"text-message-1\">Text Message</h5>\n<pre><code>{\n    &quot;type&quot;: &quot;text&quot;,\n    &quot;content&quot;: &quot;Maaf, saya tidak mengerti kata-kata anda...&quot;\n}</code></pre><h5 id=\"button-message\">Button Message</h5>\n<pre><code>{\n    &quot;type&quot;: &quot;data&quot;,\n    &quot;payload&quot;: {\n        &quot;type&quot;: &quot;template&quot;,\n        &quot;template_type&quot;: &quot;button&quot;,\n        &quot;items&quot;: {\n        &quot;title&quot;: &quot;Title&quot;,\n        &quot;text&quot;: &quot;Some text&quot;,\n        &quot;actions&quot;: [\n                {\n                    &quot;type&quot;: &quot;postback&quot;,\n                    &quot;label&quot;: &quot;Label&quot;,\n                    &quot;payload&quot;: {\n                        &quot;key1&quot;: &quot;value1&quot;,\n                        &quot;key2&quot;: &quot;value2&quot;\n                    }\n                },\n                {\n                    &quot;type&quot;: &quot;url&quot;,\n                    &quot;label&quot;: &quot;Label&quot;,\n                    &quot;url&quot;: &quot;http://google.com&quot;\n                },\n                {\n                    &quot;type&quot;: &quot;message&quot;,\n                    &quot;label&quot;: &quot;Label&quot;,\n                    &quot;text&quot;: &quot;Your message&quot;\n                }\n            ]\n        }\n    }\n}</code></pre><h5 id=\"carousel-message\">Carousel Message</h5>\n<pre><code>{\n    &quot;type&quot;: &quot;data&quot;,\n    &quot;payload&quot;: {\n        &quot;type&quot;: &quot;template&quot;,\n        &quot;template_type&quot;: &quot;carousel&quot;,\n        &quot;items&quot;: [\n            {\n                &quot;title&quot;: &quot;Title&quot;,\n                &quot;text&quot;: &quot;Some text&quot;,\n                &quot;thumbnailImageUrl&quot;: &quot;https://pbs.twimg.com/profile_images/980544485108064256/jfiHHXbR_400x400.jpg&quot;,\n                &quot;actions&quot;: [\n                    {\n                        &quot;type&quot;: &quot;postback&quot;,\n                        &quot;label&quot;: &quot;Label&quot;,\n                        &quot;payload&quot;: {\n                        &quot;key1&quot;: &quot;value1&quot;,\n                        &quot;key2&quot;: &quot;value2&quot;\n                        }\n                    },\n                    {\n                        &quot;type&quot;: &quot;url&quot;,\n                        &quot;label&quot;: &quot;Label&quot;,\n                        &quot;url&quot;: &quot;http://google.com&quot;\n                    }\n                ]\n            },\n            {\n                &quot;title&quot;: &quot;Title&quot;,\n                &quot;text&quot;: &quot;Some text&quot;,\n                &quot;thumbnailImageUrl&quot;: &quot;https://pbs.twimg.com/profile_images/980544485108064256/jfiHHXbR_400x400.jpg&quot;,\n                &quot;actions&quot;: [\n                    {\n                        &quot;type&quot;: &quot;postback&quot;,\n                        &quot;label&quot;: &quot;Label&quot;,\n                        &quot;payload&quot;: {\n                        &quot;key1&quot;: &quot;value1&quot;,\n                        &quot;key2&quot;: &quot;value2&quot;\n                        }\n                    },\n                    {\n                        &quot;type&quot;: &quot;url&quot;,\n                        &quot;label&quot;: &quot;Label&quot;,\n                        &quot;url&quot;: &quot;http://google.com&quot;\n                    }\n                ]\n            }\n        ]\n    }\n}</code></pre><h5 id=\"image-message\">Image Message</h5>\n<pre><code>{\n    &quot;type&quot;: &quot;data&quot;,\n    &quot;payload&quot;: {\n        &quot;type&quot;: &quot;template&quot;,\n        &quot;template_type&quot;: &quot;image&quot;,\n        &quot;items&quot;: {\n        &quot;originalContentUrl&quot;: &quot;https://pbs.twimg.com/profile_images/980544485108064256/jfiHHXbR_400x400.jpg&quot;,\n        &quot;previewImageUrl&quot;: &quot;https://pbs.twimg.com/profile_images/980544485108064256/jfiHHXbR_400x400.jpg&quot;\n        }\n    }\n}</code></pre><h5 id=\"audio-message\">Audio Message</h5>\n<pre><code>{\n    &quot;type&quot;: &quot;data&quot;,\n    &quot;payload&quot;: {\n        &quot;type&quot;: &quot;template&quot;,\n        &quot;template_type&quot;: &quot;audio&quot;,\n        &quot;items&quot;: {\n        &quot;originalContentUrl&quot;: &quot;http://www.noiseaddicts.com/samples_1w72b820/4936.mp3&quot;,\n        &quot;duration&quot;: &quot;10000&quot;\n        }\n    }\n}</code></pre><h5 id=\"video-message\">Video Message</h5>\n<pre><code>{\n    &quot;type&quot;: &quot;data&quot;,\n    &quot;payload&quot;: {\n        &quot;type&quot;: &quot;template&quot;,\n        &quot;template_type&quot;: &quot;video&quot;,\n        &quot;items&quot;: {\n            &quot;originalContentUrl&quot;: &quot;http://techslides.com/demos/sample-videos/small.mp4&quot;,\n            &quot;previewImageUrl&quot;: &quot;https://pbs.twimg.com/profile_images/980544485108064256/jfiHHXbR_400x400.jpg&quot;\n        }\n    }\n}</code></pre><h5 id=\"location-message\">Location Message</h5>\n<pre><code>{\n    &quot;type&quot;: &quot;data&quot;,\n    &quot;payload&quot;: {\n        &quot;type&quot;: &quot;template&quot;,\n        &quot;template_type&quot;: &quot;location&quot;,\n        &quot;items&quot;: {\n            &quot;title&quot;: &quot;Title&quot;,\n            &quot;address&quot;: &quot;Address&quot;,\n            &quot;latitude&quot;: &quot;-6.187011099999999&quot;,\n            &quot;longitude&quot;: &quot;106.84574350000003&quot;,\n            &quot;locationImageUrl&quot;: &quot;https://maps.googleapis.com/maps/api/staticmap?size=512x512&amp;maptype=roadmap&amp;markers=color:red%7C-6.187011099999999,106.84574350000003&amp;zoom=18&quot;\n        }\n    }\n}</code></pre><h3 id=\"generic-channel-app\">Generic Channel App</h3>\n<p>Here is an example of a generic channel app built with NestJs framework. The source code: <a href=\"https://github.com/Farhanramadhana/Generic-Channel\">https://github.com/Farhanramadhana/Generic-Channel</a></p>\n<p>Source code below is the Controller /message that has 2 functions:</p>\n<ol>\n<li><code>/message/retrieveMessage</code> endpoint with POST method to retrieve data from chatBot</li>\n<li><code>/message/sendMessage</code> endpoint with POST method to send data to ChatBot</li>\n</ol>\n<pre><code>@Controller(&#39;message&#39;)\nexport class AppController {\n  constructor(private readonly appService: AppService) {}\n\n  @Post(&#39;retrieveMessage&#39;)\n  retrieveMessage(@Req() request: Request) {\n    console.log(request.body);\n  }\n\n  @Post(&#39;sendMessage&#39;)\n  sendMessage(@Req() request: Request) {\n    let data = request.body;\n    return this.appService.sendMessage(data);\n  }\n}</code></pre><p>sendMessage() function will send a user message to a chatbot.</p>\n<pre><code>sendMessage(data) {\n    let options = {\n      method: &#39;POST&#39;,\n      uri:\n        &#39;&lt;enter_your_webhook_here&gt;&#39;,\n      json: true,\n      body: {\n        &quot;userId&quot;: data.userId,\n        &quot;messages&quot;:[\n          {\n            &quot;type&quot;: data.messages[0].type,\n            &quot;content&quot;: data.messages[0].content\n          }\n        ]\n      }\n    }\n\n    return rp(options)\n      .then(function (parsedBody){\n          data = {\n            &quot;status&quot; : &quot;Success&quot;,\n            &quot;messages&quot; : parsedBody\n          }\n          return data\n      })\n      .catch(function(err) {\n          data = {\n            &quot;status&quot; : &quot;error&quot;,\n            &quot;messages&quot; : err\n          }\n          return data\n      })\n  }</code></pre><h2 id=\"testing-generic-channel-with-postman-app\">Testing Generic Channel with Postman app</h2>\n<p>In this section, you can use <a href=\"https://www.postman.com/\" target=\"_blank\">Postman</a> to test sending messages to your chatbot.</p>\n<p><img src=\"/assets/images/products/kata-platform/how-to/deploy-your-chatbot-in-generic-channel/image4.png\" alt=\"Image 4 Alt\"></p>\n<blockquote>\n<p><strong>Figure 4</strong>: Testing your bot</p>\n</blockquote>\n<p>Finally, you will get a response from the chatbot to your app.</p>\n<p>This is the end of the guidance. You can contact <a href=\"mailto:support@kata.ai\">support@kata.ai</a> if you have any difficulties when implementing this.</p>\n",
      "title": "How to Deploy Your Chatbot Using Generic Channel",
      "next": "how-to-improve-your-chatbot-intelligence-by-training-your-nlu",
      "excerpt": "<p>This documentation will teach you how to build a chatbot app using the Kata Platform and connect it to Generic Channel. You can use Generic Channel for the channel not yet available in Kata Platform so that you can make a &#x201C;wrapper.&#x201D; This tutorial will deploy your chatbot to a generic channel using NestJs and connect it with a chatbot.</p>",
      "meta": {
        "relativePath": "how-to\\how-to-deploy-your-chatbot-using-generic-channel.html",
        "createdAt": "2022-01-27T05:49:26.401Z",
        "lastModified": "2022-01-27T05:49:26.401Z",
        "size": 12160,
        "formattedSize": "11.9 KB"
      }
    },
    {
      "id": "how-to-improve-your-chatbot-intelligence-by-training-your-nlu",
      "contents": "<h2 id=\"introduction\">Introduction</h2>\n<p>Natural Language Understanding (NLU) is a computer&#39;s ability to transform a text message into a structured object. In the Kata Platform, NLU is a place for users to design and build their NLU capability for their conversational AI product. ‘</p>\n<h2 id=\"how-to-use\">How to Use</h2>\n<p>This guide will teach you how to integrate NLU into your chatbot to recognize specific end-users input. Before you start, you will need to create at least one entity.</p>\n<ol>\n<li>To create an entity, go to the <strong>NLU</strong> menu. Then, click the <strong>Entity</strong> menu.</li>\n</ol>\n<p><img src=\"/assets/images/products/kata-platform/how-to/how-to-improve-your-chatbot-intelligence-by-training-your-nlu/image1.png\" alt=\"Image 1 alt\"></p>\n<blockquote>\n<p><strong>Figure 1</strong>: NLU and entity menu.</p>\n</blockquote>\n<ol start=\"2\">\n<li>Click <strong>Create Entity</strong> to set up a new entity. It will show a form on the right screen. Fill in the entity name.</li>\n<li><strong>Inherit</strong> lets you copy an entity from any public NLU on the Kata Platform. To inherit an NLU, type the NLU ID with <code>[username]:[project name]</code>. Inherited entities will sync to the original entity, including the labels and training data. For example, in the <a href=\"/kata-platform/documentation-content/start-your-first-chatbot\">getting started chatbot</a> section, your NLU ID format is <code>muhfadhiilkata:test_simple_bot</code>.</li>\n<li><strong>Type</strong> is intended for the entity type. We have 3 entity types in the Kata Platform:<ul>\n<li><strong>Trait</strong> is a text classifier to classify a sentence into a particular labels. This type is suitable for making your bot recognize nuance in a sentence.</li>\n<li><strong>Dictionary</strong> is a word tagger which has keys and labels. It will form an array.</li>\n<li>The <strong>Phrase</strong> is a word tagger.</li>\n</ul>\n</li>\n</ol>\n<p><img src=\"/assets/images/products/kata-platform/how-to/how-to-improve-your-chatbot-intelligence-by-training-your-nlu/image2.png\" alt=\"Image 2 alt\"></p>\n<blockquote>\n<p><strong>Figure 2</strong>: Entity type “dictionary”</p>\n</blockquote>\n<ol start=\"5\">\n<li>The <strong>Profile</strong> is an AI model that is available to use by users. Depending on data training and your dataset, you can choose any profiles you want.<ul>\n<li>The “default” profile is suitable for many data samples so that this profile is available in all entity types.</li>\n<li>“intent” profile is suitable for entity type “trait.”</li>\n<li>“default_v2” profile is our newest profile and is suitable if you have a large amount of data.</li>\n</ul>\n</li>\n<li><strong>Root</strong> enables you to create an entity using other users&#39; NLU to copy the training data and add new labels. Therefore, it is suitable if you have a trained NLU and want to add more labels in the NLU. You can type an NLU ID which consists of username and project with format <code>[username]:[project name]</code>.</li>\n<li><strong>Labels</strong> are a feature to determine classes or categories from an entity. To add a new label, you can type and press “enter” on your keyboard.\nIf you choose entity type “dictionary,” it will show a dropdown name <strong>Belongs to</strong>. This feature enables you to define relationships () between entities. Belongs to feature can only be used for entities in the same NLU with entity type “phrase” or “dictionary.” It is suitable if your data sample is like this:</li>\n</ol>\n<pre><code>Saya mau beli es kopi susu 2 dan less sugar</code></pre><p><code>Es kopi susu</code> is the main menu. <code>2 and less sugar</code> are modifiers to detailing the order. So in Belongs To concept, you will tag 2 and choose belongsTo</p>\n<h2 id=\"training-your-nlu\">Training your NLU</h2>\n<p>After creating an entity and labels, you have to train them.</p>\n<ol>\n<li>Go to <strong>NLU &gt; Training</strong> menu.</li>\n</ol>\n<p><img src=\"/assets/images/products/kata-platform/how-to/how-to-improve-your-chatbot-intelligence-by-training-your-nlu/image3.png\" alt=\"Image 3 alt\"></p>\n<blockquote>\n<p><strong>Figure 3</strong>: Training model position.</p>\n</blockquote>\n<ol start=\"2\">\n<li>Then, you will see 2 choices to train your entities:<ul>\n<li><strong>Single training</strong> is a way to train sentences (training data) one by one.</li>\n<li><strong>Bulk training</strong> is a way to train up to 200 sentences (training data) by uploading a .txt file with annotations inside the file.</li>\n</ul>\n</li>\n</ol>\n<p>These are steps to train your NLU using single training:</p>\n<ol>\n<li>For example, to train 1 sentence for your NLU, type a sentence, then press “enter” on the keyboard to review the training. For example <code>Saya ingin membeli kopi susu</code>.</li>\n</ol>\n<p><img src=\"/assets/images/products/kata-platform/how-to/how-to-improve-your-chatbot-intelligence-by-training-your-nlu/image4.png\" alt=\"Image 4 alt\"></p>\n<blockquote>\n<p><strong>Figure 4</strong>: Training box.</p>\n</blockquote>\n<ol start=\"2\">\n<li>Next, you can preview the sentence first and tag your entities. You can block or double click in a word to tag a word. Then, it will show a dropdown to choose entities and labels in format <code>[entity name]:[label name]</code>. You can select a dropdown at the bottom of the entities list for tagging a sentence.</li>\n</ol>\n<p><img src=\"/assets/images/products/kata-platform/how-to/how-to-improve-your-chatbot-intelligence-by-training-your-nlu/image5.png\" alt=\"Image 5 alt\"></p>\n<blockquote>\n<p><strong>Figure 5</strong>: Tag a word using an entity type dictionary or phrase.</p>\n</blockquote>\n<p><img src=\"/assets/images/products/kata-platform/how-to/how-to-improve-your-chatbot-intelligence-by-training-your-nlu/image6.png\" alt=\"Image 6 alt\"></p>\n<blockquote>\n<p><strong>Figure 6</strong>: Tag a sentence using entity type trait.</p>\n</blockquote>\n<ol start=\"3\">\n<li>Click the <strong>Train</strong> button to submit training data.</li>\n</ol>\n<p>These are steps to train your NLU using bulk training:</p>\n<ol>\n<li>First, open your text and source code editor (Notepad, <a href=\"https://notepad-plus-plus.org/downloads/\" target=\"_blank\">notepad++</a>, <a href=\"https://www.sublimetext.com/\" target=\"_blank\">sublime</a>)</li>\n<li>Create a new file.</li>\n<li>You will create training data using a simple syntax. ”#’ for entity type “trait” and ”@” for entity type “phrase.”<ul>\n<li>Example for entity type trait: <code>Saya mau pesan pizza #intent:order</code>. It means the sentence is classified into an entity named “intent” with the label “order.”</li>\n<li>Example for entity type phrase and dictionary: <code>Saya mau pesan tiket ke (@destination Malang) atas nama (@ner:person Budi) #intent:order</code>. It means the word “Malang” is tagged for entity name “destination” and “Budi” is tagged for entity name “ner” with label “person.”</li>\n</ul>\n</li>\n<li>Save the following training data into <code>training-data-example.txt</code></li>\n<li>Go to <strong>NLU &gt; Training</strong> in Platform. Then, click on the <strong>Bulk Training</strong> button.</li>\n<li>Click on the <strong>Browse</strong> button to open the file explorer/finder or drag and drop the file into the browse file dialog.</li>\n<li>Wait for the upload process.</li>\n<li>After the upload is complete, you can review the training data file in the Platform.</li>\n</ol>\n<p><img src=\"/assets/images/products/kata-platform/how-to/how-to-improve-your-chatbot-intelligence-by-training-your-nlu/image7.png\" alt=\"Image 7 alt\"></p>\n<blockquote>\n<p><strong>Figure 7</strong>: Review training data</p>\n</blockquote>\n<ol start=\"9\">\n<li>Click on the <strong>Train</strong> button to train the data.</li>\n<li>You will see a customer satisfaction survey after using the feature. Fill in the survey, then click <strong>X</strong> to close the dialog.</li>\n<li>You have successfully trained your NLU with the uploaded data.</li>\n</ol>\n<p><img src=\"/assets/images/products/kata-platform/how-to/how-to-improve-your-chatbot-intelligence-by-training-your-nlu/image8.png\" alt=\"Image 8 alt\"></p>\n<blockquote>\n<p><strong>Figure 8</strong>: Successfully trained.</p>\n</blockquote>\n<p>Every training will make your NLU smarter, measured by a confidence score. The confidence score is how the NLU recognizes end-users input between 0 and 1.</p>\n<h2 id=\"test-your-nlu\">Test Your NLU</h2>\n<p>You can test if your NLU is good enough or wrong in the Kata Platform by using the Test NLU feature. These are the steps:</p>\n<ol>\n<li>Click the <strong>Test NLU</strong> button on the right bottom of your screen.</li>\n</ol>\n<p><img src=\"/assets/images/products/kata-platform/how-to/how-to-improve-your-chatbot-intelligence-by-training-your-nlu/image9.png\" alt=\"Image 9 alt\"></p>\n<blockquote>\n<p><strong>Figure 9</strong>: Test NLU location.</p>\n</blockquote>\n<ol start=\"2\">\n<li>Then, it will show a chat window.</li>\n<li>Type in the chatbox a sentence to test your NLU. The best practice is to prepare data training and data testing separately, but they must have similarities.</li>\n</ol>\n<p>When you enter a sentence or data testing, a result is shown. For example, here is how to read the result from the test NLU example:</p>\n<pre><code>{\n  &quot;id&quot;: &quot;abf78&quot;,\n  &quot;input&quot;: &quot;halo&quot;,\n  &quot;output&quot;: {\n    &quot;kata&quot;: [],\n    &quot;product&quot;: [],\n    &quot;Intent&quot;: [\n      {\n        &quot;type&quot;: &quot;trait&quot;,\n        &quot;value&quot;: &quot;bayar&quot;,\n        &quot;start&quot;: 0,\n        &quot;end&quot;: 4,\n        &quot;score&quot;: 0.8116588592529297,\n        &quot;label&quot;: &quot;bayar&quot;\n      }\n    ]\n  }\n}</code></pre><p>Let’s break them down!</p>\n<ol>\n<li>It is a sentence or word that you typed.</li>\n</ol>\n<pre><code>&quot;input&quot;: &quot;halo&quot;,</code></pre><ol start=\"2\">\n<li>Two entities are not detected by your input “halo” so that the results are null.</li>\n</ol>\n<pre><code>&quot;output&quot;: {\n    &quot;kata&quot;: [],\n    &quot;product&quot;: [],\n}</code></pre><ol start=\"3\">\n<li>There is a detected entity called “Intent” and the entity type is “trait.” Then, “start” and “end” mean character count from “hello”. Next, score means a confidence score from the NL model to predict the sentence or word from end-users. Lastly, the label labels under the entity that the word or sentence detected.</li>\n</ol>\n<pre><code>&quot;Intent&quot;: [\n      {\n        &quot;type&quot;: &quot;trait&quot;,\n        &quot;value&quot;: &quot;bayar&quot;,\n        &quot;start&quot;: 0,\n        &quot;end&quot;: 4,\n        &quot;score&quot;: 0.8116588592529297,\n        &quot;label&quot;: &quot;bayar&quot;\n      }\n]</code></pre><p>Finally, you understand the basics of creating NLU and how to train it. Now, let’s improve your knowledge by following our advanced guidelines to design NLU and training it.</p>\n<h2 id=\"advanced-guidelines-to-design-and-train-your-nlu\">Advanced guidelines to design and train your NLU</h2>\n<h3 id=\"designing-nlu\">Designing NLU</h3>\n<p>You can create NLU depending on your needs. The more complex an NLU, the larger training data is required to build it. A few things you must consider when designing an NLU are</p>\n<ol>\n<li>The total number of labels in an entity.</li>\n<li>NLU complexity impacts training process complexity as well.</li>\n<li>The total number of entities in an NLU. An entity will have its model, so the more entities you owned, then the longer the training process.</li>\n</ol>\n<p>In the next part, you will learn several suggestions to reduce complexity and make the training process easier.</p>\n<h4 id=\"first-suggestion-dividing-entity-type-trait-into-a-few-entities\">First suggestion: Dividing entity type “trait” into a few entities</h4>\n<p>If an entity has too many labels (e.g., 50 labels), it will require at least 50 training data. Moreover, you will need larger training data to reach a high prediction result score if sentences between labels are alike. To help this problem, you can break down labels from an entity into a few entities.</p>\n<p>For example, you have an entity type “intent” as follows</p>\n<p>NLU name: <code>nl-1</code>\nEntity name: <code>intent</code>\nEntity type: <code>trait</code>\nEntity profile: <code>intent</code>\nLabels:</p>\n<ul>\n<li><code>lupa_pin</code></li>\n<li><code>ganti_pin</code></li>\n<li><code>kartu_hilang</code></li>\n<li><code>buku_tabungan_hilang</code></li>\n<li><code>ganti_kartu</code></li>\n<li><code>ganti_buku_tabungan</code></li>\n<li><code>buat_kartu</code></li>\n<li><code>cara_daftar_nasabah</code></li>\n</ul>\n<p>You can break down it into 2 differents entities as follows</p>\n<p>NLU name: <code>nl-2</code></p>\n<p><strong>First entity</strong>\nEntity name: <code>intent</code>\nEntity type: <code>trait</code>\nEntity profile: <code>intent</code>\nLabels:</p>\n<ul>\n<li><code>lupa</code></li>\n<li><code>ganti</code></li>\n<li><code>ganti</code></li>\n<li><code>buat</code></li>\n<li><code>hilang</code></li>\n</ul>\n<p><strong>Second Entity</strong></p>\n<p>Entity name: <code>topic</code>\nEntity type: <code>trait</code>\nEntity profile: <code>topic</code>\nLabels:</p>\n<ul>\n<li><code>pin</code></li>\n<li><code>kartu</code></li>\n<li><code>buku_tabungan</code></li>\n<li><code>nasabah</code></li>\n</ul>\n<p>This method can increase your model prediction score by dividing the score into several groups of labels. From the example above, the first NLU <code>nl-1</code> will divide the prediction score 1.00 into 8 different labels for the <code>intent</code> entity. Otherwise, the second NLU <code>nl-2</code> will divide the prediction score 1.00 into 4 labels for the intent entity and 4 labels for the <code>topic</code> entity.</p>\n<div className=\"info\">\n    <img className=\"borderless\" src=\"/assets/images/icon-info.svg\" />\n    <p>\n        Important note: This suggestion is recommended if you have limited training data. If you have a large amount of training data or there are no problems with your current training data, this suggestion is unnecessary.\n    </p>\n</div>\n\n<h4 id=\"second-suggestion-utilize-profile-intent\">Second suggestion: Utilize profile “intent”</h4>\n<p>Another tip is to use an “intent” profile which is influenced by predictions from other models (type “phrase” or type “dictionary”). This way can make the training process if training data is limited and sentences form alike.</p>\n<div className=\"info\">\n    <img className=\"borderless\" src=\"/assets/images/icon-info.svg\" />\n    <p>Important note: This suggestion applies to entity type “trait” with “intent” profile only.</p>\n</div>\n\n<p>First example, given a training data</p>\n<pre><code>dimana tempat perpanjang sim paling dekat? #ask_nearby_simstnk\ndimana tempat perpanjang stnk sekitar sini? #ask_nearby_simstnk\ndimana kantor polisi terdekat? #ask_nearby_polisi</code></pre><p>And you have an NLU with the detail as follows:</p>\n<p>NLU name: <code>nl-v1</code>\nEntity name: <code>intent</code>\nEntity type: <code>trait</code>\nEntity profile: <code>intent</code>\nLabels:</p>\n<ul>\n<li><code>ask_nearby_simstnk</code></li>\n<li><code>ask_nearby_polisi</code></li>\n</ul>\n<p>This NLU can be changed into:</p>\n<p>NLU name: <code>nl-v2</code>\n<strong>First entity</strong>\nEntity name: <code>simstnk</code>\nEntity type: <code>dict</code>\nEntity profile: <code>default</code>\nKey: <code>sim</code>\nLabels:</p>\n<ul>\n<li><code>sim</code></li>\n<li><code>surat izin mengemudi</code>\nKey: <code>stnk</code>\nLabels:</li>\n<li><code>stnk</code></li>\n<li><code>surat tanda kendaraan bermotor</code></li>\n</ul>\n<p><strong>Second entity</strong>\nEntity name: <code>intent</code>\nEntity type: <code>trait</code>\nEntity profile: <code>intent</code>\nLabels</p>\n<ul>\n<li><code>ask_nearby_simstnk</code></li>\n<li><code>ask_nearby_polisi</code></li>\n</ul>\n<p>NLU <code>nl-v2</code> will make the training process faster because the words <code>sim</code> and <code>stnk</code> are in one similar category which is <code>simstnk</code>.</p>\n<p>However, there is a case that you need to be aware of. An “intent” profile <strong>can remove</strong> the detailed information. Here is an example.</p>\n<p>The second example, given training data.</p>\n<pre><code>resep untuk membuat pizza bbq apa ya? #ask_bbq_recipe\npizza pepperoni gimana cara buatnya ya? #ask_pepperoni_recipe\nkasih tau dong resep pizza aas buatanmu #ask_aas_recipe</code></pre><p>Then, you will have an NLU.</p>\n<p>NLU name: <code>nl-v1</code>\nEntity name: <code>intent</code>\nEntity type: <code>trait</code>\nEntity profile: <code>intent</code>\nLabels:</p>\n<ul>\n<li><code>ask_bbq_recipe</code></li>\n<li><code>ask_pepperoni_recipe</code></li>\n<li><code>ask_aas_recipe</code></li>\n</ul>\n<p>Next, you change the NLU structure into this:</p>\n<p>NLU name: <code>nl-v2</code>\n<strong>First entity</strong>\nEntity name: <code>pizza</code>\nEntity type: <code>dict</code>\nEntity profile: <code>default</code>\nKey: <code>bbq</code>\nLabels:</p>\n<ul>\n<li><code>bbq</code></li>\n<li><code>barbeque</code>\nKey: <code>pepperoni</code>\nLabels:</li>\n<li><code>pepperoni</code></li>\n<li><code>peperoni</code>\nKey: <code>aas</code>\nLabels:</li>\n<li><code>aas</code></li>\n<li><code>american all star</code></li>\n</ul>\n<p><strong>Second entity</strong>\nEntity name: <code>intent</code>\nEntity type: <code>trait</code>\nEntity profile: <code>intent</code>\nLabels:</p>\n<ul>\n<li><code>ask_bbq_recipe</code></li>\n<li><code>ask_pepperoni_recipe</code></li>\n<li><code>ask_aas_recipe</code></li>\n</ul>\n<p>The <code>intent</code> entity in <code>nlu-v1</code> can recognize the differentiation between labels. Otherwise, <code>nl-v2</code> cannot acknowledge it because <code>bbq</code>, <code>pepperoni</code> and <code>aas</code> are set up as one category <code>pizza</code>. If users input a sentence <code>resep buat bbq apa ya?</code>, the score will show the same results from all labels.</p>\n<p>If you still want to use “dictionary” type for this second example, you can try this way.</p>\n<p>NLU name: <code>nl-v3</code>\n<strong>First entity</strong>\nEntity name: <code>pizza</code>\nEntity type: <code>dict</code>\nEntity profile: <code>default</code>\nKey: <code>bbq</code>\nLabels:</p>\n<ul>\n<li><code>bbq</code></li>\n<li><code>barbeque</code>\nKey: <code>pepperoni</code>\nLabels:</li>\n<li><code>pepperoni</code></li>\n<li><code>peperoni</code>\nKey: <code>aas</code>\nLabels:</li>\n<li><code>aas</code></li>\n<li><code>american all star</code></li>\n</ul>\n<p><strong>Second entity</strong>\nEntity name: <code>intent</code>\nEntity type: <code>trait</code>\nEntity profile: <code>intent</code>\nLabels:</p>\n<ul>\n<li><code>ask_pizza_recipe</code></li>\n</ul>\n<p>The <code>nl-v3</code> can recognize a sentence has <code>ask_pizza_recipe</code> intent and can specify which pizza by using <code>pizza</code> entity.</p>\n<p>This method is helpful to make your bot easy to understand limited words such as product names. Otherwise, this suggestion is not recommended if you’re using generic words.</p>\n<h4 id=\"third-suggestion-dividing-nlu\">Third suggestion: Dividing NLU</h4>\n<p>A bot can have multiple NLU. Here are a few cases in which NLU can be divided.</p>\n<h5 id=\"use-specific-nlu-for-certain-flows\">Use specific NLU for certain flows</h5>\n<p>Some flows in a bot may have a particular NLU for a flow, which means input to trigger the flow is different from other flows. This way can reduce the number of listed labels in an entity and ease the prediction process. Examples:</p>\n<ul>\n<li>Using <code>credential</code> NLU which is executed when the user first interacts with the bot.</li>\n<li>Using <code>order</code> NLU in commerce bot will be executed when the user chooses the order menu.</li>\n</ul>\n<h5 id=\"use-specific-nlu-for-certain-states\">Use specific NLU for certain states</h5>\n<p>Few states in a bot may have similar input, but have different meanings depending on what states are running. You can configure the NLU in state condition. Examples:</p>\n<ul>\n<li><code>YesNo</code> NLU can be used in overall flows but shall be specified in states that require end-users confirmation.</li>\n</ul>\n<div className=\"info\">\n    <img className=\"borderless\" src=\"/assets/images/icon-info.svg\" />\n    <p>\n        Note: You can use these methods if you have too many labels, data between labels are alike, a limited number of training data, predictions result is not optimal yet, or found other problems. But if your NLU is fine, you can create an entity with many labels.\n    </p>\n</div>\n\n<h3 id=\"training-guideline\">Training Guideline</h3>\n<p>The training process is required to make a bot response to end-users messages and requires training data.</p>\n<p>In NLU, a training process will also train all models (read: entities). For example,\n<code>NLU-A</code> has <code>entity-1</code>, <code>entity-2</code>, and <code>entity-3</code>. Because each entity owns its models, <code>NLU-A</code> has 3 models that run individually. If you input training data for <code>NLU-A</code>, you train <code>entity-1</code>, <code>entity-2</code>, and <code>entity-3</code> models.</p>\n<p>Here are suggestions that you need to consider in the training process</p>\n<h4 id=\"add-various-forms-of-language\">Add various forms of language</h4>\n<p>Input training data with various forms such as formal, informal, slang, long or short sentences. If you only train a form (e.g., formal), then the model may understand formal sentences.</p>\n<h4 id=\"avoid-imbalanced-data-between-labels\">Avoid imbalanced data between labels</h4>\n<p>The imbalanced data affect bias between labels. A small amount of imbalanced data is not a problem. However, if you have a large amount of imbalanced data, the predictions result too significant on specific labels and a bias.</p>\n<h4 id=\"add-counter-training\">Add “counter-training”</h4>\n<p>Counter-training means you input training data that is not classified to current labels. For example,</p>\n<ul>\n<li>0You have an entity that can predict book genres into 3 categories (read: labels) <code>horror</code>, <code>fiction</code>, and <code>biography</code>. Each label has been trained and can recognize each genre.</li>\n<li>Then, an input is entered with a new category named <code>history</code>.</li>\n<li>Because the model only distinguishes between the 3 labels and assumes that each book must be categorized into 3 labels, the model cannot answer not <code>all three</code> or <code>none</code>.</li>\n</ul>\n<p>To make the model understand <code>history</code> input, you have to enter training data without giving any intent/tags.</p>\n<h4 id=\"add-a-new-label-to-the-trained-entity\">Add a new label to the trained entity</h4>\n<p>If you want to add a new label, train the label with a similar total amount of training with current labels. For example,</p>\n<ul>\n<li>You have an entity with 5 labels. Each label has 10 training data.</li>\n<li>Then, you add a new label. Your next step will be to train the label equal to or more than 10 training data.</li>\n<li>The final step is to train the other 5 labels with a few training data.</li>\n</ul>\n<h4 id=\"ambiguous-data\">Ambiguous data</h4>\n<p>Avoid preparing ambiguous training data into different labels. Ambiguous data means you input the same training data, but the context depends on what end-users asked. For example,</p>\n<ul>\n<li>End-user sends the word <code>sudah</code> if your bot asks a question about <code>apakah sudah makan?</code> (Smalltalk flow) or <code>apakah sudah menikah?</code> (Credential flow).</li>\n<li>Both sentences can be recognized as <code>intent:doneEating</code> (read: entity <code>intent</code> with label <code>doneEating</code>) or <code>intent:married</code> (read: entity <code>intent</code> with label <code>married</code>).</li>\n</ul>\n<p>To reduce this ambiguity case, you shall prepare training data as follows</p>\n<ul>\n<li>Input training data such as <code>sudah menikah</code> in <code>intent: married</code>. There is an additional word <code>menikah</code> that could distinguish the labels.</li>\n<li>For the word <code>sudah</code>, train it to a different label such as <code>intent:done</code>. For the bot implementation, you shall put a condition <code>intent == “done”</code> for states executed when end-users said <code>sudah</code> word.</li>\n</ul>\n<h3 id=\"relationship-between-bot-nl-and-training-process\">Relationship between bot, NL, and training process.</h3>\n<ul>\n<li><strong>Bot development</strong>, <strong>used NL in bot</strong>, and <strong>training process is influencing each other</strong>. Bot implementation can process some limitations encountered in NL results through the bot.</li>\n<li><strong>NL complexity is affected by bot complexity</strong>. So, the more complex a bot, the more complex the NL will be and the more training data.</li>\n<li>For NL, <strong>it is possible to mispredict a few data</strong>. It is a <strong>usual</strong> case. You can solve this by adding training data or post-processing in the bot.</li>\n</ul>\n<p>This is the end of the guidance. You can contact <a href=\"mailto:support@kata.ai\">support@kata.ai</a> if you have any difficulties when implementing this.</p>\n",
      "title": "How to Improve Your Chatbot Intelligence by Training Your NLU",
      "prev": "how-to-deploy-your-chatbot-using-generic-channel",
      "next": "how-to-use-nlu-threshold-to-enhance-customer-experience",
      "excerpt": "<p>Natural Language Understanding (NLU) is a computer&apos;s ability to transform a text message into a structured object. In the Kata Platform, NLU is a place for users to design and build their NLU capability for their conversational AI product. &#x2018;</p>",
      "meta": {
        "relativePath": "how-to\\how-to-improve-your-chatbot-intelligence-by-training-your-nlu.html",
        "createdAt": "2022-01-28T00:46:29.221Z",
        "lastModified": "2022-01-28T00:46:29.221Z",
        "size": 20734,
        "formattedSize": "20.2 KB"
      }
    },
    {
      "id": "how-to-use-bulk-training-for-faster-training-process",
      "contents": "<h2 id=\"what-is-bulk-training\">What is Bulk Training</h2>\n<p>Great NL models are a fundamental part of making a great chatbot and approximately 70% of all chatbot projects use NL models instead of a keyword-based approach, based on our Kata.ai projects data.</p>\n<p>Previously, the bulk training process was very technical because developers needed to use KataCLI and view the results on the Platform GUI (<a href=\"https://platform.kata.ai\" target=\"_blank\"><span>http</span>s://platform.kata.ai</a>). This back and forth switching of tools was required to do training.</p>\n<p>Now, you can use the new Bulk Training on the Platform GUI itself to train more than 200 sentences/training data at once. These are the screenshots of our newest feature.</p>\n<p><img src=\"/assets/images/products/kata-platform/how-to/how-to-use-bulk-training-to-the-faster-training-process/image1.png\" alt=\"Image 1 Alt\"></p>\n<blockquote>\n<p><strong>Figure 1</strong>: Upload training data file</p>\n</blockquote>\n<p><img src=\"/assets/images/products/kata-platform/how-to/how-to-use-bulk-training-to-the-faster-training-process/image2.png\" alt=\"Image 2 Alt\"></p>\n<blockquote>\n<p><strong>Figure 2</strong>: Preview from uploaded training data from file</p>\n</blockquote>\n<p>You can click on this <a href=\"https://www.youtube.com/watch?v=qcxQqMI-Khs\" target=\"_blank\">video tutorial</a> or go to the <strong>NLU -&gt; Training menu</strong> (check the screenshot below).</p>\n<p><img src=\"/assets/images/products/kata-platform/how-to/how-to-use-bulk-training-to-the-faster-training-process/image3.png\" alt=\"Image 3 Alt\"></p>\n<blockquote>\n<p><strong>Figure 3</strong>: Video tutorial in bulk training</p>\n</blockquote>\n<h2 id=\"why-do-we-need-this-feature\">Why Do We Need This Feature?</h2>\n<p>Training NL models is one of the most time-consuming processes in chatbot development, which could take approximately 6 weeks. On average, a complex chatbot project requires 1,000 data for their NL models. It’s not ideal to train the sentences one by one, as a typical 1,000-sentence NL model would easily take more than 4 hours to train.</p>\n<p>Hence, bulk training can significantly reduce the training effort with a simplified user flow</p>\n<h2 id=\"how-to-use-bulk-training\">How to Use Bulk Training</h2>\n<h3 id=\"create-a-project\">Create a Project</h3>\n<p>Mission: Create a new project.\nPrerequisite: You already have a Platform account and have logged in.</p>\n<ol>\n<li>Click on the <strong>Create Project</strong> button.</li>\n<li>Fill in the required fields for the project.</li>\n<li>Click <strong>Create Project</strong>.</li>\n</ol>\n<h3 id=\"create-entities-and-labels-with-type-trait\">Create Entities And Labels With Type &quot;trait&quot;</h3>\n<p>Mission: Create NL models to be trained and type entity “trait”. Learn more about entity type “trait”.\nPrerequisites: You already have a project.</p>\n<ol>\n<li>Go to <strong>NLU</strong>.</li>\n<li>Click on <strong>Entities</strong>.</li>\n<li>Click the <strong>Create Entity</strong> button to start creating entities and labels. Learn more about entities and labels or you may want to explore how to design the NLU.</li>\n<li>Fill in fields with this example.</li>\n</ol>\n<pre><code>Entity name: intent\nType: trait\nProfile: default - Text classification</code></pre><ol start=\"5\">\n<li>To create labels, you need to type and press “enter” to save a new label. Fill in with these examples.</li>\n</ol>\n<pre><code>Labels: greetings, thank you</code></pre><ol start=\"6\">\n<li>The result goes here:</li>\n</ol>\n<p><img src=\"/assets/images/products/kata-platform/how-to/how-to-use-bulk-training-to-the-faster-training-process/image4.png\" alt=\"Image 4 Alt\"></p>\n<blockquote>\n<p><strong>Figure 4</strong>: Create entity type “trait”</p>\n</blockquote>\n<ol start=\"7\">\n<li>Click <strong>Create</strong> to create a new entity with &quot;greetings&quot; and &quot;thank you&quot; labels.</li>\n</ol>\n<h3 id=\"create-entities-and-labels-with-type-phrase\">Create Entities And Labels With Type &quot;phrase&quot;</h3>\n<p>Mission: Create NL models to be trained and type entity “phrase”. Learn more about entity type “trait”.\nPrerequisites: You already have a project.</p>\n<ol>\n<li>Click the <strong>Create Entity</strong> button to start creating entities and labels. Learn more about entities and labels or you may want to explore how to design the NLU</li>\n<li>Fill in fields with these examples:</li>\n</ol>\n<pre><code>Entity name: object\nType: phrase\nProfile: default - Default phrase</code></pre><ol start=\"3\">\n<li>To create labels, you need to type and press “enter” to save a new pile. Fill in with this example:</li>\n</ol>\n<pre><code>Labels: person</code></pre><ol start=\"4\">\n<li>The result goes here:</li>\n</ol>\n<p><img src=\"/assets/images/products/kata-platform/how-to/how-to-use-bulk-training-to-the-faster-training-process/image5.png\" alt=\"Image 5 Alt\"></p>\n<blockquote>\n<p><strong>Figure 5</strong>: Create entity type “phrase”</p>\n</blockquote>\n<h3 id=\"guideline-to-create-a-training-data\">Guideline to Create a Training Data</h3>\n<p>Before we use the NL bulk training, we will create training data using a simple syntax. “#’ for entity type “trait” and “@” for entity type “phrase”. Learn more about entity type “trait” and entity type “phrase”.</p>\n<p>This syntax is only allowed for entity type “trait”</p>\n<pre><code>Saya mau pesan pizza #intent:order</code></pre><p>This means that the sentence is classified into <strong>entity name: intent</strong> with <strong>label: order</strong></p>\n<pre><code>Totalnya berapa ya? #intent:ask #questionType:how_much</code></pre><p>This means that the sentence is classified into <strong>entity name: intent</strong> with <strong>label: order</strong> and <strong>entity name: questionType</strong> with <strong>label: how_much</strong></p>\n<p>This syntax is only allowed for entity type “phrase”</p>\n<pre><code>Saya mau pesan tiket ke (@destination Malang) atas nama (@ner:person Budi) #intent:order</code></pre><p>This means that the word “Malang” is tagged for <strong>entity name: destination</strong> and “Budi” is tagged for <strong>entity name: ner</strong> with <strong>label: person</strong></p>\n<h3 id=\"create-new-training-data\">Create New Training Data</h3>\n<p>Mission: Create new training data in a .txt extension file. In this step, you will need to open a text and source code editor such as Notepad (in Windows), <a href=\"https://notepad-plus-plus.org/downloads/\" target=\"_blank\">notepad++</a>, <a href=\"https://www.sublimetext.com/\" target=\"_blank\">Sublime</a>, etc.\nPrerequisites: You already have a project and entities.</p>\n<ol>\n<li>Open your text and source code editor (Notepad, notepad++, sublime, etc.)</li>\n<li>Create a new file.</li>\n<li>Type following sentences example to create training data to train our NL models. You can add up to 200 sentences/training data. Or, you can download <a href=\"https://drive.google.com/file/d/1ErLuDwa6_1hyfnV7zVNBrlleE7l3KCb0/view\" target=\"_blank\">this example</a>.</li>\n</ol>\n<pre><code>selamat pagi #intent:greetings\nwelcome #intent:greetings\nnama saya (@object:person amanda), salam kenal ya #intent:greetings\nkemarin saya lihat (@object:person amanda) dan (@object:person rizyan) bercengkerama\nhari ini cerah ya kata (@object:person destri)\nmorning everyone!! #intent:greetings</code></pre><ol start=\"4\">\n<li>Save the following training data into a file named: training-data-example.txt</li>\n</ol>\n<h3 id=\"upload-training-data-and-perform-data-training\">Upload Training Data And Perform Data Training</h3>\n<p>Mission: Upload training data to be previewed in Platform GUI.\nPrerequisites: Training data has been created as a .txt extension file.</p>\n<ol>\n<li>Go to <strong>NLU &gt; Training</strong> in Platform.</li>\n<li>Click on the <strong>Bulk Training</strong> button.</li>\n<li>Click on <strong>Browse</strong> button to open the file explorer/finder or drag and drop the file into the browse file dialog.</li>\n<li>Wait for the upload process.</li>\n<li>After the upload is complete, you can review the training data file in Platform GUI.</li>\n</ol>\n<p><img src=\"/assets/images/products/kata-platform/how-to/how-to-use-bulk-training-to-the-faster-training-process/image6.png\" alt=\"Image 6 Alt\"></p>\n<blockquote>\n<p><strong>Figure 6</strong>: Preview training data</p>\n</blockquote>\n<ol start=\"6\">\n<li>Click on the <strong>Train</strong> button to train the data.</li>\n<li>You will see a customer satisfaction survey after using the feature.</li>\n<li>Fill in the survey, then click <strong>X</strong> to close the dialog.</li>\n<li>You have successfully trained your NL model with the uploaded data.</li>\n</ol>\n<p><img src=\"/assets/images/products/kata-platform/how-to/how-to-use-bulk-training-to-the-faster-training-process/image7.png\" alt=\"Image 7 Alt\"></p>\n<blockquote>\n<p><strong>Figure 7</strong>: Successfully trained the training data</p>\n</blockquote>\n<h2 id=\"error-messages\">Error Messages</h2>\n<p>During the upload process, you might receive any of the error messages below. Let’s see what they are and how to solve each one of the errors.</p>\n<h3 id=\"your-file-wont-be-uploaded-if-you-close-the-dialog-box-now\">Your File Won’t Be Uploaded if You Close The Dialog Box Now.</h3>\n<p>It will show if you’re trying to close the upload dialog box or click the <strong>X</strong> symbol during the file uploading process. Please do not click the <strong>X</strong> button.</p>\n<p><img src=\"/assets/images/products/kata-platform/how-to/how-to-use-bulk-training-to-the-faster-training-process/image8.png\" alt=\"Image 8 Alt\"></p>\n<blockquote>\n<p><strong>Figure 8</strong>: Showing warning message if you click “x” button.</p>\n</blockquote>\n<h3 id=\"invalid-file-format-only-txt-files-are-supported\">Invalid File Format. Only .txt Files Are Supported.</h3>\n<p>This error message will be displayed if you uploaded different types of files. Bulk Training feature only accept .txt file format.</p>\n<p><img src=\"/assets/images/products/kata-platform/how-to/how-to-use-bulk-training-to-the-faster-training-process/image9.png\" alt=\"Image 9 Alt\"></p>\n<blockquote>\n<p><strong>Figure 9</strong>: Showing error message if you’re uploading not .txt format.</p>\n</blockquote>\n<h3 id=\"your-txt-file-is-empty\">Your .txt File is Empty</h3>\n<p>If you uploaded an empty .txt file, this error message will be shown. Please check and make sure you have written the data training content in the .txt file. For more about the data training file format, please refer to the [#guideline-to-create-a-training-data](guideline to create training data).</p>\n<p><img src=\"/assets/images/products/kata-platform/how-to/how-to-use-bulk-training-to-the-faster-training-process/image10.png\" alt=\"Image 10 Alt\"></p>\n<blockquote>\n<p><strong>Figure 10</strong>: Showing error that your file does not have any script inside it.</p>\n</blockquote>\n<h3 id=\"your-connection-was-interrupted-please-check-your-connection-try-again\">Your Connection Was Interrupted. Please Check Your Connection. Try again.</h3>\n<p>If your internet connection was interrupted during the upload process, this error message will be shown. Please make sure that your internet connection is stable and re-upload the data training file again.</p>\n<p><img src=\"/assets/images/products/kata-platform/how-to/how-to-use-bulk-training-to-the-faster-training-process/image11.png\" alt=\"Image 11 Alt\"></p>\n<blockquote>\n<p><strong>Figure 11</strong>: Showing error message that your connection is bad and has interrupted training data uploading process.</p>\n</blockquote>\n<h3 id=\"the-txt-file-contains-entities-or-labels-that-you-dont-currently-have-please-check-your-file-or-entities\">The .txt File Contains Entities or Labels That You Don&#39;t Currently Have. Please Check Your File or Entities.</h3>\n<p>This error message will be displayed if your data training file contains no entities or labels that matched your current entities on the project. Please check your NL project then go to the entities menu and create the entities or labels that you want to train with the Bulk Training feature.</p>\n<p>This is the end of the guidance. You can contact <a href=\"mailto:support@kata.ai\">support@kata.ai</a> if you have any difficulties when implementing this.</p>\n",
      "title": "How to Use Bulk Training For Faster Training Process",
      "prev": "how-to-use-training-data-generator-to-automate-generating-training-data",
      "next": "using-custom-api-to-access-third-party-application",
      "excerpt": "<p>Great NL models are a fundamental part of making a great chatbot and approximately 70% of all chatbot projects use NL models instead of a keyword-based approach, based on our Kata.ai projects data.</p>",
      "meta": {
        "relativePath": "how-to\\how-to-use-bulk-training-for-faster-training-process.html",
        "createdAt": "2022-01-28T04:05:29.615Z",
        "lastModified": "2022-01-28T04:05:29.615Z",
        "size": 10340,
        "formattedSize": "10.1 KB"
      }
    },
    {
      "id": "how-to-use-nlu-threshold-to-enhance-customer-experience",
      "contents": "<h2 id=\"introduction\">Introduction</h2>\n<p>In general, the incoming message flow is:</p>\n<ol>\n<li>An incoming message is caught by intent.</li>\n<li>Next, the intent will check in NLUs previously added using Add classifier and Add attribute features. You can add more than 1 NLUs. Then it enables the intent to check all NLUs.</li>\n<li>Then, NLUs will check the threshold. The threshold can act as a confidence level, and these values range from 0.0 (completely uncertain) to 1.0 (completely confident). This confidence level is usually set between 0.7 to 0.8. Finally, NLUs will check whether the confidence score from the incoming message is lower or higher than the threshold?<ul>\n<li>If an incoming message is <strong>lower</strong> than the threshold, NLUs will send bot information that the incoming message is incorrect with what NLU had recognized. Then, the intent will be checked by other NLUs.</li>\n<li>If an incoming message is <strong>equal to or higher</strong> than the threshold, NLUs will send information that the condition is correct.</li>\n</ul>\n</li>\n<li>If NLUs condition has matched, then intent will send information to a bot that incoming message from the end-user is recognized as intent <code>“yesNL”</code> (for example).</li>\n<li>Then, the bot will check the following action if an intent condition has been fulfilled. For example, if the transition has condition <code>intent==‘yesNL’</code>, then the bot will execute the next state connected between the transition. Check the image below for more detail.</li>\n</ol>\n<p><img src=\"/assets/images/products/kata-platform/how-to/how-to-use-nlu-threshold-to-enhance-customer-experience/image1.png\" alt=\"Image 1 alt\"></p>\n<blockquote>\n<p><strong>Figure 1</strong>: Transition example which condition has intent using NLU.</p>\n</blockquote>\n<h2 id=\"how-to-use\">How to Use</h2>\n<p>To integrate NLU can be implemented in chatbot, these are the steps:</p>\n<ol>\n<li>First, in the Kata Platform, go to the <strong>Flow</strong> menu. Then, click the <strong>NLUs</strong> menu in the sidebar.</li>\n</ol>\n<p><img src=\"/assets/images/products/kata-platform/how-to/how-to-use-nlu-threshold-to-enhance-customer-experience/image2.png\" alt=\"Image 2 alt\"></p>\n<blockquote>\n<p><strong>Figure 2</strong>: NLUs position in sidebar.</p>\n</blockquote>\n<ol start=\"2\">\n<li>Click on the <strong>Create NLU</strong> button. Then it will show a form on the right screen.</li>\n<li>Fill in NLUs name and choose an NLU Type. For this guide, you will select <strong>NL</strong>.</li>\n<li>On the <strong>NLU ID</strong> search and dropdown, you will search your NLU to integrate it into your chatbot. NLU ID consists of username and project with format <code>[username]:[project name]</code>. For example, in the <a href=\"/kata-platform/documentation-content/start-your-first-chatbot\">getting started chatbot section</a>, your NLU ID format is <code>muhfadhiilkata:test_simple_bot</code>. You can use NLU ID from another project as long as the project is set as public.</li>\n<li><strong>Threshold</strong> can act as a confidence level, and these values range from 0.0 (completely uncertain) to 1.0 (completely confident). This confidence level is usually set between 0.7 to 0.8. So the data that falls under 0.7/0.8 will not be detected by the bot. The field only allows numbers and decimals to separate using the “.” character.</li>\n<li><strong>As Intent</strong> is a feature to collect available labels in the NLU. The field only allows alphanumerics.</li>\n<li><strong>Output</strong> has several output types, depending on the entity type you used.</li>\n</ol>\n<table>\n<thead>\n<tr>\n<th>Output Types</th>\n<th>Functionals</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>Raw</td>\n<td>Use this output type if your entity type is “trait”. It will result in raw sentences.</td>\n</tr>\n<tr>\n<td>Dictionary</td>\n<td>Use this output type if your entity type is “dictionary”. It will result in an array consisting of keys and labels.</td>\n</tr>\n<tr>\n<td>Phrase</td>\n<td>Using supermodel “kata entity”, you must use this output type.</td>\n</tr>\n</tbody></table>\n<ol start=\"8\">\n<li><strong>Path</strong> is a feature to support integration with Supermodel.</li>\n<li>Click <strong>Create</strong> to finish your NLUs.</li>\n</ol>\n<p>For example, you must integrate an NLU ID <code>muhfadhiilkata:test_simple_bot</code>, which has 1 entity name “topic” and entity type is “trait”, to an intent named “topic”. The entity “topic” has 2 labels: <code>FAQ</code>, <code>order</code>, and <code>buy</code>.</p>\n<p>The first step is you will fill in the NLUs form as follows:</p>\n<pre><code>NLU Name: topic-nl\nNLU Type: NL\nNLU ID: muhfadhiilkata:test_simple_bot\nThreshold: 0.8\nAs Intent: topic\nOutput: Raw</code></pre><p>Next, you will define this NLU inside an intent. So, you will create an intent named “topic”.</p>\n<ol>\n<li>Go to the <strong>Conversation Flows</strong> menu, then click on the <strong>Intent</strong> tab.</li>\n</ol>\n<p><img src=\"/assets/images/products/kata-platform/how-to/how-to-use-nlu-threshold-to-enhance-customer-experience/image3.png\" alt=\"Image 3 alt\"></p>\n<blockquote>\n<p><strong>Figure 3</strong>: Intent tab position.</p>\n</blockquote>\n<ol start=\"2\">\n<li>Click the <strong>Create Intent</strong> button. Then a form will show on the right screen.</li>\n<li>In Intent <strong>Type</strong>, choose <strong>Text</strong> to start setup.</li>\n<li>Next, click the button <strong>Add classifier</strong>. This feature enables you to insert your NLUs inside the intent, so intent can match whether end-user input is understandable by the NLU or not. First, there is a dropdown to choose available NLUs, then select “topic-nl”.</li>\n</ol>\n<p><img src=\"/assets/images/products/kata-platform/how-to/how-to-use-nlu-threshold-to-enhance-customer-experience/image4.png\" alt=\"Image 4 alt\"></p>\n<blockquote>\n<p><strong>Figure 4</strong>: Add classifier feature.</p>\n</blockquote>\n<ol start=\"5\">\n<li>Then, click the button <strong>Add attribute</strong>. This feature enables you to insert your NLUs inside the intent, similar to the Add Classifier feature, with differentiation that bot developers can create a condition in the state or transition by using the entity’s label. It is because an attribute is a variable that has an array form.</li>\n</ol>\n<p><img src=\"/assets/images/products/kata-platform/how-to/how-to-use-nlu-threshold-to-enhance-customer-experience/image5.png\" alt=\"Image 5 alt\"></p>\n<blockquote>\n<p><strong>Figure 5</strong>: Add classifier feature.</p>\n</blockquote>\n<ol start=\"6\">\n<li>Click <strong>Create</strong> to create an intent.</li>\n</ol>\n<h2 id=\"test-your-chatbot\">Test Your Chatbot</h2>\n<ol>\n<li>To test your chatbot, you can see it in the bottom right corner of your screen.</li>\n</ol>\n<p><img src=\"/assets/images/products/kata-platform/how-to/how-to-use-nlu-threshold-to-enhance-customer-experience/image6.png\" alt=\"Image 6 alt\"></p>\n<blockquote>\n<p><strong>Figure 6</strong>: Emulator location.</p>\n</blockquote>\n<ol start=\"2\">\n<li>Click the <strong>Test Chatbot</strong> to start.</li>\n<li>Type a sentence or word.</li>\n<li>You can see incoming messages that you typed (blue color) and bot response (white color) by clicking the eye icon under the message bubble.</li>\n</ol>\n<p><img src=\"/assets/images/products/kata-platform/how-to/how-to-use-nlu-threshold-to-enhance-customer-experience/image7.png\" alt=\"Image 7 alt\"></p>\n<blockquote>\n<p><strong>Figure 7</strong>: View detail in incoming message and outgoing message.</p>\n</blockquote>\n<p>Here is how to read the incoming message:</p>\n<p><img src=\"/assets/images/products/kata-platform/how-to/how-to-use-nlu-threshold-to-enhance-customer-experience/image8.png\" alt=\"Image 8 alt\"></p>\n<blockquote>\n<p><strong>Figure 8</strong>: Incoming message example.</p>\n</blockquote>\n<ul>\n<li>“type” means message source which is from the emulator</li>\n<li>“owner” means the account that typed the message.</li>\n</ul>\n<p>For outgoing messages or bot responses, here is how to read them.</p>\n<p><img src=\"/assets/images/products/kata-platform/how-to/how-to-use-nlu-threshold-to-enhance-customer-experience/image9.png\" alt=\"Image 9 alt\"></p>\n<blockquote>\n<p><strong>Figure 9</strong>: Incoming message example.</p>\n</blockquote>\n<ul>\n<li><strong>“type”</strong> means executed action type. For this example, it uses a text action type.</li>\n<li><strong>“content”</strong> means your message to test the bot.</li>\n<li><strong>“action”</strong> means executed action name.</li>\n<li><strong>“flow”</strong> means executed flow name.</li>\n<li><strong>“intent”</strong> means which intent recognized your message.</li>\n</ul>\n<p>This is the end of the guidance. You can contact <a href=\"mailto:support@kata.ai\">support@kata.ai</a> if you have any difficulties when implementing this.</p>\n",
      "title": "How to Use NLU Threshold to Enhance Customer Experience",
      "prev": "how-to-improve-your-chatbot-intelligence-by-training-your-nlu",
      "next": "how-to-use-super-model-to-improve-your-bot-intelligence",
      "excerpt": "<p>In general, the incoming message flow is:</p>",
      "meta": {
        "relativePath": "how-to\\how-to-use-nlu-threshold-to-enhance-customer-experience.html",
        "createdAt": "2022-01-27T05:49:26.403Z",
        "lastModified": "2022-01-27T05:49:26.403Z",
        "size": 7927,
        "formattedSize": "7.7 KB"
      }
    },
    {
      "id": "how-to-use-super-model-to-improve-your-bot-intelligence",
      "contents": "<h2 id=\"introduction\">Introduction</h2>\n<p>Super Model or Kata Entity is a highly maintained entity that you can use right out of the box. This feature lets you build your NL faster and easier without training. This model lets you extract specific words in a sentence, like a person’s name, location, and more.</p>\n<p>This entity will be added automatically when you create a new project on the Entities page. Also, you can use this entity right away without adding any training data. Kata maintains the model for this entity, and all users will automatically get the updated version whenever Kata improves it.</p>\n<div className=\"info\">\n    <img className=\"borderless\" src=\"/assets/images/icon-info.svg\" />\n    <div>\n        <p>Important:\n            <ul>\n                <li>Training this entity won’t affect the prediction result, but we encourage you to do so if you find any\n                mispredictions, as we will use it to improve the models.</li>\n                <li>Once you <b>delete</b> this entity, you can’t retrieve it back, be careful when doing this.\n                If you want to use the entity, you can create a new project again.</li>\n            </ul>\n        </p>\n    </div>\n</div>\n\n<p>These are steps to access the feature:</p>\n<ol>\n<li>First, go to your <strong>project</strong>, then click <strong>NLU</strong>.</li>\n<li>You will see an automatically generated entity named “kata”, the supermodel.</li>\n<li>You can see the model detail by clicking the card. Then it will show available labels.</li>\n</ol>\n<p>Here is the explanation of each label and examples of what the Super Model can automatically identify words.</p>\n<table>\n<thead>\n<tr>\n<th>Label</th>\n<th>Description</th>\n<th>Examples</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>Person</td>\n<td>Person’s name</td>\n<td>Budi, Siti, Rina Putri</td>\n</tr>\n<tr>\n<td>Location</td>\n<td>General location, city, country, address</td>\n<td>Jakarta, Indonesia, Jln Pangeran Antasari 18A</td>\n</tr>\n<tr>\n<td>Email</td>\n<td>General email</td>\n<td><a href=\"mailto:business@mail.com\">business@mail.com</a>, <a href=\"mailto:jobs@company.com\">jobs@company.com</a></td>\n</tr>\n<tr>\n<td>Phone</td>\n<td>General phone</td>\n<td>+62 80123456789, (021) 3456789, 021-5678-9012</td>\n</tr>\n<tr>\n<td>Datetime</td>\n<td>Date and time</td>\n<td>hari ini, 17 Agustus 1945, tahun 2019, besok, 17/9/45, jam 3 siang, pagi ini, 19:00</td>\n</tr>\n<tr>\n<td>Number</td>\n<td>Number in digit, number in word, sequence of number, mix number in digit and word</td>\n<td>123, 92, 9.000, satu, dua, tiga ribu, dua tiga, delapan tujuh, 9 juta, 5rb</td>\n</tr>\n<tr>\n<td>Currency</td>\n<td>Currency name, money</td>\n<td>IDR, SGD, rupiah, US dollar, Rp 5000, 5 ribu rupihah, $3, 9 USD</td>\n</tr>\n<tr>\n<td>Area</td>\n<td>Unit area</td>\n<td>5 meter persegi, sepuluh m2, 200 ha</td>\n</tr>\n<tr>\n<td>Duration</td>\n<td>Unit duration</td>\n<td>3 jam, 10 detik, 5 jam 30 menit, sehari, dua hari</td>\n</tr>\n<tr>\n<td>Length</td>\n<td>Unit length</td>\n<td>5 meter, delapan cm</td>\n</tr>\n<tr>\n<td>Temperature</td>\n<td>Unit temperature</td>\n<td>40 derajat celcius, -5 derajat</td>\n</tr>\n<tr>\n<td>Volume</td>\n<td>Unit volume</td>\n<td>6 liter</td>\n</tr>\n<tr>\n<td>Weight</td>\n<td>Unit weight</td>\n<td>tujuh kilogram, 5 gr, 9kg</td>\n</tr>\n</tbody></table>\n<h2 id=\"how-to-use\">How to Use</h2>\n<p>In this guidance, you will implement a bot that uses Super Model.</p>\n<p>Here is how.</p>\n<ol>\n<li>In Kata Platform, go to the <strong>Flow</strong> menu. Then, click the <strong>NLUs</strong> menu in the sidebar.</li>\n</ol>\n<p><img src=\"/assets/images/products/kata-platform/how-to/how-to-use-super-model-to-improve-your-bot-intelligence/image1.png\" alt=\"Image 1 alt\"></p>\n<blockquote>\n<p><strong>Figure 1</strong>: NLUs position in sidebar.</p>\n</blockquote>\n<ol start=\"2\">\n<li>Click on the <strong>Create NLU</strong> button. Then it will show a form on the right screen.</li>\n<li>Fill in NLUs name and choose an NLU Type. For this guide, fill in “supermodel” for the name and choose <strong>NL</strong>.</li>\n<li>On the <strong>NLU ID</strong> search and dropdown, you will search your NLU to integrate it into your chatbot. NLU ID consists of username and project with format <code>[username]:[project name]</code>. For example, in the getting started chatbot section, your NLU ID format is <code>muhfadhiilkata:test_simple_bot</code>.</li>\n<li><strong>Threshold</strong> can act as a confidence level, and these values range from 0.0 (completely uncertain) to 1.0 (completely confident). This confidence level is usually set between 0.7 to 0.8. So the data that falls under 0.7/0.8 will not be detected by the bot. The field only allows numbers and decimals to separate using “.” character. Fill in 0.8 in this field.</li>\n<li><strong>Output</strong> has several output types, depending on the entity type you used. For example, for Super Model implementation, choose Phrase.</li>\n</ol>\n<table>\n<thead>\n<tr>\n<th>Output Types</th>\n<th>Functionals</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>Raw</td>\n<td>Use this output type if your entity type is “trait”. It will result in raw sentences.</td>\n</tr>\n<tr>\n<td>Dictionary</td>\n<td>Use this output type if your entity type is “dictionary”. It will result in an array consisting of keys and labels.</td>\n</tr>\n<tr>\n<td>Phrase</td>\n<td>Using supermodel “kata entity”, you must use this output type.</td>\n</tr>\n</tbody></table>\n<ol start=\"7\">\n<li><strong>Entity Name</strong> is a feature to define the entity name when choosing a Super Model. Fill in with “kata”.</li>\n<li>Click <strong>Create</strong> to finish your NLUs.</li>\n</ol>\n<p>Next, you will define this NLU inside an intent. So, you will create an intent name “supermodNL”, for example.</p>\n<ol>\n<li>Go to the <strong>Conversation Flows</strong> menu, then click on the <strong>Intent</strong> tab.</li>\n</ol>\n<p><img src=\"/assets/images/products/kata-platform/how-to/how-to-use-super-model-to-improve-your-bot-intelligence/image2.png\" alt=\"Image 2 alt\"></p>\n<blockquote>\n<p><strong>Figure 2</strong>: Intent tab position.</p>\n</blockquote>\n<ol start=\"2\">\n<li>Click the <strong>Create Intent</strong> button. Then a form will show on the right screen</li>\n<li>In <strong>Intent Type</strong>, choose <strong>Text</strong> to start setup.</li>\n<li>Next, click the button <strong>Add classifier</strong>. This feature enables you to insert your NLUs inside the intent, so intent can match whether end-user input is understandable by the NLU or not. First, there is a dropdown to choose available NLUs, then select “supermodel”.</li>\n<li><strong>Match with</strong> feature enables you to specify which label in supermodel that you want to use in your intent. For example, if you want your bot to identify a person&#39;s name, you will use a person label. Fill in with person.</li>\n<li>Next, click on the kebab menu to choose <strong>Add custom option</strong>. It will show a code block. Fill the code box as follows:</li>\n</ol>\n<pre><code>labels: true</code></pre><ol>\n<li>Your result when creating a classifier will be as follows:</li>\n</ol>\n<p><img src=\"/assets/images/products/kata-platform/how-to/how-to-use-super-model-to-improve-your-bot-intelligence/image3.png\" alt=\"Image 3 alt\"></p>\n<blockquote>\n<p><strong>Figure 3</strong>: Add classifier example.</p>\n</blockquote>\n<ol start=\"2\">\n<li>Then, click the button <strong>Add attribute</strong>. This feature enables you to insert your NLUs inside the intent, similar to the Add Classifier feature, with differentiation that bot developers can create a condition in state or transition by using the entity’s label. It is because an attribute is a variable that has an array form. In the 5th step, you will use person label from Super Model, then fill in the field as follows:</li>\n</ol>\n<pre><code>Name: name\nNLU: supermodNL\nPath: person</code></pre><ol start=\"3\">\n<li>Your result after creating the attribute will be as follows:</li>\n</ol>\n<p><img src=\"/assets/images/products/kata-platform/how-to/how-to-use-super-model-to-improve-your-bot-intelligence/image3.png\" alt=\"Image 4 alt\"></p>\n<blockquote>\n<p><strong>Figure 4</strong>: Add attribute example.</p>\n</blockquote>\n<ol start=\"4\">\n<li>Click <strong>Create</strong> to create an intent.</li>\n</ol>\n<p>The next step is to use the intent as a condition in transition (most common). If you want to create your chatbot, recognize a person’s name by filling in the condition as follows:</p>\n<pre><code>intent==‘supermodNL’</code></pre><p>This is the end of the guidance. You can contact <a href=\"mailto:support@kata.ai\">support@kata.ai</a> if you have any difficulties when implementing this.</p>\n",
      "title": "How to Use Super Model (“Kata Entity”) to Improve Your Bot Intelligence",
      "prev": "how-to-use-nlu-threshold-to-enhance-customer-experience",
      "next": "how-to-use-training-data-generator-to-automate-generating-training-data",
      "excerpt": "<p>Super Model or Kata Entity is a highly maintained entity that you can use right out of the box. This feature lets you build your NL faster and easier without training. This model lets you extract specific words in a sentence, like a person&#x2019;s name, location, and more.</p>",
      "meta": {
        "relativePath": "how-to\\how-to-use-super-model-to-improve-your-bot-intelligence.html",
        "createdAt": "2022-01-27T05:49:26.403Z",
        "lastModified": "2022-01-27T05:49:26.403Z",
        "size": 9473,
        "formattedSize": "9.3 KB"
      }
    },
    {
      "id": "how-to-use-training-data-generator-to-automate-generating-training-data",
      "contents": "<h2 id=\"introduction\">Introduction</h2>\n<p>Training Data Generator is a feature that enables you to automatically generate training data up to 100 data using sentence samples, or we call it data samples.</p>\n<p>Before creating a data sample, you will need to define the keyword and synonyms inside the “word bank” feature. Why is it required? We do permutations from data samples and keyword variants to generate the training data. Let’s try a case:</p>\n<ol>\n<li>You create a word bank from Kenapa which consists of variant words or synonyms from Kenapa. For example: knp, ngap, ngaps, kenaps. So, you have 4 word variants.</li>\n<li>Next, you create a data sample. For example: @Kenapa ATM saya bermasalah ya.</li>\n<li>We will create a permutation or combination from a data sample with variant words. For example, expected generated data will be like this:<ul>\n<li><code>knp ATM saya bermasalah</code></li>\n<li><code>ngap ATM saya bermasalah</code></li>\n<li><code>ATM saya bermasalah ngaps</code></li>\n<li><code>kenaps ATM saya bermasalah</code></li>\n<li>And many more</li>\n</ul>\n</li>\n<li>Also, we have a feature that is bulk tagging to tag all generated training data with your available entities and labels. It enables faster tagging rather than manually annotating.</li>\n</ol>\n<p>This guidance will elaborate on how to use training data generators and do bulk tagging after generated data shows up. Let’s get started.</p>\n<h2 id=\"create-entity-and-labels\">Create Entity and Labels</h2>\n<p>Before you start, you will need to create at least one entity.</p>\n<ol>\n<li>To create an entity, go to the <strong>NLU &gt; Models</strong> menu. Then, click the <strong>Entity</strong> menu.</li>\n</ol>\n<p><img src=\"/assets/images/products/kata-platform/how-to/how-to-use-training-data-generator-to-automate-generating-training-data/image1.png\" alt=\"Image 1 Alt\"></p>\n<blockquote>\n<p><strong>Figure 1</strong>: Models menu.</p>\n</blockquote>\n<ol start=\"2\">\n<li>Click <strong>Create Entity</strong> to set up a new entity. It will show a form on the right screen. Fill in the entity name.</li>\n</ol>\n<p>Here is the explanation of each field</p>\n<ol>\n<li><strong>Inherit</strong> lets you copy an entity from any public NLU on the Kata Platform. To inherit an NLU, simply type the NLU ID with <code>[username]:[project name]</code>. Inherited entities will sync to the original entity, including the labels and training data. For example, in the <a href=\"/kata-platform/documentation-content/start-your-first-chatbot\">getting started chatbot section</a>, your NLU ID format is <code>muhfadhiilkata:test_simple_bot</code>.</li>\n<li><strong>Type</strong> is intended for the entity type. In Kata Platform, we have 3 entity types which are<ul>\n<li><strong>Trait</strong> is a text classifier that classifies a sentence into particular labels. This type is suitable for making your bot recognize nuance in a sentence.</li>\n<li><strong>Dictionary</strong> is a word tagger which has keys and labels. It will form an array.</li>\n<li>The <strong>Phrase</strong> is a word tagger.</li>\n</ul>\n</li>\n</ol>\n<p><img src=\"/assets/images/products/kata-platform/how-to/how-to-use-training-data-generator-to-automate-generating-training-data/image2.png\" alt=\"Image 2 Alt\"></p>\n<blockquote>\n<p><strong>Figure 2</strong>: Entity type &quot;dictionary&quot;</p>\n</blockquote>\n<ol start=\"3\">\n<li><p>The <strong>Profile</strong> is an AI model that is available to use by users. You can choose any profiles you want depending on data training and the dataset you have.</p>\n<ul>\n<li>The “default” profile is suitable for a large number of data samples so that this profile is available in all entity types.</li>\n<li>“intent” profile is suitable for entity type “trait”.</li>\n<li>“default_v2” profile is our newest profile and is suitable if you have a large amount of data.</li>\n</ul>\n</li>\n<li><p><strong>Root</strong> enables you to create an entity using other users&#39; NLU to copy the training data and add new labels. Therefore, it is suitable if you have a trained NLU and want to add more labels in the NLU. To use this, you can type an NLU ID which consists of username and project with format <code>[username]:[project name]</code>.</p>\n</li>\n<li><p><strong>Labels</strong> is a feature to determine classes or categories from an entity. To add a new label, you can type and press “enter” on your keyboard.</p>\n</li>\n<li><p>If you choose entity type “dictionary”, it will show a dropdown name <strong>Belongs to</strong>. This feature enables you to define relationships () between entities. Belongs to feature can only be used for entities in the same NLU with entity type “phrase” or “dictionary”. It is suitable if your data sample is like this:</p>\n</li>\n</ol>\n<pre><code>Saya mau beli es kopi susu 2 dan less sugar</code></pre><p><code>Es kopi susu</code> is the main menu. <code>2 and less sugar</code> are modifiers to detailing the order. So in <strong>Belongs To</strong> concept, you will tag 2 and choose <code>belongsTo</code>.</p>\n<p>For this guide, you will create 1 entity type “trait” to extract sentences, 1 entity type “phrase” and 1 entity type “dictionary” to extract words.</p>\n<ol>\n<li>Click the <strong>Create Entity</strong> button.</li>\n<li>Then, fill in as follows for the first entity:</li>\n</ol>\n<pre><code>Name: intent\nType: Trait\nLabel: statement</code></pre><p>Here is the screenshot:</p>\n<p><img src=\"/assets/images/products/kata-platform/how-to/how-to-use-training-data-generator-to-automate-generating-training-data/image3.png\" alt=\"Image 3 Alt\"></p>\n<blockquote>\n<p><strong>Figure 3</strong>: Create an entity.</p>\n</blockquote>\n<ol start=\"3\">\n<li>Click the <strong>Create Entity</strong> button to create the following entity.</li>\n<li>Fill in as follows for the second entity:</li>\n</ol>\n<pre><code>Name: object\nType: phrase\nLabel: person</code></pre><p>Here is the screenshot:</p>\n<p><img src=\"/assets/images/products/kata-platform/how-to/how-to-use-training-data-generator-to-automate-generating-training-data/image4.png\" alt=\"Image 4 Alt\"></p>\n<blockquote>\n<p><strong>Figure 4</strong>: Create an entity.</p>\n</blockquote>\n<ol start=\"5\">\n<li>Fill in as follows for the last entity:</li>\n</ol>\n<pre><code>Name: things\nType: dictionary\nKey: car\nLabels: suv, van, lcgc</code></pre><p>Here is the screenshot:</p>\n<p><img src=\"/assets/images/products/kata-platform/how-to/how-to-use-training-data-generator-to-automate-generating-training-data/image5.png\" alt=\"Image 5 Alt\"></p>\n<blockquote>\n<p><strong>Figure 5</strong>: Create an entity.</p>\n</blockquote>\n<ol start=\"6\">\n<li>Click <strong>Create</strong> to finalize.</li>\n</ol>\n<p>The next step is to create a word bank when you’re done.</p>\n<h2 id=\"create-a-word-bank\">Create a Word Bank</h2>\n<p>In this part, you will create synonyms or variants from the keyword. Here is the guidance for adding variants:</p>\n<ul>\n<li>You can add 2 words as 1 variant by using space. Maximum 20 characters.</li>\n<li>You must create at least 2 variants to create a word bank with a maximum of 20 characters for each variant.</li>\n<li>You can remove a variant by clicking the “x” button next to the word.</li>\n</ul>\n<p>Step by step to create a word bank:</p>\n<ol>\n<li>Click the Word Bank tab, then click the Create button. It will show a dialog.</li>\n<li>Fill in the name for your word bank. For example, you can fill in Kenapa.</li>\n<li>Then, create variants by typing a synonym from Kenapa word. For example:</li>\n</ol>\n<pre><code>ngaps\nngapa\nkenp\nknp\nkenopo</code></pre><ol start=\"4\">\n<li>Press “Enter” on your keyboard.</li>\n</ol>\n<p><img src=\"/assets/images/products/kata-platform/how-to/how-to-use-training-data-generator-to-automate-generating-training-data/image6.png\" alt=\"Image 6 Alt\"></p>\n<blockquote>\n<p><strong>Figure 6</strong>: Create a word bank.</p>\n</blockquote>\n<ol start=\"5\">\n<li>Finally, you have variants. Then, click the <strong>Create</strong> button to create a word bank.</li>\n</ol>\n<h2 id=\"create-a-data-sample\">Create a Data Sample</h2>\n<p>Once you’ve created a word bank, now you’re ready to make a data sample. Data sample is a sample sentence that consists of a word bank and several words as a base to generate training data or called a “pattern”. Here are the steps:</p>\n<ol>\n<li>Go to <strong>NLU &gt; Training</strong>.</li>\n<li>Click on <strong>Bulk Training</strong> dropdown, then choose <strong>Data Generator</strong>.</li>\n</ol>\n<p><img src=\"/assets/images/products/kata-platform/how-to/how-to-use-training-data-generator-to-automate-generating-training-data/image7.png\" alt=\"Image 7 Alt\"></p>\n<blockquote>\n<p><strong>Figure 7</strong>: Go to Data Generator feature.</p>\n</blockquote>\n<ol start=\"3\">\n<li>You will see a row to input a data sample. For example, to add your available word bank, type “@“ to show the word bank list.</li>\n</ol>\n<p><img src=\"/assets/images/products/kata-platform/how-to/how-to-use-training-data-generator-to-automate-generating-training-data/image8.png\" alt=\"Image 8 Alt\"></p>\n<blockquote>\n<p><strong>Figure 8</strong>: Type “@” to show word bank list.</p>\n</blockquote>\n<ol start=\"4\">\n<li>Input a data sample, for example:</li>\n</ol>\n<pre><code>@Kenapa kemarin Sinta tidak sekolah</code></pre><p><img src=\"/assets/images/products/kata-platform/how-to/how-to-use-training-data-generator-to-automate-generating-training-data/image9.png\" alt=\"Image 9 Alt\"></p>\n<blockquote>\n<p><strong>Figure 9</strong>: Type a data sample.</p>\n</blockquote>\n<ol start=\"5\">\n<li>Press “Add Row” to submit.</li>\n<li>You can edit or delete your data sample after it has been created.</li>\n</ol>\n<p><img src=\"/assets/images/products/kata-platform/how-to/how-to-use-training-data-generator-to-automate-generating-training-data/image10.png\" alt=\"Image 10 Alt\"></p>\n<blockquote>\n<p><strong>Figure 10</strong>: Update and delete data sample.</p>\n</blockquote>\n<p>On the data sample page, there is information:</p>\n<ul>\n<li><strong>Total data possibilities</strong> mean total generated data that can be created from available data samples. So for this example, you have 2 data samples multiplied with 1 word bank, then multiply again with 5 word variants. So finally, there will be 10 data possibilities.</li>\n</ul>\n<p><img src=\"/assets/images/products/kata-platform/how-to/how-to-use-training-data-generator-to-automate-generating-training-data/image11.png\" alt=\"Image 11 Alt\"></p>\n<blockquote>\n<p><strong>Figure 11</strong>: Total data possibilities from available data samples.</p>\n</blockquote>\n<ul>\n<li><strong>Data to Generate</strong> is several generated data that you wanted. The number must be below or equal to the total data possibilities.</li>\n</ul>\n<p><img src=\"/assets/images/products/kata-platform/how-to/how-to-use-training-data-generator-to-automate-generating-training-data/image12.png\" alt=\"Image 12 Alt\"></p>\n<blockquote>\n<p><strong>Figure 12</strong>: Data to generate must be equal to or below than total data possibilities.</p>\n</blockquote>\n<p><strong>Important note:</strong></p>\n<p>Make sure you put a space before the next word or after the previous word. Example: <code>@Kenapa Sinta tidak sekolah?</code> or <code>Aku lagi @Kenapa ya hari ini</code></p>\n<h2 id=\"generate-training-data\">Generate Training Data</h2>\n<p>This step will guide you to generate training data from created data samples. Generated training data might not match your expectations because we are duplicating words. However, you can prepare the training data and do bulk training instead if you want specific training data. Learn more about bulk training.</p>\n<ol>\n<li>Before you start, ensure your data samples are created. The generate button will enable if data samples are available and data to generate is equal to or below the total data possibilities.</li>\n<li>Let’s put 10 data to generate.</li>\n<li>Click the <strong>Generate</strong> button on the top right of your screen.</li>\n</ol>\n<p><img src=\"/assets/images/products/kata-platform/how-to/how-to-use-training-data-generator-to-automate-generating-training-data/image13.png\" alt=\"Image 13 Alt\"></p>\n<blockquote>\n<p><strong>Figure 13</strong>: Generate button.</p>\n</blockquote>\n<ol start=\"4\">\n<li>It redirects you to the Generated Data page, where you can train using the bulk labeling feature.</li>\n<li>You will see a training data list as follows.</li>\n</ol>\n<p><img src=\"/assets/images/products/kata-platform/how-to/how-to-use-training-data-generator-to-automate-generating-training-data/image14.png\" alt=\"Image 14 Alt\"></p>\n<blockquote>\n<p><strong>Figure 14</strong>: Generated data from data sample and a word bank.</p>\n</blockquote>\n<ol start=\"6\">\n<li>You can delete generated data by clicking on the remove button in the list.Bulk labeling</li>\n</ol>\n<p>You’re going to train generated data by using bulk labeling. Bulk labeling is a feature to tag entity type “trait”, “phrase” or “dictionary”, by doing it at once.</p>\n<p>Let’s start to tag an entity type “trait” that you’ve created before.</p>\n<ol>\n<li>In the <strong>Bulk Labeling</strong> section, select the entity name intent. This entity type is “trait”.</li>\n<li>Next, it will show available labels in the entity. Because you only create 1 label, then select the statement label.</li>\n</ol>\n<div className=\"info\">\n    <img className=\"borderless\" src=\"/assets/images/icon-info.svg\" />\n    <p><b>Important note</b>: Bulk labeling for entity type “trait” will tag all generated data.</p>\n</div>\n\n<p><img src=\"/assets/images/products/kata-platform/how-to/how-to-use-training-data-generator-to-automate-generating-training-data/image15.png\" alt=\"Image 15 Alt\"></p>\n<blockquote>\n<p><strong>Figure 15</strong>: Tag entity type “trait”.</p>\n</blockquote>\n<ol start=\"3\">\n<li>Click the button <strong>Add more entity</strong>. Then, select the entity name object.</li>\n<li>Next, select the person label. Then, it will show a text area named <strong>Words to Tag</strong>. Words to Tag is a feature to search words you want to tag. For example, you will tag <code>sinta</code> word.</li>\n<li>Press “Enter” on your keyboard to submit the word. It will show like this.</li>\n</ol>\n<p><img src=\"/assets/images/products/kata-platform/how-to/how-to-use-training-data-generator-to-automate-generating-training-data/image16.png\" alt=\"Image 16 Alt\"></p>\n<blockquote>\n<p><strong>Figure 16</strong>: Tag <code>sinta</code> word in bulk labeling.</p>\n</blockquote>\n<div className=\"info\">\n    <img className=\"borderless\" src=\"/assets/images/icon-info.svg\" />\n    <p><b>Important note</b>: Bulk labeling for entity type “phrase” and “dictionary” will tag words only.</p>\n</div>\n\n<ol start=\"6\">\n<li>Then, add the entity “dictionary” type. Click <strong>Add more Entity</strong> to start. Then, select entity name things. Then, it will show a text area named <strong>Words to Tag</strong>. Words to Tag is a feature to search words you want to tag. For example, you will tag a <code>sekolah</code> word.</li>\n</ol>\n<div className=\"info\">\n    <img className=\"borderless\" src=\"/assets/images/icon-info.svg\" />\n    <p><b>Important note</b>: Bulk labeling for entity type “dictionary” will not show specific labels to tag. So, it will train the entity.</p>\n</div>\n\n<p><img src=\"/assets/images/products/kata-platform/how-to/how-to-use-training-data-generator-to-automate-generating-training-data/image17.png\" alt=\"Image 17 Alt\"></p>\n<blockquote>\n<p><strong>Figure 17</strong>: Tag <code>sekolah</code> word in bulk labeling.</p>\n</blockquote>\n<ol start=\"7\">\n<li>Finally, you can click the button <strong>Train</strong>. It will train all generated data into entity <code>intent</code> with <code>statement</code> label and entity <code>object</code> with <code>person</code> label.</li>\n<li>When successfully trained, you will redirect to the <strong>Training</strong> page. On this page, you can see the generated data has been trained.</li>\n</ol>\n<p><img src=\"/assets/images/products/kata-platform/how-to/how-to-use-training-data-generator-to-automate-generating-training-data/image18.png\" alt=\"Image 18 Alt\"></p>\n<blockquote>\n<p><strong>Figure 18</strong>: Data has been trained as <code>intent:statement</code>, <code>object:person</code> and <code>things</code>.</p>\n</blockquote>\n<ol start=\"9\">\n<li>You can click the arrow on the right of the box to open the trained data detail.</li>\n</ol>\n<p><img src=\"/assets/images/products/kata-platform/how-to/how-to-use-training-data-generator-to-automate-generating-training-data/image19.png\" alt=\"Image 19 Alt\"></p>\n<blockquote>\n<p><strong>Figure 19</strong>: How to show trained data detail.</p>\n</blockquote>\n<p><img src=\"/assets/images/products/kata-platform/how-to/how-to-use-training-data-generator-to-automate-generating-training-data/image20.png\" alt=\"Image 20 Alt\"></p>\n<blockquote>\n<p><strong>Figure 20</strong>: Trained data detail.</p>\n</blockquote>\n<h2 id=\"limitations\">Limitations</h2>\n<p>There are several important notes when using a data generator, such as:</p>\n<ul>\n<li>You can create unlimited data samples and word banks, but the system only generates up to 100 training data.</li>\n<li>You can create data again if you want to add more than 100 generated training data or sentences. It recommended using new data samples when generating new training data to make similar combination training data or sentence results.</li>\n<li>If you’re not satisfied with generated training data, we recommend these approaches:<ul>\n<li>Create a new data sample with a different pattern from previous data samples.</li>\n<li>If you want a specific sentence, but the system does not show what you want, then we recommend you to use the training feature in <strong>NLU &gt; Training</strong> instead.</li>\n</ul>\n</li>\n<li>If you have another NLU and want to use word banks or data samples from the current project, it cannot be done now.</li>\n<li>The bulk labeling feature is only for the Data Generator feature. You cannot use it for now independently.</li>\n</ul>\n<p>This is the end of the guidance. You can contact <a href=\"mailto:support@kata.ai\">support@kata.ai</a> if you have any difficulties when implementing this.</p>\n",
      "title": "How to use Training Data Generator to automate generating training data when training your NLU",
      "prev": "how-to-use-super-model-to-improve-your-bot-intelligence",
      "next": "how-to-use-bulk-training-for-faster-training-process",
      "excerpt": "<p>Training Data Generator is a feature that enables you to automatically generate training data up to 100 data using sentence samples, or we call it data samples.</p>",
      "meta": {
        "relativePath": "how-to\\how-to-use-training-data-generator-to-automate-generating-training-data.html",
        "createdAt": "2022-01-27T05:49:26.404Z",
        "lastModified": "2022-01-27T05:49:26.404Z",
        "size": 15570,
        "formattedSize": "15.2 KB"
      }
    },
    {
      "id": "using-custom-api-to-access-third-party-application",
      "contents": "<p>In this guidance, you will be able to implement a bot that uses an action type API.</p>\n<h2 id=\"introduction\">Introduction</h2>\n<p>For using an API to access third-party applications from your chatbot, you will need to create an action API. Also, a state must be created before creating an action</p>\n<div className=\"info\">\n    <img className=\"borderless\" src=\"/assets/images/icon-info.svg\" />\n    <p>\n        <b>Important</b>:\n        Platform has a timeout API in 10 seconds. If your API result is shows more than 10 second to chatbot, it will show a automatic message from your chatbot: <code>Maaf pesan anda sedang diproses, tunggu beberapa saat lagi yaa</code>\n    </p>\n</div>\n\n<h2 id=\"how-to-use\">How to Use</h2>\n<ol>\n<li>Go to your <strong>project</strong>, then click <strong>Flow</strong>.</li>\n<li>Create a state, for example a <code>apiExample</code> state. Click <strong>+</strong> icon in bottom right to create new state</li>\n<li>Click <strong>+</strong> in the action box to create a new action.</li>\n<li>When all actions available are shown, then choose <strong>API</strong></li>\n<li>Click tab <strong>Custom API</strong></li>\n</ol>\n<p>Each field explanation:</p>\n<table>\n<thead>\n<tr>\n<th>Field Name</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>Action name</td>\n<td>Name of your action. Max. 30 characters with alphanumeric.</td>\n</tr>\n<tr>\n<td>Condition</td>\n<td>Which condition can trigger this action</td>\n</tr>\n<tr>\n<td>URI</td>\n<td>Your API URL</td>\n</tr>\n<tr>\n<td>Method</td>\n<td>Choose POST or GET</td>\n</tr>\n<tr>\n<td>Body</td>\n<td>Input API body by creating key and value.</td>\n</tr>\n<tr>\n<td>Headers</td>\n<td>Input API headers by creating key and value.</td>\n</tr>\n<tr>\n<td>Query</td>\n<td>-</td>\n</tr>\n<tr>\n<td>Form Data</td>\n<td>-</td>\n</tr>\n<tr>\n<td>Result Path</td>\n<td>-</td>\n</tr>\n</tbody></table>\n<ol start=\"6\">\n<li>Click the <strong>Create Action</strong> button to create action.</li>\n<li>Click the <strong>Create</strong> to finalize state creation.</li>\n</ol>\n<h2 id=\"how-to-collect-api-result\">How to Collect API Result</h2>\n<p>If you want to collect API results, you just need to write <code>$(result)</code> in a variable you want to put it. For example, this is a case if the API result wants to implement an action type Command.</p>\n<p><img src=\"/assets/images/products/kata-platform/how-to/using-custom-api-to-access-third-party-application/image1.png\" alt=\"Image 1 Alt\"></p>\n<blockquote>\n<p><strong>Figure 1</strong>: API result in action type Command.</p>\n</blockquote>\n<p>To access the value, the API result can be stored in payload, then you can access it by writing <code>payload.result</code>. For example, this is a case if you want to access the first data from API result in action type Command.</p>\n<p><img src=\"/assets/images/products/kata-platform/how-to/using-custom-api-to-access-third-party-application/image2.png\" alt=\"Image 2 Alt\"></p>\n<blockquote>\n<p><strong>Figure 2</strong>: Access value from API result.</p>\n</blockquote>\n<p>This is the end of the guidance. You can contact <a href=\"mailto:support@kata.ai\">support@kata.ai</a> if you have any difficulties when implementing this.</p>\n",
      "title": "Using Custom API to Access Third-Party Application",
      "prev": "how-to-use-bulk-training-for-faster-training-process",
      "next": "how-to-change-error-messages-in-your-chatbot",
      "excerpt": "<p>In this guidance, you will be able to implement a bot that uses an action type API.</p>",
      "meta": {
        "relativePath": "how-to\\using-custom-api-to-access-third-party-application.html",
        "createdAt": "2022-01-27T05:49:26.450Z",
        "lastModified": "2022-01-27T05:49:26.450Z",
        "size": 3189,
        "formattedSize": "3.1 KB"
      }
    },
    {
      "id": "about",
      "contents": "<img className=\"borderless\" src=\"/assets/images/products/kata-platform/image0.png\" alt=\"Kata-Platform Illustration\" />\n\n<h1 id=\"what-is-kata-platform-\">What is Kata Platform ?</h1>\n<p>Kata Platform is a bot-developing and Natural Language Understanding platform to help you design your conversational AI product. Using the Kata Platform, you can build automated text conversations, understand messages, and connect to messaging channels or APIs.</p>\n",
      "title": "What is Kata Platform",
      "next": "benefits-with-kata-platform",
      "excerpt": "<p>Kata Platform is a bot-developing and Natural Language Understanding platform to help you design your conversational AI product. Using the Kata Platform, you can build automated text conversations, understand messages, and connect to messaging channels or APIs.</p>",
      "meta": {
        "relativePath": "introduction\\about.html",
        "createdAt": "2022-01-24T07:53:20.951Z",
        "lastModified": "2022-01-24T07:53:20.951Z",
        "size": 502,
        "formattedSize": "502 Bytes"
      }
    },
    {
      "id": "benefits-with-kata-platform",
      "contents": "<h2 id=\"deliver-naturally\">Deliver Naturally</h2>\n<p>Build more human and natural conversational experiences with products that support multimodal conversations backed up by deep learning technologies.</p>\n<h2 id=\"connect-universally\">Connect Universally</h2>\n<p>Decrease development time by using our drag and drop builder. Then deploy your product across messaging platforms, including web and mobile.</p>\n<h2 id=\"monitor-comprehensively\">Monitor Comprehensively</h2>\n<p>Keep track of your product from the pre-release to the post-release and conduct a continuous evaluation using our Analytics feature with easy-to-understand visualization.</p>\n",
      "title": "Benefits With Kata Platform",
      "prev": "about",
      "next": "kata-platform-features",
      "excerpt": "<p>Build more human and natural conversational experiences with products that support multimodal conversations backed up by deep learning technologies.</p>",
      "meta": {
        "relativePath": "introduction\\benefits-with-kata-platform.html",
        "createdAt": "2022-01-20T06:29:51.344Z",
        "lastModified": "2022-01-20T06:29:51.344Z",
        "size": 672,
        "formattedSize": "672 Bytes"
      }
    },
    {
      "id": "kata-platform-features",
      "contents": "<p>Here are the key features:</p>\n<h3 id=\"drag-and-drop-visual\">Drag and drop visual</h3>\n<p>Lessen product development time with interactive drag and drop visualization. This feature allows users with minimum coding capability to build products quickly.</p>\n<h3 id=\"basic-or-advanced-conversational-product\">Basic or advanced conversational product</h3>\n<p>Build a simple chatbot or advanced virtual assistant according to the product’s goal and objective. You can build product ranges from an uncomplicated key ord-based bot to an advanced AI product with natural language understanding (NLU) knowledge.</p>\n<h3 id=\"omnichannel-integration\">Omnichannel integration</h3>\n<p>Create once and deploy everywhere. Integrate your bots seamlessly across web, mobile, or any messenger platforms.</p>\n<h3 id=\"error-log-history\">Error log history</h3>\n<p>Investigating errors is made easy with our error log history. Monitor product errors that may occur and fix them by reading our documentation.</p>\n<h3 id=\"product-analytics-tool\">Product Analytics Tool</h3>\n<p>Analyze end-user activities with easy-to-understand visualization.</p>\n",
      "title": "Kata Platform Features",
      "prev": "benefits-with-kata-platform",
      "next": "all-use-cases",
      "excerpt": "<p>Here are the key features:</p>",
      "meta": {
        "relativePath": "introduction\\kata-platform-features.html",
        "createdAt": "2022-01-26T04:28:47.279Z",
        "lastModified": "2022-01-26T04:28:47.279Z",
        "size": 1068,
        "formattedSize": "1.0 KB"
      }
    },
    {
      "id": "version",
      "contents": "<h2 id=\"3231\">3.23.1</h2>\n<img className=\"borderless\" alt=\"Kata Platform Illustration\" src=\"/assets/images/products/kata-platform/release-notes/kata-platform-illustration.png\" />\n\n<h3 id=\"whats-new-⭐️\">What&#39;s New ⭐️</h3>\n<p>We develop a lot of improvements for the Kata Platform in user experience and the newest action type for your bot, here is the list:</p>\n<ul>\n<li>New action type: Instagram Sticker. Learn more about <a href=\"https://docs.kata.ai/channels/instagram-messaging/#instagram-sticker-like-heart\">Instagram Sticker</a>.</li>\n<li>Updating copy for better user experience.</li>\n<li>Enhance error messages when users publish bot and testing channels.</li>\n</ul>\n<h3 id=\"whats-been-fixed-🛠\">What&#39;s been fixed 🛠</h3>\n<ul>\n<li>Fixed users cannot download transcripts from Firefox and Chrome.</li>\n<li>Fixed issue when using dynamic carousel action type.</li>\n<li>Fixed issue in scheduler that sending repetitive messages to end-users.</li>\n</ul>\n<h2 id=\"3230\">3.23.0</h2>\n<img className=\"borderless\" alt=\"Kata Platform Illustration\" src=\"/assets/images/products/kata-platform/release-notes/kata-platform-illustration.png\" />\n\n<h3 id=\"whats-new-⭐️-1\">What&#39;s New ⭐️</h3>\n<p>We develop a lot of improvements for the Kata Platform in user experience and the newest action types for your bot, here is the list:</p>\n<ul>\n<li>We’ve changed the <strong>captcha validation</strong> into the most powerful and secure captcha: hCaptcha. Please upgrade your KataCLI version to the 2.7.1 version too.</li>\n<li>The wait is over 🎉 You can <strong>remove team admin or remove team members</strong> if they are no longer involved in the project. You may <strong>add more admin</strong> in 1 project. These abilities are for team admin only.</li>\n<li>Yes, we heard you. We launched 2 newest action types for the WhatsApp bot: <strong>List Messages</strong> and <strong>Reply Button</strong>. You can create a less-typing experience through your end-users and get more engagement with it. Learn more about <a href=\"https://docs.kata.ai/channels/whatsapp/#-new--list-message\">List Messages</a> and <a href=\"https://docs.kata.ai/channels/whatsapp/#-new--reply-button\">Reply Button</a>.</li>\n<li>Now, you can add an image with a caption for your WhatsApp bot. Learn more about <a href=\"https://docs.kata.ai/channels/whatsapp/#image-and-image-with-caption\">the caption</a>.</li>\n</ul>\n<h3 id=\"whats-been-fixed-🛠-1\">What&#39;s been fixed 🛠</h3>\n<ul>\n<li>Fixed users cannot access the Team feature.</li>\n<li>Fixed users got an error when requesting a reset password but the email is sent.</li>\n<li>Fixed users cannot scroll down when adding transition mapping more than 5 mappings.</li>\n<li>Fixed several users who cannot log in after signing up.</li>\n</ul>\n<h2 id=\"3220\">3.22.0</h2>\n<img className=\"borderless\" alt=\"Kata Platform Illustration\" src=\"/assets/images/products/kata-platform/release-notes/kata-platform-illustration.png\" />\n\n<h3 id=\"whats-new-⭐️-2\">What&#39;s New ⭐️</h3>\n<p>The wait is over 🎉 A whole new integration chatbot channel to Omnichat, includes Instagram Direct Message automation. Learn more about Omnichat.</p>\n<p>Here are the new features:</p>\n<ul>\n<li>As agents, you can receive message context from conversations between chatbot and end-users. Also, takeover conversations from chatbots to handle complaints effectively. Learn more about <a href=\"/kata-omnichat/setup-agent-bot\">Agent Bot</a>.</li>\n<li>A new Instagram automation that provides your end-users chatbot responses such as text, image, quick replies, ice breaker, and generic template (“carousel”). Learn more about <a href=\"/channels/instagram-messaging/\">the Instagram channel</a> and create a <a href=\"/tutorial/create-igdm-bot-handover-from-chatbot-to-agent\">chatbot Instagram handover to human agents</a>.</li>\n<li>Handover API template for easier handover API to Kata Omnichat. Learn more about creating a <a href=\"/tutorial/create-simple-bot-handover-from-chatbot-to-agent\">chatbot handover to agents</a>.</li>\n</ul>\n<h3 id=\"whats-been-fixed-🛠-2\">What&#39;s been fixed 🛠</h3>\n<ul>\n<li>Fixed users cannot log in or sign up using a captcha</li>\n<li>Fixed users cannot download bot code (.yml) in the Revision List</li>\n</ul>\n<h2 id=\"3210\">3.21.0</h2>\n<img className=\"borderless\" alt=\"Kata Platform Illustration\" src=\"/assets/images/products/kata-platform/release-notes/kata-platform-illustration.png\" />\n\n<h3 id=\"whats-new\">What&#39;s New</h3>\n<p>If you&#39;re a user who trains natural language models with large amount of data on KataCLI, but don&#39;t know where you can see the results of the data training, this feature is suitable for you!</p>\n<p><strong>We&#39;re adding NL bulk training on the GUI,</strong> so you can easily upload your training data (up to 200 sentences/lines) and directly see the results on the same GUI. Learn more about <a href=\"https://docs.kata.ai/nl-studio/nl-bulk-training\">NL bulk training in GUI</a>.</p>\n<h3 id=\"whats-been-fixed\">What&#39;s been fixed</h3>\n<p>Improved training speed for shorter retraining time</p>\n<h4 id=\"wait-what-is-retraining\">Wait, what is retraining?</h4>\n<p>When doing training for the NL models, you may incorrectly put a tag and prompt an automatic training for the tag. In that case, you can delete the incorrect sentence and the system will perform the <em>retraining</em> process to all your NL models using the updated training data.</p>\n<h2 id=\"3190\">3.19.0</h2>\n<img className=\"borderless\" alt=\"Kata Platform Illustration\" src=\"/assets/images/products/kata-platform/release-notes/kata-platform-illustration.png\" />\n\n<p>We always listen to our customers for their pain points, bug findings, required fast improvements and so on. So that, were doing improvements and several bugfix in January until March 2021, here is the list:</p>\n<h3 id=\"improvements\">Improvements</h3>\n<ul>\n<li>Login improvement on add captcha login</li>\n<li>User sign-up improvement on input validation</li>\n<li>Image validation improvement when user do uploading image in Kata Dashboard</li>\n<li>Deployment version can be shown up to 100 latest version</li>\n</ul>\n<h3 id=\"bug-fixes\">Bug fixes</h3>\n<ul>\n<li>Unable to connect Kata Platform webhook in LINE channel.</li>\n<li>Unable to continue to publish bot because input validation error in NLU training label, project name and state name</li>\n<li>Cannot delete CMS page element in Kata CMS</li>\n<li>Cannot choose action list due to available actions are hidden</li>\n<li>User cannot save bot and create new bot draft</li>\n<li>Unable to create environment in selected projects</li>\n<li>Some environments are not listed in Deployment feature</li>\n<li>New line character “\\n” is not shown in action text</li>\n<li>Some projects unable to load chatbot flow in Kata Flow</li>\n<li>Repeatedly shown character “\\” in action type which is not expected by user</li>\n<li>Some frontend elements in user interface in emulator and prediction log were missing</li>\n</ul>\n<h2 id=\"3150\">3.15.0</h2>\n<img className=\"borderless\" alt=\"Kata Platform Illustration\" src=\"/assets/images/products/kata-platform/release-notes/kata-platform-illustration.png\" />\n\n<p>We are proud to announce a whole new experience with our analytics platform.</p>\n<p>You can see more detailed user data, namely: New and Returning Users. Here you can see the number of new and returning user, also the total of both of them, based on filtering environment, channels, and dates. You also be able to see the total number of Active Users, Sessions, New Users, and Messages.</p>\n<p><img src=\"/assets/images/products/kata-platform/release-notes/platform-3.15.0/analytics-1.png\" alt=\"analytics-1\"></p>\n<p>You can get daily user activity data based on the selected date range, showing in a line chart. Get daily data for sessions, messages, active users and the newest is the number of new users. The data is also available offline by downloading it first.</p>\n<p><img src=\"/assets/images/products/kata-platform/release-notes/platform-3.15.0/analytics-2.png\" alt=\"analytics-2\"></p>\n<p>Get insights to blast messages in peak hours by looking at the total messages in the 7 days and 24 hours. You can do a hover in each block to see the number of incoming messages you get every hour on the selected date range.</p>\n<p><img src=\"/assets/images/products/kata-platform/release-notes/platform-3.15.0/analytics-3.png\" alt=\"analytics-3\"></p>\n<p>Did you know that it&#39;s important to pay attention to how many users come back to chatting with the chatbot? Now we have a Cohort table to display this data. You can view user retention data from daily, weekly, and monthly.</p>\n<p><img src=\"/assets/images/products/kata-platform/release-notes/platform-3.15.0/analytics-4.png\" alt=\"analytics-4\"></p>\n<p>In the Topics menu, you can see the most topic that users are looking for. You can see the Top Flows, Top Intents, Top States, and Top Messages. Now, we also be able to download those insights into csv files.</p>\n<p><img src=\"/assets/images/products/kata-platform/release-notes/platform-3.15.0/analytics-5.png\" alt=\"analytics-5\"></p>\n<p>In addition, we also have a Word Cloud so we see the most common words used by user at a glance.</p>\n<p><img src=\"/assets/images/products/kata-platform/release-notes/platform-3.15.0/analytics-6.png\" alt=\"analytics-6\"></p>\n<p>In the Transcript menu, we can see the conversation history between user and chat bot. Now, we can sort the start date, end date, incoming, outgoing, and duration into ascending and descending sequence. We also be able to search transcript by user ID.</p>\n<p><img src=\"/assets/images/products/kata-platform/release-notes/platform-3.15.0/analytics-7.png\" alt=\"analytics-7\"></p>\n<h2 id=\"390\">3.9.0</h2>\n<h3 id=\"features\">Features</h3>\n<p>Added <strong>Transcript List</strong> which provides User ID, Start Date, End Date, Duration, Incoming, and Outgoing information.</p>\n<p><img src=\"/assets/images/products/kata-platform/release-notes/platform-3.9.0/transcript-1.png\" alt=\"Transcript List\"></p>\n<p>By clicking one of the Transcript List row, project owner can see <strong>Transcript Detail</strong> which provide the chat history of user and bot. Also, there is <strong>eye icon</strong> on the bottom of each bubble which shows message detail.</p>\n<p><img src=\"/assets/images/products/kata-platform/release-notes/platform-3.9.0/transcript-2.png\" alt=\"Transcript Detail\"></p>\n<p>Furthermore, project owner can <strong>filter</strong> the Transcript List by Environment, Channel, and Date. In the date picker, when project owner choose a date more than 2 months ago, there will be a <strong>pop-up message</strong> which inform them to contact us.</p>\n<p><img src=\"/assets/images/products/kata-platform/release-notes/platform-3.9.0/transcript-3.png\" alt=\"Transcript Data Limit\"></p>\n<h2 id=\"380\">3.8.0</h2>\n<h3 id=\"whats-new-1\">What&#39;s New</h3>\n<p>Basic analytics, which was previously available on Kata Platform 2.5, is now making a comeback on Kata Platform 3.0.</p>\n<p>You can now see the total active users, total sessions, and total incoming messages of your bot (also available in line graph). Find it on <strong>Analytics &gt; Users</strong> menu.</p>\n<p><img src=\"/assets/images/products/kata-platform/release-notes/platform-3.8.0/analytics-1.png\" alt=\"Analytics\"></p>\n<p>Gain high-level insights of your conversations by seeing top flows, top intents, top states, and top messages of your bot. You’ll see those stats on <strong>Analytics &gt; Conversation</strong> menu.</p>\n<p><img src=\"/assets/images/products/kata-platform/release-notes/platform-3.8.0/analytics-2.png\" alt=\"Analytics\"></p>\n<p>See the details of your conversations on <strong>Analytics &gt; Transcript</strong> menu. Here, you’ll find the chat history between the user and your bot, from the duration of the conversation to the message details</p>\n<p><img src=\"/assets/images/products/kata-platform/release-notes/platform-3.8.0/analytics-3.png\" alt=\"Analytics\"></p>\n<p><img src=\"/assets/images/products/kata-platform/release-notes/platform-3.8.0/analytics-4.png\" alt=\"Analytics\"></p>\n<h2 id=\"370\">3.7.0</h2>\n<h3 id=\"whats-new-2\">What&#39;s New</h3>\n<p>Version 3.7.0 is all about adding new channel for you to talk to your customers. Introducing, <em>new channel</em> for Kata Platform channel integration: Freshchat.</p>\n<p>Freshchat provides live chat software that helps you to engage with your website visitors, provide assistance, and convert leads to happy customers. <a href=\"https://docs.kata.ai/channels/freshchat/\">Read more about the integration here</a>.</p>\n<p><img src=\"/assets/images/products/kata-platform/release-notes/platform-3.7.0/freshchat.png\" alt=\"Freshchat\"></p>\n<h2 id=\"363\">3.6.3</h2>\n<h3 id=\"whats-new-3\">What&#39;s New</h3>\n<p>You can now <strong>delete trained data</strong> on Kata NL. Some important notes:</p>\n<ul>\n<li>You can’t undo this action. Deleted data can’t be restored.</li>\n<li>Once you delete trained data, your model will be retrained. You won’t be able to add, edit, or delete other data during the process.</li>\n<li>The retraining duration depends on the quantity of data you deleted. Deleting more data will take a longer time.</li>\n</ul>\n<p><img src=\"/assets/images/products/kata-platform/release-notes/platform-3.6.3/delete-training-1.png\" alt=\"Delete Training\"></p>\n<p><img src=\"/assets/images/products/kata-platform/release-notes/platform-3.6.3/delete-training-2.png\" alt=\"Delete Training\"></p>\n<h2 id=\"356\">3.5.6</h2>\n<h3 id=\"whats-new-4\">What&#39;s New</h3>\n<p>Version 3.5.6 is about download feature on Prediction Logs, Platform Analytics and Kata Omnichat. Here’s what’s new:</p>\n<h4 id=\"kata-omnichat\">Kata Omnichat</h4>\n<p>Now Kata Omnichat is available as a module. We can create Qiscus Account and activate the module once we’ve already add Kata Omnichat Module to Project.</p>\n<p><img src=\"/assets/images/products/kata-platform/release-notes/platform-3.5.6/omnichat-1.png\" alt=\"Omnichat\"></p>\n<p><img src=\"/assets/images/products/kata-platform/release-notes/platform-3.5.6/omnichat-2.png\" alt=\"Omnichat\"></p>\n<p><img src=\"/assets/images/products/kata-platform/release-notes/platform-3.5.6/omnichat-3.png\" alt=\"Omnichat\"></p>\n<p>Automatically adding <code>handover</code> to Kata Flow</p>\n<p><img src=\"/assets/images/products/kata-platform/release-notes/platform-3.5.6/omnichat-4.png\" alt=\"Omnichat\"></p>\n<p>Managing agents in Dashboard if we’re an admin or supervisor</p>\n<p><img src=\"/assets/images/products/kata-platform/release-notes/platform-3.5.6/omnichat-5.png\" alt=\"Omnichat\"></p>\n<p>Showing list of messages in Inbox menu. Also, do chatting with customer.</p>\n<p><img src=\"/assets/images/products/kata-platform/release-notes/platform-3.5.6/omnichat-6.png\" alt=\"Omnichat\"></p>\n<p>Send subscription email to customer</p>\n<p><img src=\"/assets/images/products/kata-platform/release-notes/platform-3.5.6/omnichat-7.png\" alt=\"Omnichat\"></p>\n<p><img src=\"/assets/images/products/kata-platform/release-notes/platform-3.5.6/omnichat-8.png\" alt=\"Omnichat\"></p>\n<p><img src=\"/assets/images/products/kata-platform/release-notes/platform-3.5.6/omnichat-9.png\" alt=\"Omnichat\"></p>\n<h4 id=\"download-prediction-log\">Download Prediction Log</h4>\n<p>We can download the prediction log as CSV or JSON, within the time range or all of them</p>\n<p><img src=\"/assets/images/products/kata-platform/release-notes/platform-3.5.6/prediction-log.png\" alt=\"prediction-log\"></p>\n<h4 id=\"analytics\">Analytics</h4>\n<p>Brings back Analytics menu in project with new user interface</p>\n<p><img src=\"/assets/images/products/kata-platform/release-notes/platform-3.5.6/analytics-1.png\" alt=\"Analytics\"></p>\n<p>Showing statistics in users and conversation under Analytics menu.</p>\n<p><img src=\"/assets/images/products/kata-platform/release-notes/platform-3.5.6/analytics-2.png\" alt=\"Analytics\"></p>\n<p>Analytics can show conversation log for each session</p>\n<p><img src=\"/assets/images/products/kata-platform/release-notes/platform-3.5.6/analytics-3.png\" alt=\"Analytics\"></p>\n<h2 id=\"355\">3.5.5</h2>\n<h3 id=\"whats-new-5\">What&#39;s New</h3>\n<p>Version 3.5.5 is dedicated for Kata CMS. Here’s what’s new:</p>\n<ul>\n<li>Added CMS Image Single and Table (Carousel) Elements in Kata CMS and Kata Dashboard.</li>\n<li>You can now use our CMS with new image management feature straight from Kata Dashboard.</li>\n</ul>\n<p><img src=\"/assets/images/products/kata-platform/release-notes/platform-3.5.5/cms-images-dashboard.png\" alt=\"CMS Images in Kata Dashboard\"></p>\n<ul>\n<li>Update image directly using Single Image &amp; Image Table (Carousel) Elements in Kata Dashboard.</li>\n<li>Edit the button label and URL on CMS Image Table (Carousel) in Kata Dashboard.</li>\n<li>Set the carousel action with three types of action: URL, Postback, and Message on Kata CMS.</li>\n</ul>\n<p><img src=\"/assets/images/products/kata-platform/release-notes/platform-3.5.5/cms-images-studio.png\" alt=\"CMS Images in Kata CMS\"></p>\n<h2 id=\"340\">3.4.0</h2>\n<h3 id=\"whats-new-6\">What&#39;s New</h3>\n<p>Version 3.4.0 is all about Prediction Logs. Here’s what’s new:</p>\n<ul>\n<li>Prediction Logs data now shows predicted labels, prediction score, plus the date and time it was predicted.</li>\n<li>You can now search and filter your Prediction Logs data by entities, training status, prediction score, and date.</li>\n<li>We added a new <strong>Ignore</strong> feature, so you can train your NL model to, <em>well</em>, ignore sentences that don’t belong to any label. This allows your NL model to learn and improve its algorithm, ultimately improving the accuracy of your NL model.</li>\n</ul>\n<p><img src=\"/assets/images/products/kata-platform/release-notes/platform-3.4.0/nl-insight.png\" alt=\"NL Insight\"></p>\n<h3 id=\"bug-fixes-1\">Bug Fixes</h3>\n<ul>\n<li>Fixed FAQ table cannot show more than 10 labels</li>\n<li>Fixed error when adding/deleting questions in FAQ table</li>\n<li>Fixed bot revision history only show last 10 snapshots</li>\n<li>Fixed error when accessing NL Studio</li>\n</ul>\n<h2 id=\"330\">3.3.0</h2>\n<p>In this release, we&#39;re highlighting our newest feature and some recent updates to Kata Platform.</p>\n<p><img src=\"/assets/images/products/kata-platform/release-notes/platform-3.3.0/module.png\" alt=\"Module Screenshot\"></p>\n<h3 id=\"modules\">Modules</h3>\n<p>Modules are prebuilt bot features, ready to be integrated into your project in just a few clicks. This way, you can create amazing conversational experiences even faster. In this beta-release, we&#39;re introducing modules for two of the most common chatbot features: FAQ and Location.</p>\n<h4 id=\"faq-module\">FAQ Module</h4>\n<p>FAQ Module lets your chatbot answer questions your customers often ask. It&#39;s excellent for anyone who wants to reduce the workload of their customer service department. With this module, you can build the knowledge-base to handle the repetitive questions, so your live agents can focus on more complex problems.</p>\n<h4 id=\"location-module\">Location Module</h4>\n<p>Location Module lets your users find the nearest location of your business. This module is ideal for any industries offering face-to-face customer experiences, such as banking and retail. Your users can share their location, and you can point them to your nearest establishments along with the Google Maps directions.</p>\n<p>All of our modules are already integrated with CMS Studio. It means anyone on your team can collaborate on managing the content without the need for programming or technical skills. Further details and documentation about Modules can be found <a href=\"https://docs.kata.ai/modules/introduction/\">here</a>.</p>\n<h3 id=\"misc\">Misc</h3>\n<ul>\n<li>Fixed \\n causing errors in Method.</li>\n<li>Emulator now lets you test each environment separately.</li>\n<li>Emulator now lets you test CMS content.</li>\n<li>Added emulator on client dashboard. Now your client can test changes they made directly on the dashboard.</li>\n</ul>\n<p>As always, we&#39;re happy to chat with you to learn more about your use cases and feedback on Kata Platform. You can send us your thoughts via email to <a href=\"mailto:support@kata.ai\">support@kata.ai</a> or join our community on <a href=\"http://bit.ly/JoinTemanKata\">Slack</a>.</p>\n<h2 id=\"322\">3.2.2</h2>\n<h3 id=\"bot-studio-improvements\">Bot Studio improvements</h3>\n<ul>\n<li>We&#39;ve added the Quickreply and Confirm Template action templates, compatible for LINE Messenger.</li>\n<li>Buttons can now be used to trigger a date/time picker.</li>\n<li>Added the option to add Phrase NLU output for NLU entities with type Phrase.</li>\n</ul>\n<h3 id=\"deprecated-nlu-types\">Deprecated NLU Types</h3>\n<p>On the Bot Studio NLU selector, we have deprecated NLU types <code>Verstand classifier</code>, <code>Verstand tagger</code> and <code>Verstand retrieval</code>. New NLUs created can no longer have these types.</p>\n<h3 id=\"bug-fixes-2\">Bug fixes</h3>\n<ul>\n<li><strong>Bot Studio:</strong> Fixed incorrect KataML generated when creating CMS action.</li>\n<li><strong>Bot Studio:</strong> Fixed issue where onEnter mapping is stringified.</li>\n<li><strong>NL Studio:</strong> Fixed unable to inherit NLU.</li>\n<li><strong>NL Studio:</strong> Fixed searching inherit and root NLU.</li>\n<li><strong>NL Studio:</strong> Fixed various display issues with training + prediction log.</li>\n</ul>\n<h2 id=\"320\">3.2.0</h2>\n<h3 id=\"super-model\">Super Model</h3>\n<p>Super Model is a highly maintained pre-built entity for Users to use without training. New projects would automatically have a Kata Entity, named <code>kata</code>, for tagging common task like person name, location, datetime, email, number, etc. For more details, <a href=\"/nl-studio/super-model/\">click here</a>.</p>\n<h3 id=\"channel-improvements\">Channel improvements</h3>\n<p>Added support for WhatsApp channel. You can now enter your WhatsApp channel details in the platform.</p>\n<h3 id=\"bug-fixes-3\">Bug fixes</h3>\n<ul>\n<li><strong>Bot Studio:</strong> Fixed unable to update state in end state.</li>\n<li><strong>NL Studio:</strong> Fixed missing field dictionary for entity type.</li>\n<li><strong>NL Studio:</strong> NL settings now show the correct defined NLU language.</li>\n<li><strong>Bot Studio:</strong> Fixed bug where some form errors were not shown correctly.</li>\n<li><strong>Bot Studio:</strong> Fixed bug where the flows editor does not reflect the updates made in self-transition state.</li>\n</ul>\n<h2 id=\"310\">3.1.0</h2>\n<h3 id=\"bot-studio-improvements-1\">Bot Studio Improvements</h3>\n<ul>\n<li>Added &quot;CMS&quot; action. Now you can search/select CMS elements when creating action on Bot Studio.</li>\n<li>Bot Studio now auto-saves your work as a draft.</li>\n<li>CMS Studio now allows you to invite non-Kata Platform users to use Kata Dashboard.</li>\n</ul>\n<h3 id=\"kata-cli\">kata-cli</h3>\n<p>Kata-CLI now shows bulk training status:</p>\n<ul>\n<li>Information if there is any active training job.</li>\n<li>Error on specific training data.</li>\n</ul>\n<h3 id=\"bug-fixes-4\">Bug fixes</h3>\n<ul>\n<li>Fixed an issue that caused &quot;Add Mapping&quot; button to disappear after users click Single Mapping when creating method.</li>\n<li>Fixed an issue that caused users unable to search public NL when creating entity.</li>\n<li>Fixed an issue that caused display on keywords field to not expand when users add more than 1 lines.</li>\n<li>Fixed some display bugs.</li>\n<li>Fixed crash when creating transition &amp; intent.</li>\n<li><strong>kata-cli:</strong> Fixed a bug showing incorrect bot latest revision on Bot Studio after users push bot on Kata-CLI.</li>\n<li><strong>kata-cli:</strong> Fixed data training order when users use bulk training feature. Now use last-in-first-out method.</li>\n</ul>\n<h2 id=\"300\">3.0.0</h2>\n<p><strong>Kata Platform 3.0</strong> is our biggest update yet. In this version, we are introducing several new features to help you build a more comprehensive solution for your needs.</p>\n<h3 id=\"whats-new-7\">What&#39;s New</h3>\n<h4 id=\"projects\">Projects</h4>\n<p>Manage your chatbot project under one roof. A project consists of one bot design, one NL, and one CMS. Each of them will have different versions you can maintain.</p>\n<p><img src=\"/assets/images/products/kata-platform/release-notes/platform-3.0/kata-platform-3-0.jpg\" alt=\"Projects Image\"></p>\n<h4 id=\"cms-studio\">CMS Studio</h4>\n<p>Build your own CMS for your chatbot. Your client will have a full access to maintain the knowledge or content of your chatbot. Now you can build your own CMS based on your needs.</p>\n<p><img src=\"/assets/images/products/kata-platform/release-notes/platform-3.0/cms-studio.png\" alt=\"CMS Studio\"></p>\n<p>Once you&#39;ve done building your own dashboard, you can invite users or clients to contribute to the dashboard and update your bot&#39;s knowledge easily. All in all, your dashboard will look like this:</p>\n<p><img src=\"/assets/images/products/kata-platform/release-notes/platform-3.0/dashboard.jpg\" alt=\"Dashboard\"></p>\n<h4 id=\"nl-prediction-api\">NL Prediction API</h4>\n<p>Build your own Natural Language using our NL Studio, and use it everywhere.\nNow it supports:</p>\n<ul>\n<li>Entity Recognition</li>\n<li>Intent Classification</li>\n<li>Sentiment Analysis</li>\n</ul>\n<h4 id=\"kata-design-language-system\">Kata Design Language System</h4>\n<h5 id=\"aksara\">Aksara</h5>\n<p>Aksara is our very own design language system. It contains foundations, voice and tone guidelines, component standards, and other guidelines that systematically improve quality, timeliness, and consistency to our product.</p>\n<h5 id=\"wicara\">Wicara</h5>\n<p>Previously known as kata-kit, Wicara is the implementation of Aksara Design Language using React framework. It is designed to be flexible and reusable react components.</p>\n<p>Go to <a href=\"http://aksara.kata.ai\">http://aksara.kata.ai</a> to see our Design Language System.</p>\n<p>We hope Kata Platform 3.0 will help you build smarter chatbots in shorter development time. It is our mission to democratize AI and help the community to build chatbot solution. For any inquiries, contact us at <a href=\"mailto:support@kata.ai\">support@kata.ai</a>.</p>\n",
      "title": "Version",
      "excerpt": "<p>We develop a lot of improvements for the Kata Platform in user experience and the newest action type for your bot, here is the list:</p>",
      "meta": {
        "relativePath": "release-notes\\version.html",
        "createdAt": "2022-02-04T02:22:59.331Z",
        "lastModified": "2022-02-04T02:22:59.331Z",
        "size": 22865,
        "formattedSize": "22.3 KB"
      }
    },
    {
      "id": "all-use-cases",
      "contents": "<h3 id=\"chatbots-for-customer-service\"><strong>Chatbots For Customer Service</strong></h3>\n<p>Build 24/7 virtual agent service to accommodate customers’ needs, such as answering common questions, accessing specific information, or assisting simple requests with seamless handoffs to human agents for complex issues.</p>\n<h3 id=\"chatbots-for-customer-engagement\"><strong>Chatbots For Customer Engagement</strong></h3>\n<p>Engage and support your customers on their preferred platform at any time. Whether to share the newest product information, engage customers in a marketing campaign, or deliver a relevant and personal conversational experience for your customers.</p>\n",
      "title": "All Use Cases",
      "prev": "kata-platform-features",
      "next": "what-is-conversation-design",
      "excerpt": "<p>Build 24/7 virtual agent service to accommodate customers&#x2019; needs, such as answering common questions, accessing specific information, or assisting simple requests with seamless handoffs to human agents for complex issues.</p>",
      "meta": {
        "relativePath": "use-case\\all-use-cases.html",
        "createdAt": "2022-01-24T00:16:44.200Z",
        "lastModified": "2022-01-24T00:16:44.200Z",
        "size": 678,
        "formattedSize": "678 Bytes"
      }
    }
  ]
}
