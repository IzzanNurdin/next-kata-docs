{
  "app": {
    "config": "./markdown-to-json/settings/kata-platform.json",
    "cwd": "./",
    "deterministicOrder": false,
    "display": true,
    "dist": "./markdown-to-json/outputs/kata-platform.json",
    "filePattern": "**/*.md",
    "ignore": "",
    "port": 3001,
    "server": false,
    "src": "./docs/kata-platform",
    "name": "kata-platform",
    "metadata": true,
    "version": "1.6.1"
  },
  "data": [
    {
      "contents": "Introduction In the Kata Platform you can view various reports and analytics regarding your chatbots Whether its to analyze the enduser read chatbots user behavior chatbots most popular topic and keyword or even chat log between your chatbot and its enduser we got you covered There are 3 main features you can choose Users feature provides you the enduser information such as the number of new users active users and many more Topics feature is a feature that relates to what topics flows or states that the enduser is asking the most Transcripts is a feature to see enduser conversations with a chatbot Lets elaborate on each feature definition and functionalities Users The Users feature contains the data of your enduser First is the filter option on top of the feature screen User Filter Figure 1 Filter option in Users feature You can filter the analytics based on Environment is a container your chatbot is deployed to In Kata Platform we have 3 environments Development Staging or Production Environment is a part when creating channels Channel is a deployed messaging platform where your bot lives Date is a feature to choose the date range for your analytics data Note that you can only view maximum 2 months data at a time For a broader date range please contact us at supportkataai Various User Analytics Figure 2 Various user analytics data After selecting the filter we can view specific data for your chatbot New and Returning Users an analytics graphic to show the number of endusers who used the chatbot firsttime and repeatedly Active Users number of endusers who repeatedly used the chatbot in total Sessions a session count when the enduser engages in conversation with the bot until the conversation ends A session counts as ended when your enduser does not reply to the bot until 5 minutes after New Users number of endusers that used the chatbot for the first time If your enduser chats Hi for the first time to your bot then it will be counted as 1 This metric cannot be applied to Whatsapp Messages number of total messages received incoming messages and sent outgoing messages through the chatbot User Activities Figure 3 User Activities analytics In User Activities you can see how many sessions active users messages and new users your chatbot has throughout the date range You can also hover at any date to view the stats for that day The data can be downloaded in CSV format Peak Hours Figure 4 Peak Hours analytics In Peak Hours analytics you can analyze at what day and time the endusers are more engaged with your chatbot The blue color indicates engagement The darker the blue the more engagement the enduser has with your chatbot on that specific day amp time Notice on Monday at 12PM when you hover the block there are 28 incoming messages with dark blue color indicating on that day and time the enduser is more active You can use this analysis to make a better decision as to when is the best time to engage with your user Cohort Figure 5 Cohort simple amp expanded analytics Daily Important note The cohort data is standalone analytics which means the data is shown not filtered by date range Cohort analysis allows us to see enduser retention which shows the engagement level of endusers to the bot For example it counts active users who interact with our bot on month 0 and return on the following month month 1 and return after the next following month month 2 the higher the percentage of users that returned on month 1 2 and 3 showing that our bot has a high retention level It has a cohort size to choose a range which are monthly weekly daily default daily Monthly will show 2 previous months from today Weekly will show 11 previous weeks from today Daily will show 14 previous days from today It has a download button to export data to a CSV file We define 5 colors as follows A dark color for the 100 active users A mediumdark color for 75 to 100 active users Mediumlight color for 50 to 76 active users Light color for 25 to 51 active users White for 0 to 26 active users Topics The Topics option within the analytics dashboard contains information regarding mostly used features in your platform The first thing you will find is a box with 3 filters which allows you to obtain customized information based on your chosen filters Topics Filter Figure 6 Filter option in Topics feature You may adjust the filters based on the following parameters Environment is a container your chatbot is deployed to In Kata Platform we have 3 environments Development Staging or Production Environment is a part when creating channels Channel is a deployed messaging platform where your bot lives Date is a feature to choose the date range for your analytics data Note that you can only view maximum 2 months data at a time For a broader date range please contact us at supportkataai Top Topics Analytics Figure 7 Top Topics analytics Once you apply the filters you can view specific information regarding Top topics for a given feature For example shown above are the top 5 topics that appear the most for the flows intents states and messages feature Top 5 flows will show you an insight about which flows are visited by endusers Top 10 intents featured the intents that the enduser repeatedly asked Top 10 states provide which response that chatbot repeatedly replied to the enduser Top 10 messages show what words were repeatedly talked about by your endusers All those pie charts are downloadable The output files will be CSV Word Cloud Figure 8 Word Cloud analytics When you scroll to the end of the page you will find the Word Cloud box which is a collection of most commonly used words by your enduser The bigger the size of the font indicates how often the word is being used You can hover over the words to see total messages for each word Transcripts Transcripts feature provides the complete log of conversations between your users amp chatbot complete with date range total incoming and outgoing messages duration and user ID Also you can download each transcript log in CSV format Transcript Filter Figure 9 Filter option in Transcripts feature You may adjust the filters based on the following parameters Environment is a container your chatbot is deployed to In Kata Platform we have 3 environments Development Staging or Production Environment is a part when creating channels Channel is a deployed messaging platform where your bot lives Date is a feature to choose the date range for your analytics data Note that you can only view maximum 2 months data at a time For a broader date range please contact us at supportkataai Transcript Log Figure 10 Transcript Log After choosing the filter you can view the transcript log you can also search for a specific User ID in the search bar on the upper left corner Here is the explanation for each column Start Date means start date and time of the conversation End Date means end date and time of the conversation Incoming means the total number of messages from the enduser Outgoing means the total number of messages from the chatbot Duration means the total time of each conversation User ID means the user ID of the user in the conversation Download means a feature to download a transcript log in CSV format You can also click on the transcript row to view the log of each row for example Figure 11 Transcript Detail Here you can view the log of conversations between your user amp chatbot We also include the state flow your user is in after each chat ",
      "excerpt": "In the Kata Platform you can view various reports and analytics regarding your chatbots Whether its to analyze the enduser read chatbots user behavior chatbots most popular topic and keyword or even chat log between your chatbot and its enduser we got you covered",
      "id": "analyze-your-bot-conversations",
      "title": "Analyze Your Bot Conversations",
      "prev": "start-your-first-chatbot",
      "next": "error-log",
      "meta": {
        "relativePath": "documentation-content\\analyze-your-bot-conversations.html",
        "createdAt": "2022-01-28T04:12:05.051Z",
        "lastModified": "2022-01-28T04:12:05.051Z",
        "size": 9929,
        "formattedSize": "9.7 KB"
      }
    },
    {
      "contents": "What is Conversation Design Conversation Design is a process of designing conversation between the user and operating system based on principles of humantohuman dialogues Conversation Designs primary goal is to help users complete their activities on a product whether it is a transaction a questionsandanswer or a casual chat The final result of Conversation Design is a conversational product with a natural and comfortable conversational flow How to start designing the conversation There are 3 stages of designing conversation requirement stage highlevel design stage and detailed design stage Each of them contains a question that you need to answer throughout the design process Requirements Stage Always start your product with a clear goal in the requirement stage It will help you identify your products use case and set the scope of your first phase product You may start this stage by researching your target audience to help you build a userfriendly conversational AI product If youre confused about whether your product will solve the problem you may start your research with these 3 basic questions Is a conversational product an appropriate solution for your product Does conversational product improve user experience Does conversational product add real value to your product These questions will help you identify what kind of solution you want to build for your endusers problems Highlevel Design Stage After fulfilling the requirements the next step is getting into highlevel design Based on the use case you can break down what are the key features are going to be Then with the features figured out you should map out the content for your conversational UI In this stage you may start designing your first conversation flow Our Kata Platform is designed to build 3 types of conversational products keywordbased bot menubased bot and NLPbased bot Detailed Design Stage The last stage is the detailed design where you can develop a system persona for your conversational product You can build a tone of voice to help your product stay consistent by creating a persona Text is the primary medium that conversation designers use to convey messages to users so good writing is the main key to a smooth user experience When writing responses for conversational UI always use plain words short explanations and the correct spelling Remember to write based on your system persona and predefined style guide ",
      "excerpt": "Conversation Design is a process of designing conversation between the user and operating system based on principles of humantohuman dialogues Conversation Designs primary goal is to help users complete their activities on a product whether it is a transaction a questionsandanswer or a casual chat The final result of Conversation Design is a conversational product with a natural and comfortable conversational flow",
      "id": "designing-conversation",
      "title": "Designing Conversation",
      "next": "start-your-first-chatbot",
      "prev": "all-use-cases",
      "meta": {
        "relativePath": "documentation-content\\designing-conversation.html",
        "createdAt": "2022-01-24T00:16:44.192Z",
        "lastModified": "2022-01-24T00:16:44.192Z",
        "size": 2678,
        "formattedSize": "2.6 KB"
      }
    },
    {
      "contents": "Introduction To build a great conversational experience for endusers you must create a bot with nearly zero bugs To achieve this debugging during development is necessarily needed You will receive any errors in the Kata Platform when publishing a bot Also we provide a feature named Error Logs to show any errors that happened in bot activity after release Hence it is an endtoend error monitoring tool Kata Platform will show these error messages in 3 ways When you publish a chatbot in Kata Platform When you execute a command kata push in Kata CLI When endusers receive the error message Maaf terjadi kesalahan pada sistem FYI you can change the error copy by following this guide Kata Platform will log it into the Error Log feature This feature is available in the menu Flow gt Error Log Figure 1 Error Log feature is located Available Error Messages Error code Explanation Error Code 1002Message shall be either of type command text or data This error message commonly happens if you push your bot using Kata CLI It means your defined intent is not included in the 3 available options command text or data Solution Define one of the intent types correctly intents myIntent type text data command Error code Explanation Error Code 1003Cannot find action type desctype This error message commonly happens if you push your bot via Kata CLI It means the action type is not supported or has a typo on the action type description on KataML For example you have the following case Figure 2 Error message example It means your bot cannot find the action type txt Solution If your case is choosing not supported action type then you must define one of correct action types text returns one or multiple text bubble image returns image template returns rich action command trigger command api trigger an API call Here is the example myAction type text options text hello dataname If the above solution still has issues then compare the defined actions you have with action inside a state Error code Explanation Error Code 1004Invalid method head This error message commonly happens if you push your bot via Kata CLI or publish via Platform The bot has an invalid method in the header or a typo in method definition For example you have a case as follows Figure 3 Error message example It means your method named mappingAksBrand head is not found Solution You must check your available bot method name then it should be in these formats for the header methodNamemethodParamor methodmethodParam methodParam2 Error code Explanation Error Code 1005Cannot create methe thod head message This error message will show if you pushing your bot via Kata CLI It means there is an error when creating the method In this error message you will find a specific error in the method For example you have a case as follows Figure 4 Error message example It means your method named mappingTitle has an error or incomplete method where symbol is located Solution Check the method name function syntax if there are any typos Error code Explanation Error Code 1006Error executing method method emessage This error message will show if your bot already deployed to any channels It means there is a failure when executing methods For example you have a case as follows Figure 5 Error message example It means there is an error when executing deleteSoon method Solution Check the method function syntax if there are any typos Error code Explanation Error Code 1007Method name is not defined This error message will show if you push your bot via Kata CLI It means you create an action using a method but not yet defined in KataML Solution You must check the method name from the error message and write code for the method Error code Explanation Error Code 1010Failed creating mapping imapi This error message will show if you push your bot via Kata CLI or publish via Platform It means an error in doing mapping in transition For example you have a case as Figure 6 It means your key mapping named tryTransit has an typo or incorrectly mapped with tryValue value Figure 6 Error message example Solution You must check the mapping inside the transition then fix any possible typos in expression syntax Error code Explanation Error Code 1016Error in flow thisid while updating state e ampamp emessage This error message will show if you are pushing your bot via Kata CLI or publishing via Platform It means there is a state error inside a flow There are several error messages inside this error code If the error message shows for example Error in flow greetingFlow while updating state null details No next state found from state init It means in greetingFlow flow is no next state found If the error message shows for example Error in flow greetingFlow while updating state null details Next state greeting from init doesnt exist It means in greetingFlow flow there is a state name greeting that is not defined yet Solution Check the flow name then check inside the state if any possible typos Error code Explanation Error Code 1019No flow selected This error message will show if you pushing your bot via Kata CLI or publish via Platform It means conversation does not match with any flow Solution Check whether you have any flow definition or fallback flow also checking possible typos in flow name Error code Explanation Error Code 1020Cannot create Nlu from method no method descmethod found This error message will show if you pushing your bot via Kata CLI It means bot can not create NLU from a method because method definition does not exist Solution Check definition in the method name Error code Explanation Error Code 1022Cannot find nlu descnlu on creating classifier or creating intent attributes This error message will show if you pushing your bot via Kata CLI It means bot can not find NLU with specific name on creating intent or on creating intent attributes Here is the error example Figure 7 Cannot find NLU named misccc in NLUs mapping Solution Check the NLU definitions in labels Error code Explanation Error Code 1023Error during postprocessing Nlu thisid details emessage This error message will show if you pushing your bot via Kata CLI It means it has a failure when executing NLU processors Here is the error example Figure 8 Cannot execute similar NLU with different expressions and processor Solution Check method definition on your bot code Error code Explanation Error Code 1028No Initial State defined This error message will show if you pushing your bot via Kata CLI and publish in Kata Platform It means the initial state is not found Here is the error example Figure 9 Cannot publish because no state is found Solution Add the initial state at least in a flow Error code Explanation Error Code 1029Cannot get state state This error message will show if you pushing your bot via Kata CLI It means there is no state with a certain name or no initial state defined Solution Check if any possible typos or incorrect definition inside the state name Error code Explanation Error Code 1030Invalid action in state i This error message will show if you pushing your bot via Kata CLI It means there is no action defined with a certain name in a certain state Solution Checking action definition or possible typos in action name inside the state name Error code Explanation Error Code 1031Next state state from prevState doesnt exist This error message will show if you pushing your bot via Kata CLI It means there is no next state defined Solution Check to the next state name whether it has typos or undefined yet Error code Explanation Error Code 1032No next state found from state metastate This error message will show if you pushing your bot via Kata CLI It means there is no next state from the state name Solution Check to the next state name whether it has typos or undefined yet Error code Explanation Error Code 1033Cannot execute enter mapper in state thisid emessage This error message will show if you pushing your bot via Kata CLI It means in onEnter mapping there is incorrect syntax Solution Check the mapping expression in onEnter Error code Explanation Error Code 1036Cannot find method name for process This error message will show if you pushing your bot via Kata CLI It means you cannot find methods defined as processors Solution Check method definition on your bot code Error code Explanation Error Code 1037Cannot parse condition cond This error message will show if you pushing your bot via Kata CLI It means there is an error on parsing conditional expressions Solution Check for typos in actions intents and NLUs definitions Error code Explanation Error Code 1038Cannot recognize condition with typeasttype and opastoperator This error message will show if you pushing your bot via Kata CLI It means the condition expression is not found Solution Check your condition expression if there is any typos or incorrect syntax Furthermore you can check this operator list here Error code Explanation Error Code 1040Error in flow thisid while classifying details e ampamp emessage This error message will show if you pushing your bot via Kata CLI It means there is an error when classifying intent Solution See the message details for more info Error code Explanation Error Code 1041Error classifying intent thisid with classifier This error message will show if you pushing your bot via Kata CLI It means there is an error when classifying intent Solution Check the message details for more info Error code Explanation Error Code 1047Invalid nlu This error message will show if you pushing your bot via Kata CLI It means nluID is not recognized by the bot Solution Check again with nluID if any possible typos Coming Soon We try our best to provide detailed error messages and solutions So we will provide these error messages details with the solution soon Error Code 1001 Error processing action thisid details e ampamp emessage Error Code 1008 Cannot handle expression because no expr is defined Error Code 1009 No handler found for typeasttype and opastoperator Error Code 1011 Max Recursion of maxRecursion is reachednn JSONstringify Error Code 1012 No command handler for messagecontent Error Code 1014 Error in flow thisid while executing action details emessage Error Code 1015 Error in flow thisid while processing attributes details e ampamp emessage Error Code 1017 Error in flow thisid Cannot update state from state data context data message pMessage Error Code 1018 Flow is not defined flowName Error Code 1021 Cannot find nlu type desctype Error Code 1024 Error parsing attribute i details e ampamp emessage Error Code 1026 Session greater than limit thislimitSessionSize 1000 kB Error Code 1027 No session Error Code 1034 Cannot execute exit mapper in state thisid emessage Error Code 1035 Cannot execute transit mapper in state thisid emessage Error Code 1039 Method descstateMapper doesnt exists Error Code 1046 Converse Error code thiscode message thismessage arguments thisprintOptions Please dont hesitate to contact supportkataai if you found any errors above and need an ASAP solution Thank you ",
      "excerpt": "To build a great conversational experience for endusers you must create a bot with nearly zero bugs To achieve this debugging during development is necessarily needed You will receive any errors in the Kata Platform when publishing a bot Also we provide a feature named Error Logs to show any errors that happened in bot activity after release Hence it is an endtoend error monitoring tool",
      "id": "error-log",
      "title": "Error Log",
      "prev": "analyze-your-bot-conversations",
      "next": "how-to-deploy-your-chatbot-using-generic-channel",
      "meta": {
        "relativePath": "documentation-content\\error-log.html",
        "createdAt": "2022-02-04T01:03:37.076Z",
        "lastModified": "2022-02-04T01:03:37.076Z",
        "size": 23243,
        "formattedSize": "22.7 KB"
      }
    },
    {
      "contents": "A chatbot is an application that allows humans to have online conversations with a computer via text or voice This tutorial will create a simple chatbot using the Kata Platform So lets get started Video tutorial You can watch the tutorial to start your first chatbot or follow the steps in this documentation Registration and Login Open your browser and enter the URL Register your data in the Kata Platform by filling in the required fields Figure 1 Registration page in Kata Platform After filling in all the data click Sign Up We will send a verification email to your registered email Continue to verify your account by entering the password to continue the registration step Login with your account In this step you will create a simple chatbot as in the image below Lets start Figure 2 Simple chatbot example Create a Project You will see all projects in the project dashboard A project consists of bot design NLU and CMS Click Create Project to create a new project Figure 3 Dashboard project Fill in project detail then click Create Project After the project has been created you will be redirected to the Conversation Flow page to create flow state and action Congratulations you successfully created a new project Create a Flow Flow is a conversation chatbot flow In this simple tutorial you will create 1 flow and use 1 default flow Default flow is a fallback flow or a flow to answer if questions are not understandable by a chatbot In the Conversation Flow click the Create Flow Fill in the flow name hello then click Create If a flow is successfully created it will show in the Conversation Flows sidebar Figure 4 New flow name hello Create a State The state is a step in a conversation A flow must have 1 state called the initial state and 1 state called the end state In this tutorial you will create 2 states in the flow hello which are init state and hello state Init state will become the initial state and the hello state becomes the end state Click the icon in the Conversation Flow menu Figure 5 Button to create a new state In this step you will create an initial state Fill in the init state then turn on the toggle Initial State to set it as the initial state Figure 6 Create a state name init Next create a hello state This state will be an end state so you must turn on the End State toggle Do a similar step with the second step In this step you will get an error that an end state must have at least 1 action So the next step is to create an action in the hello state Create an Action Action is a bot response in text images buttons interactive messages such as a carousel in LINE a generic template in FB Messenger and others A state must have at least 1 action except in the initial state This tutorial will create a text action in the hello state Click in the hello state then it will show a form on the right screen To create a new action click on the Add action button Figure 7 Add new action Click on the icon Next it will show various available actions Choose action Text Figure 8 Input new action Figure 9 Input Text action After choosing a Text action it will show an interface like in the image below Input action name then click Add Variant button to input text response Figure 10 Input text response in bot Finishing your action by clicking the Create Action button Then finalize the state by clicking the Create button Create an Intent A chatbot needs to understand endusers input to show correct action or bot response The intent will recognize input in the Kata Platform by checking keywords NL or regex Enduser is a term for chatbot users This step will create an intent to catch when endusers greet the chatbot In the hello flow choose the Intent menu Next click Create Intent Figure 11 The page to create a new intent Input intent detail with name helloIntent Then turn on toggle As Initial to create a trigger in the chatbot and execute the hello flow Next continue to choose the Text type Input a condition to make the chatbot execute the intent when the enduser sends the message Hello or start content Hello content start Click the Create button to finish creating intent Figure 12 Create helloIntent to recognize greetings from endusers Create a Transition Transition is a procedure to move from one state to another state if a condition is fulfilled Create transition by pulling a line from the source state to the destination state like the image below Figure 13 Transition between states In this step you will create a transition between the init state and the hello state by pulling a line If you succeed to create a transition it will show a form on the right screen Then input condition detail to create transition can be executed if an enduser input is caught by helloIntent intent intent helloIntent Click the Save button to finish creating the transition Publish Bot This publish feature is useful to save changes in the form of revision numbers The Publish button can be found on all Flow pages In this step you will save the created bot design Click the Publish button which is placed in the top right corner Figure 14 Publish button To ensure your bot is stored correctly enter the Revision List menu The revision list will show every new revision at the top Figure 15 Revision List interface Testing Your Bot In this step you will try a simple chatbot using the emulator feature On the lower right of your screen click on the Test Chatbot button You will see a small window with a chat conversation interface if you succeed Figure 16 Chatbot emulator position Type Hello word If your chatbot works well then it will show the chatbot reply witn created action This image is the correct example Figure 17 Correct chatbot conversation Congratulations your first chatbot is done Next continue to deploy your chatbot in messaging platform Telegram Create a Deployment Deployment is a step to merge all Revisions in Flow NLU and CMS so that bots can be integrated into the channel Before starting channel integration chatbots must at least have 1 deployment In the sidebar choose the Deploy menu Then choose Overview Figure 18 Deploy menu interface Click the New Deployment button then it will show a form on the right screen Choose the deployment version In Kata Platform there are 3 deployment versions Major to deploy big changes such as change chatbot usecase Minor to deploy medium changes such as adding new features in your chatbot Patch to deploy small changes such as change copy in action Figure 19 Create a new deployment Then click the Submit button If deployment is successful then the interface will be shown like this Figure 20 Deployment has been created Create an Environment Step after creating a deployment is to create an environment An environment is a zone in computer science that provides a place to run integrated applications Kata Platform has 3 environments development staging and production Choose the menu Deploy then choose Environment Figure 21 Environment interface In this step you will create a Development environment Click the button Create Environment in the Development card Fill in the environment then click Create Figure 22 Create an environment interface Integration to a Channel Create a Channel In this step you will create a chatbot integration with the Telegram messaging platform Telegram is a free messaging platform to deploy chatbots with a simple setup In the Deploy gt Environment click the Create Channel button Figure 23 Create an environment interface You will be redirected to the Create Channel page Click the Create Channel button to create a new channel Fill in the channel name and choose type as Telegram To fill in the Bot User OAuth Access Token field we must set up a chatbot in Telegram first The next step is to open your Telegram application and log in Before you start you need a Telegram account already registered and logged in to your application Connect chatbot to Telegram The first step is to register your bot to the BotFather account Figure 24 Search BotFather account Type newbot and BotFather will ask for your chatbot name Feel free to use any name you like After that you will be asked to enter your chatbot username Remember that your bot username has to either start or end with bot Once finished BotFather will respond with a bot token to access the Telegram Bot API Figure 25 Telegram shows bot token Go back to Platform then copy the bot access token into the channel drawer Figure 26 Input bot access token Click Create to get a webhook from the Kata Platform Then click the copy button to copy the webhook URL Click on the webhook link to View Channel detail It will show a drawer to copy the access token and webhook URL Figure 27 Input bot access token Next open a new tab on your browser and enter this URL Change my_bot_token into your own bot token Also paste kata_platform_webhook_url with the copied webhook URL Click Go or press Enter on the keyboard Figure 28 Telegram bot has successfully connected If you see the message Webhook was set youre all set Lets try our chatbot Open Telegram on the desktop or mobile and start chatting with your bot Figure 29 Testing Hello in Telegram chatbot This is the end of getting started with a chatbot You can contact supportkataai if you have any difficulties implementing this ",
      "excerpt": "A chatbot is an application that allows humans to have online conversations with a computer via text or voice This tutorial will create a simple chatbot using the Kata Platform So lets get started",
      "id": "start-your-first-chatbot",
      "title": "Start Your First Chatbot",
      "next": "analyze-your-bot-conversations",
      "prev": "designing-conversation",
      "meta": {
        "relativePath": "documentation-content\\start-your-first-chatbot.html",
        "createdAt": "2022-01-29T14:22:17.343Z",
        "lastModified": "2022-01-29T14:22:17.343Z",
        "size": 17342,
        "formattedSize": "16.9 KB"
      }
    },
    {
      "contents": "What is the best practice for making a flow A flow should be volatile which means it gets closed when switching to another flow volatile true How to remove a context after a specific time You may use invalidate function and filled it with timestamp type invalidate 152053926476 How to handle the intent that cannot catch users input Always use a transition to the state itself named default if there are any branching state states showPizza action showPizza transitions askQty condition intent pizzaType showPizza fallback true Also you must create reenter intent with command type This intent will help the bot ask a question again to user Also it will help you to maintain the active session longer intents reenter type command condition content reenter Is it possible to let users trigger a flow by a command Here is an example of using a command to trigger flow login from flow greet flowGreet intents states greet end true action name greetingMessage name showLoginMessage name loginCommand actions greetingMessage type text options text Hello showLoginMessage type text options text Untuk menggunakan layanan ini kamu perlu login terlebih dahulu loginCommand type command options command login flowLogin intents loginCommand initial true type command condition content login How to make a different response on each channel We may use metadata for specific channel response Each metadata consists of Channel type Channel access token Sender ID states showMenu end true action name bridgeShowMenu name showMenuLine condition metadatachannelType line name showMenuFb condition metadatachannelType fbmessenger name showMenuTelegram condition metadatachannelType telegram I found out my bot respond incorrectly for firsttime users who add the bot How to handle this You have to add below code to resolve the condition Intent code to handle users input intents LINE and FB Messenger getStarted initial true type data condition payloadtype follow Telegram startTelegram initial true type text condition content start cURL request to add Get Started button for Facebook Messenger curl X POST H ContentType applicationjson d get_started payload typefollow Whats the best practice to create an action that calls API from a bot API that was called from bot must be returned with status code 200 and JSON Response Body Otherwise the result in payload will be null flowAPI intents status type command condition content status states callAPI action name callAPIMock name handleResult transitions success condition intent status ampamp payloadresult fail condition intent status ampamp payloadresult callAPI fallback true actions callAPIMock type api options method GET uri handleResult type command options command status payload result result How to get the username from each channel You have to use API action in the bot to use specified API LINE FB Messenger For Telegram access metadatatelegramSenderName For example exampleFlow intents getStarted initial true type data condition payloadtype follow states addAsFriend initial true transitions greetUser fallback true mapping contextuserId metadatalineSenderId contexttoken metadatalineAccessToken greetUser end true action name callLineAPI name displayResult actions callLineAPI type api options method GET headers Authorization Bearer contexttoken uri displayResult type text options text Halo resultdisplayName terima kasih sudah add kami Is there any configurable field where we can put our google map api key due to location action usage For setup your Google API Key put in config in bot studio googleApiKey thisisgoogleapikey Then call the configuration in action actions options text configgoogleApiKey If FB messenger amp LINE has action button which use URL how about Twitter Is there any alternative way such as action text URL Twitter has quickreply that quite similar with action button Follow this code to put quickreply type template options type button confirm items quickreply type text label string payload key string string How to get metadata time You may use metadatachannelType in Bot configuration How to use Flatten in NLUs Config in botyml nlus mynl type nl options nluIdusernluname token token output lttypegt threshold ltnumbergt flatten true optional default false If flatten is enabled first object in array will be the value of the entity with entity name as the key Output Type Raw flatten false intent type trait score 1 value mainMenu flatten true intentArray type trait score 1 value mainMenu intent type trait score 1 value mainMenu Output Type Value flatten false intent mainMenu flatten true intentArray mainMenu intent mainMenu How to reinit session in kataCLI Execute kata console then clear How many seconds for timeout action type API hit in Kata Kata put 5 Seconds for timeout condition when hit API How to login as team in KataCLI First execute kata login and login using your username Then run kata switchteam ltTeamNamegt for switch into team user I invited by someone as his team but in my account the team didnt show What should I do Try to relogin read logout then login again Then you shall see your team is available in account switcher I got an error which written Errror Max Recursion of 3 is reached How to fix this error This error defines when your bot is move to another state more than 3 times Solutions Go to bot configuration Write maxRecursion 10 ",
      "excerpt": "A flow should be volatile which means it gets closed when switching to another flow",
      "id": "bot-development-faqs",
      "title": "Bot Development FAQs",
      "prev": "general-faqs",
      "next": "glossary-general",
      "meta": {
        "relativePath": "faqs\\bot-development-faqs.html",
        "createdAt": "2022-02-04T03:22:32.200Z",
        "lastModified": "2022-02-04T03:22:32.200Z",
        "size": 8388,
        "formattedSize": "8.2 KB"
      }
    },
    {
      "contents": "Is it possible to use NL from different projects You may define them in NLUs Learn more about how to integrate chatbots using NLU How do I give access to anyone to access and update content on my CMS Client Dashboard You can invite anyone registered to Kata Platform or unregistered to access your CMS Client under the User menu on Kata CMS Can I roll back to the previous version Yes you can roll back to previous versions on the Version Page However please note this action will create a new version using the old version setup For example youre on version 101 now and would like to roll back to version 100 When you hit that roll back button it will create a new version 102 with the same setup as version 100 What is TPS Transaction per Second in the Kata Platform TPS stands for Transaction per Second A transaction consists of incoming amp outgoing message traffic through the Kata Platform So we have a limit for the transaction happening in each project in the Kata Platform What do you mean by the limit for the transaction We limit the incoming amp outgoing message traffic in the Kata Platform Think of it as bandwidth The bigger your projects TPS limit the bigger your bandwidth for message traffic processing How do we know the TPS limit for our project We separate the categories of the project into two Paid Project amp Free Project We offer an exclusive TPS limit for each Paid Project Also all paid projects will have a verified badge in the Kata Platform Figure 1 Badge for a paid project For Free Project we offer a shared TPS limit across the Free Projects users Should you need help to upgrade from Free Project to Paid Project or upgrade your TPS limit please contact us businesskataai and well be happy to assist you What is the impact of the TPS limit on my project When your project has reached the TPS limit the following message will have to wait until the previous message has done processingresulting in your user experiencing a delay in receiving or sending the message So the bigger your TPS limit the bigger your projects bandwidth to process the message resulting in less delay Its essential if your project has a significant customer base We will also send an email notification to the project creator when the Paid Project has reached the TPS limit Does the TPS limit apply to all channels in the Kata Platform Yes the TPS limit applies to all channels through the Kata Platform and are used by FIFO First In First Out method eg if the first message is from WhatsApp and the second is from Facebook Messenger Then the message from WhatsApp is processed first followed by the message from Facebook Messenger Can I switch from Paid Project to Free Project Unfortunately no but youre free to choose among the available subscription plans How do I upgrade my Free Project to Paid Project Were glad you have decided to support us Please let us know your interest via email businesskataai and we would be happy to assist you Does using the emulator in the Kata Platform count as transaction usage No emulator usage isnt affected by the TPS limiter Does the TPS limiter also apply for onpremise deployment Currently no TPS limiter only applies to cloud deployment ",
      "excerpt": "You may define them in NLUs Learn more about how to integrate chatbots using NLU",
      "id": "general-faqs",
      "title": "General FAQs",
      "prev": "how-to-change-error-messages-in-your-chatbot",
      "next": "bot-development-faqs",
      "meta": {
        "relativePath": "faqs\\general-faqs.html",
        "createdAt": "2022-02-04T03:19:33.182Z",
        "lastModified": "2022-02-04T03:19:33.182Z",
        "size": 3678,
        "formattedSize": "3.6 KB"
      }
    },
    {
      "contents": " Intent in Flow Intent as Initial Intent as Fallback Intent Type Text Intent Data Intent Command Intent Condition Classifiers Attributes Priority NLUs Keyword NL Regex Multiple Regex Wit Intent Wit Entity Method Action Method Simple Method Advanced Method Error Logs Configurations Kata NL What is Kata NL Entity Entity Trait Dictionary Entity Phrase Entity Inherit Root Belongs to Labels Kata Entity Supermodel Training Test NLU Prediction Logs Token NLU ID Kata CMS What is Kata CMS Pages Forms Elements Label ",
      "excerpt": "Intent in Flow",
      "id": "glossary-coming-soon",
      "title": "Coming Soon",
      "prev": "glossary-inside-kata-flow",
      "next": "release-notes-version",
      "meta": {
        "relativePath": "glossary\\coming-soon.html",
        "createdAt": "2022-02-04T03:45:06.295Z",
        "lastModified": "2022-02-04T03:45:06.295Z",
        "size": 1043,
        "formattedSize": "1.0 KB"
      }
    },
    {
      "contents": "API Application Programming Interface is a type of software that connects computers to another computer program Bot A bot is a software application that runs automated tasks Chatbot A chatbot is an application that allows humans to have online conversations with a computer via text or voice Conversational AI Conversational AI is a technology that allows interaction between humans and computers by making computers understand natural language and mimic human conversations Conversational AI products communicate by recognizing voice and text understanding intents translating multiple languages and responding to human conversations Automated messaging apps texttospeech or virtual assistants are examples of conversational AI products Enduser In conversational AI product development an enduser is a person who ultimately uses or is intended to use the product Fallback Fallback is a situation when the bot does not understand what the enduser said FAQ Frequently Asked Questions FAQ is a list of questions with answers relating to a particular subject FSD Functional Specification Diagram is a document designed to give an overview of how the software works This document outlines each of the features and shows a stepbystep flow Humanagent Humanagent is a real person that interacts with endusers through conversational AI products such as chatbots Intent Intent is a purpose or goal Within conversational AI intent refers to what goal or purpose an enduser has in mind while interacting with a bot This intent is extracted from the enduser utterance and then the bot translates it to answer with the appropriate response For example an enduser wants to buy a pizza You can build the bot with a designated reply that offers the pizza menu There are two types of intents in the Kata Platform Initial Intent and Followup Intent An initial intent is the one you set at the beginning of the conversation while followup is the following intent A bot cannot start a conversation without an Initial Intent Kata CLI Kata CLI is a commandline interface that users use to interact with the Kata Platform Kata Platform Kata Platform is an ecosystem of applications and services developers use to build NLP products and conversational AI Kata ML KataML or Kata Markup Language is a computer language that uses tags or markup to write bot designs Message A message is a conversation unit delivered by bots to endusers or vice versa in text voice or media It consists of incoming messages and outgoing messages NLP Natural Language Processing is a subfield of linguistics computer science and artificial intelligence involved with the interactions between computers and human language NLP discusses how computers can process and analyze large amounts of natural language data Omnichannel Omnichannel is a multichannel communication between endusers and humanagents Kata Omnichat is an omnichannel product from Kataai which provides integrated channels such as Instagram and WhatsApp Session A session is an exchange of information between two or more communication devices or between a bot and an enduser It has a start and an endpoint that you can define by a certain point For example Kata Platform measures one session from the start of a conversation until the enduser does not reply until 5 minutes Transcripts A transcript is a conversation context between chatbot and enduser that consists of text and media in which users can download and show information based on filters ",
      "excerpt": "Application Programming Interface is a type of software that connects computers to another computer program",
      "id": "glossary-general",
      "title": "General",
      "prev": "bot-development-faqs",
      "next": "glossary-kata-platform",
      "meta": {
        "relativePath": "glossary\\general.html",
        "createdAt": "2022-02-04T03:26:16.731Z",
        "lastModified": "2022-02-04T03:26:16.731Z",
        "size": 3835,
        "formattedSize": "3.7 KB"
      }
    },
    {
      "contents": "Conversation Flow Conversation Flows contain a collection of conversation flows and actions in a bot You can create a new flow by clicking the Create Flow button Active Flow Active Flow works as an indicator for active and functioning flow inside the bot If the Active Flow toggle is green the flow is running On the other hand if the Active Flow toggle is off the flow is inaccessible in the bot Persistent Flow Persistent Flow is used to make the flow repeat the last state if the enduser gives an inappropriate response You can build this by turning on the Persistent toggle on Create Flow window Default Flow Default is the flow that has been provided by Kata Platform You can find it on the Conversation Flow screen Meanwhile the Default toggle box on the Create Flow screen serves to activate the default mode of flow The default mode will run when no other flow can respond to enduser input Transition Transition is the process of moving between different states or the state itself selftransition In Kata Platform you can use a transition to connect two states by drawing lines between them or define it through the Transition tab in Create State window Every time you draw a line from one state to another on the Conversation Flow screen you must create a Transition This transition between states requires conditions to make the bot move along the path On the Transitions tab in the Create States window you can choose from two types of transitions Self Transition and Floating Transition Both of these features are optional Self Transition This feature lets you create a looping state if the endusers input an utterance that doesnt meet the bot condition For example you create a bot that requires an enduser email address To avoid inappropriate enduser answers you can make this state keep repeating the same question until the enduser provides the correct answer Floating Transition Floating Transition allows you to create a state that a bot can access freely from any prior state You can find this feature on the Transition tab while you open the Create or Edit State window Mapping Mapping is a procedure to store a value in a destined variable For example you want to input 0 in A variable which is called value then store it into the destined variable which is key Mapping in the Kata Platform can be found when creating or editing Transition and creating or editing a State Simple Mapping Simple Mapping is a Mapping process with inputting key and value Method Mapping Method is JS code that is embedded into the chatbot to perform a certain operation while method mapping is a way to run the methods that have been created in the chatbot OnEnter Mapping The mapping process occurs when the bot enters a state OnExit Mapping The mapping process occurs after the bot finds a transition from one state to another States State represents the stage of the conversation Initial State Initial state acts as a flow starter Each flow has to build one initial state End State End state indicates the end of one session of conversation ",
      "excerpt": "Conversation Flows contain a collection of conversation flows and actions in a bot You can create a new flow by clicking the Create Flow button",
      "id": "glossary-inside-kata-flow",
      "title": "Inside Kata Flow",
      "prev": "glossary-kata-platform",
      "next": "glossary-coming-soon",
      "meta": {
        "relativePath": "glossary\\inside-kata-flow.html",
        "createdAt": "2022-02-04T03:27:42.632Z",
        "lastModified": "2022-02-04T03:27:42.632Z",
        "size": 3403,
        "formattedSize": "3.3 KB"
      }
    },
    {
      "contents": "Analytics A feature to analyze endusers behavior This data analysis set can be used to enhance conversational AI product quality Flow Flow is a feature to create bot flow integrate bot with NLU and create data mapping for bot needs Flow provides an Error Log to see any errors when bot development or bot has been released NLU Natural Language Understanding is a capability that a computer possesses to transform a text message into a structured object In the Kata Platform NLU is a place for users to design and build their NLU capability for their conversational AI product Channels A channel is an instant messaging application that can be integrated with Kata Platform such as WhatsApp Telegram LINE Facebook Messenger Instagram etc Deploy Deploy is a feature in the Kata Platform to do Deployment which merges all Revisions in Revision List Deployment Deployment is a step to merge all Revisions in Flow NLU and CMS so that bots can be integrated into the channel Before starting channel integration chatbots must at least have 1 deployment Environment An environment is a zone in computer science that provides a place to run integrated applications Kata Platform has 3 environments development staging and production Project Project is a feature to start your bot or NLP project A Project can consist of Flow NLU and CMS Publish Publish is a command button to save changes in bot and NLU Revision List Revision List is a feature to list available revisions ",
      "excerpt": "A feature to analyze endusers behavior This data analysis set can be used to enhance conversational AI product quality",
      "id": "glossary-kata-platform",
      "title": "Kata Platform",
      "prev": "glossary-general",
      "next": "glossary-inside-kata-flow",
      "meta": {
        "relativePath": "glossary\\kata-platform.html",
        "createdAt": "2022-02-04T03:26:44.610Z",
        "lastModified": "2022-02-04T03:26:44.610Z",
        "size": 1714,
        "formattedSize": "1.7 KB"
      }
    },
    {
      "contents": "In Kata Platform we have a default error message which will show to endusers Maaf terjadi kesalahan pada sistem and Maaf pesan kamu akan diproses beberapa saat lagi yaa then you can check it in the Error Log feature in Kata Platform Learn more about error messages in the Kata Platform You can change the default error message into your language or based on the chatbots persona Lets start Change Default Error Message These steps are to change the default error message Maaf terjadi kesalahan pada sistem Go to your project then click the Flow menu Figure 1 Flow menu located In this Flow menu click the Configurations submenu Figure 2 Configuration menu located Write this code about what you wanted to change defaultErrorMessage Sorry there is an error Please try again Click Save to save the configuration Change Default Timeout Message These steps are to change the default timeout message Maaf pesan kamu sedang diproses yaa Go to the Configurations submenu again Write this code about what you want to change defaultTimeoutMessage Sorry there is an error Please try again Click Save to save the configuration This is the end of the guidance You can contact supportkataai if you have any difficulties when implementing this ",
      "excerpt": "In Kata Platform we have a default error message which will show to endusers Maaf terjadi kesalahan pada sistem and Maaf pesan kamu akan diproses beberapa saat lagi yaa then you can check it in the Error Log feature in Kata Platform Learn more about error messages in the Kata Platform",
      "id": "how-to-change-error-messages-in-your-chatbot",
      "title": "How to Change Error Messages in Your Chatbot to Match Them With Chatbot Persona",
      "prev": "using-custom-api-to-access-third-party-application",
      "next": "general-faqs",
      "meta": {
        "relativePath": "how-to\\how-to-change-error-messages-in-your-chatbot.html",
        "createdAt": "2022-02-04T03:16:12.937Z",
        "lastModified": "2022-02-04T03:16:12.937Z",
        "size": 1932,
        "formattedSize": "1.9 KB"
      }
    },
    {
      "contents": "Introduction This documentation will teach you how to build a chatbot app using the Kata Platform and connect it to Generic Channel You can use Generic Channel for the channel not yet available in Kata Platform so that you can make a wrapper This tutorial will deploy your chatbot to a generic channel using NestJs and connect it with a chatbot Important There is no limitation in programming languages or frameworks if you want to create the app Deploy Your Chatbot in Kata Platform If you have already developed your chatbot you must deploy your bot Create a Deployment Click the Deploy menu in the left sidebar On the Deploy page click on the New Deployment button in the top right corner It will open up the Create Deployment menu Choose any deployment version you want to deploy and fill in the changelog Figure 1 Create a new deployment Click Submit to finish the deployment Create a New Environment If you already have an environment created skip these steps Go to the Deployments gt Environment menu Figure 2 Set up the environment then set up Generic channel Click the Create Environment button in any environment You will see a drawer to create a new environment Choose the development version you want in this tutorial we use the 100 version Fill in the environment URL This environment URL is used for CMS Learn more about CMS Click Create to create the environment Created environment now has a Create Channel button Finalize Generic channel deployment Click the Create Channel button to start adding channels to the environment It will open up the Channel menu within the environment Click the Create Channel button in the channel table list It will show a menu to set up the channel Choose Generic in Channel Type Fill the form to create your channel Field Name Functionality Limitation Name Channel Name Max 30 characters must contain only alphanumeric characters AZ az 09 and _ Token optional Access token from a thirdparty app Refresh Token optional Refresh token if any Secret optional Secret key from a thirdparty app URL Your endpoint to retrieve data from webhook for example Make sure your endpoint has public access to retrieve data from the webhook Click Save to continue After successfully making a channel you will get a webhook Copy this to be used for your app Figure 3 Click the copy button to copy the webhook Parameters To send a message to a chatbot you must have some parameters See the parameter below URLPOST REQUEST REQUEST BODY userId someUserId messages messageObject Here is the detail of messageObject that you can send to the Kata Platform Text Message type text content Halo Data message Postback Button Pressed type data payload key1 value1 key2 value2 Data message Share Location type data payload type location latitude 6187011099999999 longitude 10684574350000003 Data message File Attachment type data payload type image you can use image audio video and file url Reply Message to Generic Channel Kata Platform will hit your webhook POST Request that registered in Generic Channel with request body below Request Body messages messageObject messageObject messageObject userId someUserId Text Message type text content Maaf saya tidak mengerti katakata anda Button Message type data payload type template template_type button items title Title text Some text actions type postback label Label payload key1 value1 key2 value2 type url label Label url type message label Label text Your message Carousel Message type data payload type template template_type carousel items title Title text Some text thumbnailImageUrl actions type postback label Label payload key1 value1 key2 value2 type url label Label url title Title text Some text thumbnailImageUrl actions type postback label Label payload key1 value1 key2 value2 type url label Label url Image Message type data payload type template template_type image items originalContentUrl previewImageUrl Audio Message type data payload type template template_type audio items originalContentUrl duration 10000 Video Message type data payload type template template_type video items originalContentUrl previewImageUrl Location Message type data payload type template template_type location items title Title address Address latitude 6187011099999999 longitude 10684574350000003 locationImageUrl Generic Channel App Here is an example of a generic channel app built with NestJs framework The source code Source code below is the Controller message that has 2 functions messageretrieveMessage endpoint with POST method to retrieve data from chatBot messagesendMessage endpoint with POST method to send data to ChatBot Controllermessage export class AppController constructorprivate readonly appService AppService PostretrieveMessage retrieveMessageReq request Request consolelogrequestbody PostsendMessage sendMessageReq request Request let data requestbody return thisappServicesendMessagedata sendMessage function will send a user message to a chatbot sendMessagedata let options method POST uri ltenter_your_webhook_heregt json true body userId datauserId messages type datamessages0type content datamessages0content return rpoptions thenfunction parsedBody data status Success messages parsedBody return data catchfunctionerr data status error messages err return data Testing Generic Channel with Postman app In this section you can use Postman to test sending messages to your chatbot Figure 4 Testing your bot Finally you will get a response from the chatbot to your app This is the end of the guidance You can contact supportkataai if you have any difficulties when implementing this ",
      "excerpt": "This documentation will teach you how to build a chatbot app using the Kata Platform and connect it to Generic Channel You can use Generic Channel for the channel not yet available in Kata Platform so that you can make a wrapper This tutorial will deploy your chatbot to a generic channel using NestJs and connect it with a chatbot",
      "id": "how-to-deploy-your-chatbot-using-generic-channel",
      "title": "How to Deploy Your Chatbot Using Generic Channel",
      "prev": "error-log",
      "next": "how-to-improve-your-chatbot-intelligence-by-training-your-nlu",
      "meta": {
        "relativePath": "how-to\\how-to-deploy-your-chatbot-using-generic-channel.html",
        "createdAt": "2022-02-04T03:15:19.397Z",
        "lastModified": "2022-02-04T03:15:19.397Z",
        "size": 12177,
        "formattedSize": "11.9 KB"
      }
    },
    {
      "contents": "Introduction Natural Language Understanding NLU is a computers ability to transform a text message into a structured object In the Kata Platform NLU is a place for users to design and build their NLU capability for their conversational AI product How to Use This guide will teach you how to integrate NLU into your chatbot to recognize specific endusers input Before you start you will need to create at least one entity To create an entity go to the NLU menu Then click the Entity menu Figure 1 NLU and entity menu Click Create Entity to set up a new entity It will show a form on the right screen Fill in the entity name Inherit lets you copy an entity from any public NLU on the Kata Platform To inherit an NLU type the NLU ID with usernameproject name Inherited entities will sync to the original entity including the labels and training data For example in the getting started chatbot section your NLU ID format is muhfadhiilkatatest_simple_bot Type is intended for the entity type We have 3 entity types in the Kata Platform Trait is a text classifier to classify a sentence into a particular labels This type is suitable for making your bot recognize nuance in a sentence Dictionary is a word tagger which has keys and labels It will form an array The Phrase is a word tagger Figure 2 Entity type dictionary The Profile is an AI model that is available to use by users Depending on data training and your dataset you can choose any profiles you want The default profile is suitable for many data samples so that this profile is available in all entity types intent profile is suitable for entity type trait default_v2 profile is our newest profile and is suitable if you have a large amount of data Root enables you to create an entity using other users NLU to copy the training data and add new labels Therefore it is suitable if you have a trained NLU and want to add more labels in the NLU You can type an NLU ID which consists of username and project with format usernameproject name Labels are a feature to determine classes or categories from an entity To add a new label you can type and press enter on your keyboard If you choose entity type dictionary it will show a dropdown name Belongs to This feature enables you to define relationships between entities Belongs to feature can only be used for entities in the same NLU with entity type phrase or dictionary It is suitable if your data sample is like this Saya mau beli es kopi susu 2 dan less sugarEs kopi susu is the main menu 2 and less sugar are modifiers to detailing the order So in Belongs To concept you will tag 2 and choose belongsTo Training your NLU After creating an entity and labels you have to train them Go to NLU gt Training menu Figure 3 Training model position Then you will see 2 choices to train your entities Single training is a way to train sentences training data one by one Bulk training is a way to train up to 200 sentences training data by uploading a txt file with annotations inside the file These are steps to train your NLU using single training For example to train 1 sentence for your NLU type a sentence then press enter on the keyboard to review the training For example Saya ingin membeli kopi susu Figure 4 Training box Next you can preview the sentence first and tag your entities You can block or double click in a word to tag a word Then it will show a dropdown to choose entities and labels in format entity namelabel name You can select a dropdown at the bottom of the entities list for tagging a sentence Figure 5 Tag a word using an entity type dictionary or phrase Figure 6 Tag a sentence using entity type trait Click the Train button to submit training data These are steps to train your NLU using bulk training First open your text and source code editor Notepad notepad sublime Create a new file You will create training data using a simple syntax for entity type trait and for entity type phrase Example for entity type trait Saya mau pesan pizza intentorder It means the sentence is classified into an entity named intent with the label order Example for entity type phrase and dictionary Saya mau pesan tiket ke destination Malang atas nama nerperson Budi intentorder It means the word Malang is tagged for entity name destination and Budi is tagged for entity name ner with label person Save the following training data into trainingdataexampletxt Go to NLU gt Training in Platform Then click on the Bulk Training button Click on the Browse button to open the file explorerfinder or drag and drop the file into the browse file dialog Wait for the upload process After the upload is complete you can review the training data file in the Platform Figure 7 Review training data Click on the Train button to train the data You will see a customer satisfaction survey after using the feature Fill in the survey then click X to close the dialog You have successfully trained your NLU with the uploaded data Figure 8 Successfully trained Every training will make your NLU smarter measured by a confidence score The confidence score is how the NLU recognizes endusers input between 0 and 1 Test Your NLU You can test if your NLU is good enough or wrong in the Kata Platform by using the Test NLU feature These are the steps Click the Test NLU button on the right bottom of your screen Figure 9 Test NLU location Then it will show a chat window Type in the chatbox a sentence to test your NLU The best practice is to prepare data training and data testing separately but they must have similarities When you enter a sentence or data testing a result is shown For example here is how to read the result from the test NLU example id abf78 input halo output kata product Intent type trait value bayar start 0 end 4 score 08116588592529297 label bayar Lets break them down It is a sentence or word that you typed input halo Two entities are not detected by your input halo so that the results are null output kata product There is a detected entity called Intent and the entity type is trait Then start and end mean character count from hello Next score means a confidence score from the NL model to predict the sentence or word from endusers Lastly the label labels under the entity that the word or sentence detected Intent type trait value bayar start 0 end 4 score 08116588592529297 label bayar Finally you understand the basics of creating NLU and how to train it Now lets improve your knowledge by following our advanced guidelines to design NLU and training it Advanced guidelines to design and train your NLU Designing NLU You can create NLU depending on your needs The more complex an NLU the larger training data is required to build it A few things you must consider when designing an NLU are The total number of labels in an entity NLU complexity impacts training process complexity as well The total number of entities in an NLU An entity will have its model so the more entities you owned then the longer the training process In the next part you will learn several suggestions to reduce complexity and make the training process easier First suggestion Dividing entity type trait into a few entities If an entity has too many labels eg 50 labels it will require at least 50 training data Moreover you will need larger training data to reach a high prediction result score if sentences between labels are alike To help this problem you can break down labels from an entity into a few entities For example you have an entity type intent as follows NLU name nl1 Entity name intent Entity type trait Entity profile intent Labels lupa_pin ganti_pin kartu_hilang buku_tabungan_hilang ganti_kartu ganti_buku_tabungan buat_kartu cara_daftar_nasabah You can break down it into 2 differents entities as follows NLU name nl2 First entity Entity name intent Entity type trait Entity profile intent Labels lupa ganti ganti buat hilang Second Entity Entity name topic Entity type trait Entity profile topic Labels pin kartu buku_tabungan nasabah This method can increase your model prediction score by dividing the score into several groups of labels From the example above the first NLU nl1 will divide the prediction score 100 into 8 different labels for the intent entity Otherwise the second NLU nl2 will divide the prediction score 100 into 4 labels for the intent entity and 4 labels for the topic entity Important note This suggestion is recommended if you have limited training data If you have a large amount of training data or there are no problems with your current training data this suggestion is unnecessary Second suggestion Utilize profile intent Another tip is to use an intent profile which is influenced by predictions from other models type phrase or type dictionary This way can make the training process if training data is limited and sentences form alike Important note This suggestion applies to entity type trait with intent profile only First example given a training data dimana tempat perpanjang sim paling dekat ask_nearby_simstnk dimana tempat perpanjang stnk sekitar sini ask_nearby_simstnk dimana kantor polisi terdekat ask_nearby_polisiAnd you have an NLU with the detail as follows NLU name nlv1 Entity name intent Entity type trait Entity profile intent Labels ask_nearby_simstnk ask_nearby_polisi This NLU can be changed into NLU name nlv2 First entity Entity name simstnk Entity type dict Entity profile default Key sim Labels sim surat izin mengemudi Key stnk Labels stnk surat tanda kendaraan bermotor Second entity Entity name intent Entity type trait Entity profile intent Labels ask_nearby_simstnk ask_nearby_polisi NLU nlv2 will make the training process faster because the words sim and stnk are in one similar category which is simstnk However there is a case that you need to be aware of An intent profile can remove the detailed information Here is an example The second example given training data resep untuk membuat pizza bbq apa ya ask_bbq_recipe pizza pepperoni gimana cara buatnya ya ask_pepperoni_recipe kasih tau dong resep pizza aas buatanmu ask_aas_recipeThen you will have an NLU NLU name nlv1 Entity name intent Entity type trait Entity profile intent Labels ask_bbq_recipe ask_pepperoni_recipe ask_aas_recipe Next you change the NLU structure into this NLU name nlv2 First entity Entity name pizza Entity type dict Entity profile default Key bbq Labels bbq barbeque Key pepperoni Labels pepperoni peperoni Key aas Labels aas american all star Second entity Entity name intent Entity type trait Entity profile intent Labels ask_bbq_recipe ask_pepperoni_recipe ask_aas_recipe The intent entity in nluv1 can recognize the differentiation between labels Otherwise nlv2 cannot acknowledge it because bbq pepperoni and aas are set up as one category pizza If users input a sentence resep buat bbq apa ya the score will show the same results from all labels If you still want to use dictionary type for this second example you can try this way NLU name nlv3 First entity Entity name pizza Entity type dict Entity profile default Key bbq Labels bbq barbeque Key pepperoni Labels pepperoni peperoni Key aas Labels aas american all star Second entity Entity name intent Entity type trait Entity profile intent Labels ask_pizza_recipe The nlv3 can recognize a sentence has ask_pizza_recipe intent and can specify which pizza by using pizza entity This method is helpful to make your bot easy to understand limited words such as product names Otherwise this suggestion is not recommended if youre using generic words Third suggestion Dividing NLU A bot can have multiple NLU Here are a few cases in which NLU can be divided Use specific NLU for certain flows Some flows in a bot may have a particular NLU for a flow which means input to trigger the flow is different from other flows This way can reduce the number of listed labels in an entity and ease the prediction process Examples Using credential NLU which is executed when the user first interacts with the bot Using order NLU in commerce bot will be executed when the user chooses the order menu Use specific NLU for certain states Few states in a bot may have similar input but have different meanings depending on what states are running You can configure the NLU in state condition Examples YesNo NLU can be used in overall flows but shall be specified in states that require endusers confirmation Note You can use these methods if you have too many labels data between labels are alike a limited number of training data predictions result is not optimal yet or found other problems But if your NLU is fine you can create an entity with many labels Training Guideline The training process is required to make a bot response to endusers messages and requires training data In NLU a training process will also train all models read entities For example NLUA has entity1 entity2 and entity3 Because each entity owns its models NLUA has 3 models that run individually If you input training data for NLUA you train entity1 entity2 and entity3 models Here are suggestions that you need to consider in the training process Add various forms of language Input training data with various forms such as formal informal slang long or short sentences If you only train a form eg formal then the model may understand formal sentences Avoid imbalanced data between labels The imbalanced data affect bias between labels A small amount of imbalanced data is not a problem However if you have a large amount of imbalanced data the predictions result too significant on specific labels and a bias Add countertraining Countertraining means you input training data that is not classified to current labels For example 0You have an entity that can predict book genres into 3 categories read labels horror fiction and biography Each label has been trained and can recognize each genre Then an input is entered with a new category named history Because the model only distinguishes between the 3 labels and assumes that each book must be categorized into 3 labels the model cannot answer not all three or none To make the model understand history input you have to enter training data without giving any intenttags Add a new label to the trained entity If you want to add a new label train the label with a similar total amount of training with current labels For example You have an entity with 5 labels Each label has 10 training data Then you add a new label Your next step will be to train the label equal to or more than 10 training data The final step is to train the other 5 labels with a few training data Ambiguous data Avoid preparing ambiguous training data into different labels Ambiguous data means you input the same training data but the context depends on what endusers asked For example Enduser sends the word sudah if your bot asks a question about apakah sudah makan Smalltalk flow or apakah sudah menikah Credential flow Both sentences can be recognized as intentdoneEating read entity intent with label doneEating or intentmarried read entity intent with label married To reduce this ambiguity case you shall prepare training data as follows Input training data such as sudah menikah in intent married There is an additional word menikah that could distinguish the labels For the word sudah train it to a different label such as intentdone For the bot implementation you shall put a condition intent done for states executed when endusers said sudah word Relationship between bot NL and training process Bot development used NL in bot and training process is influencing each other Bot implementation can process some limitations encountered in NL results through the bot NL complexity is affected by bot complexity So the more complex a bot the more complex the NL will be and the more training data For NL it is possible to mispredict a few data It is a usual case You can solve this by adding training data or postprocessing in the bot This is the end of the guidance You can contact supportkataai if you have any difficulties when implementing this ",
      "excerpt": "Natural Language Understanding NLU is a computers ability to transform a text message into a structured object In the Kata Platform NLU is a place for users to design and build their NLU capability for their conversational AI product ",
      "id": "how-to-improve-your-chatbot-intelligence-by-training-your-nlu",
      "title": "How to Improve Your Chatbot Intelligence by Training Your NLU",
      "prev": "how-to-deploy-your-chatbot-using-generic-channel",
      "next": "how-to-use-nlu-threshold-to-enhance-customer-experience",
      "meta": {
        "relativePath": "how-to\\how-to-improve-your-chatbot-intelligence-by-training-your-nlu.html",
        "createdAt": "2022-01-28T00:46:29.221Z",
        "lastModified": "2022-01-28T00:46:29.221Z",
        "size": 20734,
        "formattedSize": "20.2 KB"
      }
    },
    {
      "contents": "What is Bulk Training Great NL models are a fundamental part of making a great chatbot and approximately 70 of all chatbot projects use NL models instead of a keywordbased approach based on our Kataai projects data Previously the bulk training process was very technical because developers needed to use KataCLI and view the results on the Platform GUI This back and forth switching of tools was required to do training Now you can use the new Bulk Training on the Platform GUI itself to train more than 200 sentencestraining data at once These are the screenshots of our newest feature Figure 1 Upload training data file Figure 2 Preview from uploaded training data from file You can click on this video tutorial or go to the NLU gt Training menu check the screenshot below Figure 3 Video tutorial in bulk training Why Do We Need This Feature Training NL models is one of the most timeconsuming processes in chatbot development which could take approximately 6 weeks On average a complex chatbot project requires 1000 data for their NL models Its not ideal to train the sentences one by one as a typical 1000sentence NL model would easily take more than 4 hours to train Hence bulk training can significantly reduce the training effort with a simplified user flow How to Use Bulk Training Create a Project Mission Create a new project Prerequisite You already have a Platform account and have logged in Click on the Create Project button Fill in the required fields for the project Click Create Project Create Entities And Labels With Type trait Mission Create NL models to be trained and type entity trait Learn more about entity type trait Prerequisites You already have a project Go to NLU Click on Entities Click the Create Entity button to start creating entities and labels Learn more about entities and labels or you may want to explore how to design the NLU Fill in fields with this example Entity name intent Type trait Profile default Text classification To create labels you need to type and press enter to save a new label Fill in with these examples Labels greetings thank you The result goes here Figure 4 Create entity type trait Click Create to create a new entity with greetings and thank you labels Create Entities And Labels With Type phrase Mission Create NL models to be trained and type entity phrase Learn more about entity type trait Prerequisites You already have a project Click the Create Entity button to start creating entities and labels Learn more about entities and labels or you may want to explore how to design the NLU Fill in fields with these examples Entity name object Type phrase Profile default Default phrase To create labels you need to type and press enter to save a new pile Fill in with this example Labels person The result goes here Figure 5 Create entity type phrase Guideline to Create a Training Data Before we use the NL bulk training we will create training data using a simple syntax for entity type trait and for entity type phrase Learn more about entity type trait and entity type phrase This syntax is only allowed for entity type trait Saya mau pesan pizza intentorderThis means that the sentence is classified into entity name intent with label order Totalnya berapa ya intentask questionTypehow_muchThis means that the sentence is classified into entity name intent with label order and entity name questionType with label how_much This syntax is only allowed for entity type phrase Saya mau pesan tiket ke destination Malang atas nama nerperson Budi intentorderThis means that the word Malang is tagged for entity name destination and Budi is tagged for entity name ner with label person Create New Training Data Mission Create new training data in a txt extension file In this step you will need to open a text and source code editor such as Notepad in Windows notepad Sublime etc Prerequisites You already have a project and entities Open your text and source code editor Notepad notepad sublime etc Create a new file Type following sentences example to create training data to train our NL models You can add up to 200 sentencestraining data Or you can download this example selamat pagi intentgreetings welcome intentgreetings nama saya objectperson amanda salam kenal ya intentgreetings kemarin saya lihat objectperson amanda dan objectperson rizyan bercengkerama hari ini cerah ya kata objectperson destri morning everyone intentgreetings Save the following training data into a file named trainingdataexampletxt Upload Training Data And Perform Data Training Mission Upload training data to be previewed in Platform GUI Prerequisites Training data has been created as a txt extension file Go to NLU gt Training in Platform Click on the Bulk Training button Click on Browse button to open the file explorerfinder or drag and drop the file into the browse file dialog Wait for the upload process After the upload is complete you can review the training data file in Platform GUI Figure 6 Preview training data Click on the Train button to train the data You will see a customer satisfaction survey after using the feature Fill in the survey then click X to close the dialog You have successfully trained your NL model with the uploaded data Figure 7 Successfully trained the training data Error Messages During the upload process you might receive any of the error messages below Lets see what they are and how to solve each one of the errors Your File Wont Be Uploaded if You Close The Dialog Box Now It will show if youre trying to close the upload dialog box or click the X symbol during the file uploading process Please do not click the X button Figure 8 Showing warning message if you click x button Invalid File Format Only txt Files Are Supported This error message will be displayed if you uploaded different types of files Bulk Training feature only accept txt file format Figure 9 Showing error message if youre uploading not txt format Your txt File is Empty If you uploaded an empty txt file this error message will be shown Please check and make sure you have written the data training content in the txt file For more about the data training file format please refer to the guidelinetocreateatrainingdataguideline to create training data Figure 10 Showing error that your file does not have any script inside it Your Connection Was Interrupted Please Check Your Connection Try again If your internet connection was interrupted during the upload process this error message will be shown Please make sure that your internet connection is stable and reupload the data training file again Figure 11 Showing error message that your connection is bad and has interrupted training data uploading process The txt File Contains Entities or Labels That You Dont Currently Have Please Check Your File or Entities This error message will be displayed if your data training file contains no entities or labels that matched your current entities on the project Please check your NL project then go to the entities menu and create the entities or labels that you want to train with the Bulk Training feature This is the end of the guidance You can contact supportkataai if you have any difficulties when implementing this ",
      "excerpt": "Great NL models are a fundamental part of making a great chatbot and approximately 70 of all chatbot projects use NL models instead of a keywordbased approach based on our Kataai projects data",
      "id": "how-to-use-bulk-training-for-faster-training-process",
      "title": "How to Use Bulk Training For Faster Training Process",
      "prev": "how-to-use-training-data-generator-to-automate-generating-training-data",
      "next": "using-custom-api-to-access-third-party-application",
      "meta": {
        "relativePath": "how-to\\how-to-use-bulk-training-for-faster-training-process.html",
        "createdAt": "2022-01-28T04:05:29.615Z",
        "lastModified": "2022-01-28T04:05:29.615Z",
        "size": 10340,
        "formattedSize": "10.1 KB"
      }
    },
    {
      "contents": "Introduction In general the incoming message flow is An incoming message is caught by intent Next the intent will check in NLUs previously added using Add classifier and Add attribute features You can add more than 1 NLUs Then it enables the intent to check all NLUs Then NLUs will check the threshold The threshold can act as a confidence level and these values range from 00 completely uncertain to 10 completely confident This confidence level is usually set between 07 to 08 Finally NLUs will check whether the confidence score from the incoming message is lower or higher than the threshold If an incoming message is lower than the threshold NLUs will send bot information that the incoming message is incorrect with what NLU had recognized Then the intent will be checked by other NLUs If an incoming message is equal to or higher than the threshold NLUs will send information that the condition is correct If NLUs condition has matched then intent will send information to a bot that incoming message from the enduser is recognized as intent yesNL for example Then the bot will check the following action if an intent condition has been fulfilled For example if the transition has condition intentyesNL then the bot will execute the next state connected between the transition Check the image below for more detail Figure 1 Transition example which condition has intent using NLU How to Use To integrate NLU can be implemented in chatbot these are the steps First in the Kata Platform go to the Flow menu Then click the NLUs menu in the sidebar Figure 2 NLUs position in sidebar Click on the Create NLU button Then it will show a form on the right screen Fill in NLUs name and choose an NLU Type For this guide you will select NL On the NLU ID search and dropdown you will search your NLU to integrate it into your chatbot NLU ID consists of username and project with format usernameproject name For example in the getting started chatbot section your NLU ID format is muhfadhiilkatatest_simple_bot You can use NLU ID from another project as long as the project is set as public Threshold can act as a confidence level and these values range from 00 completely uncertain to 10 completely confident This confidence level is usually set between 07 to 08 So the data that falls under 0708 will not be detected by the bot The field only allows numbers and decimals to separate using the character As Intent is a feature to collect available labels in the NLU The field only allows alphanumerics Output has several output types depending on the entity type you used Output Types Functionals Raw Use this output type if your entity type is trait It will result in raw sentences Dictionary Use this output type if your entity type is dictionary It will result in an array consisting of keys and labels Phrase Using supermodel kata entity you must use this output type Path is a feature to support integration with Supermodel Click Create to finish your NLUs For example you must integrate an NLU ID muhfadhiilkatatest_simple_bot which has 1 entity name topic and entity type is trait to an intent named topic The entity topic has 2 labels FAQ order and buy The first step is you will fill in the NLUs form as follows NLU Name topicnl NLU Type NL NLU ID muhfadhiilkatatest_simple_bot Threshold 08 As Intent topic Output RawNext you will define this NLU inside an intent So you will create an intent named topic Go to the Conversation Flows menu then click on the Intent tab Figure 3 Intent tab position Click the Create Intent button Then a form will show on the right screen In Intent Type choose Text to start setup Next click the button Add classifier This feature enables you to insert your NLUs inside the intent so intent can match whether enduser input is understandable by the NLU or not First there is a dropdown to choose available NLUs then select topicnl Figure 4 Add classifier feature Then click the button Add attribute This feature enables you to insert your NLUs inside the intent similar to the Add Classifier feature with differentiation that bot developers can create a condition in the state or transition by using the entitys label It is because an attribute is a variable that has an array form Figure 5 Add classifier feature Click Create to create an intent Test Your Chatbot To test your chatbot you can see it in the bottom right corner of your screen Figure 6 Emulator location Click the Test Chatbot to start Type a sentence or word You can see incoming messages that you typed blue color and bot response white color by clicking the eye icon under the message bubble Figure 7 View detail in incoming message and outgoing message Here is how to read the incoming message Figure 8 Incoming message example type means message source which is from the emulator owner means the account that typed the message For outgoing messages or bot responses here is how to read them Figure 9 Incoming message example type means executed action type For this example it uses a text action type content means your message to test the bot action means executed action name flow means executed flow name intent means which intent recognized your message This is the end of the guidance You can contact supportkataai if you have any difficulties when implementing this ",
      "excerpt": "In general the incoming message flow is",
      "id": "how-to-use-nlu-threshold-to-enhance-customer-experience",
      "title": "How to Use NLU Threshold to Enhance Customer Experience",
      "prev": "how-to-improve-your-chatbot-intelligence-by-training-your-nlu",
      "next": "how-to-use-super-model-to-improve-your-bot-intelligence",
      "meta": {
        "relativePath": "how-to\\how-to-use-nlu-threshold-to-enhance-customer-experience.html",
        "createdAt": "2022-01-27T05:49:26.403Z",
        "lastModified": "2022-01-27T05:49:26.403Z",
        "size": 7927,
        "formattedSize": "7.7 KB"
      }
    },
    {
      "contents": "Introduction Super Model or Kata Entity is a highly maintained entity that you can use right out of the box This feature lets you build your NL faster and easier without training This model lets you extract specific words in a sentence like a persons name location and more This entity will be added automatically when you create a new project on the Entities page Also you can use this entity right away without adding any training data Kata maintains the model for this entity and all users will automatically get the updated version whenever Kata improves it Important Training this entity wont affect the prediction result but we encourage you to do so if you find any mispredictions as we will use it to improve the models Once you delete this entity you cant retrieve it back be careful when doing this If you want to use the entity you can create a new project again These are steps to access the feature First go to your project then click NLU You will see an automatically generated entity named kata the supermodel You can see the model detail by clicking the card Then it will show available labels Here is the explanation of each label and examples of what the Super Model can automatically identify words Label Description Examples Person Persons name Budi Siti Rina Putri Location General location city country address Jakarta Indonesia Jln Pangeran Antasari 18A Email General email businessmailcom jobscompanycom Phone General phone 62 80123456789 021 3456789 02156789012 Datetime Date and time hari ini 17 Agustus 1945 tahun 2019 besok 17945 jam 3 siang pagi ini 1900 Number Number in digit number in word sequence of number mix number in digit and word 123 92 9000 satu dua tiga ribu dua tiga delapan tujuh 9 juta 5rb Currency Currency name money IDR SGD rupiah US dollar Rp 5000 5 ribu rupihah 3 9 USD Area Unit area 5 meter persegi sepuluh m2 200 ha Duration Unit duration 3 jam 10 detik 5 jam 30 menit sehari dua hari Length Unit length 5 meter delapan cm Temperature Unit temperature 40 derajat celcius 5 derajat Volume Unit volume 6 liter Weight Unit weight tujuh kilogram 5 gr 9kg How to Use In this guidance you will implement a bot that uses Super Model Here is how In Kata Platform go to the Flow menu Then click the NLUs menu in the sidebar Figure 1 NLUs position in sidebar Click on the Create NLU button Then it will show a form on the right screen Fill in NLUs name and choose an NLU Type For this guide fill in supermodel for the name and choose NL On the NLU ID search and dropdown you will search your NLU to integrate it into your chatbot NLU ID consists of username and project with format usernameproject name For example in the getting started chatbot section your NLU ID format is muhfadhiilkatatest_simple_bot Threshold can act as a confidence level and these values range from 00 completely uncertain to 10 completely confident This confidence level is usually set between 07 to 08 So the data that falls under 0708 will not be detected by the bot The field only allows numbers and decimals to separate using character Fill in 08 in this field Output has several output types depending on the entity type you used For example for Super Model implementation choose Phrase Output Types Functionals Raw Use this output type if your entity type is trait It will result in raw sentences Dictionary Use this output type if your entity type is dictionary It will result in an array consisting of keys and labels Phrase Using supermodel kata entity you must use this output type Entity Name is a feature to define the entity name when choosing a Super Model Fill in with kata Click Create to finish your NLUs Next you will define this NLU inside an intent So you will create an intent name supermodNL for example Go to the Conversation Flows menu then click on the Intent tab Figure 2 Intent tab position Click the Create Intent button Then a form will show on the right screen In Intent Type choose Text to start setup Next click the button Add classifier This feature enables you to insert your NLUs inside the intent so intent can match whether enduser input is understandable by the NLU or not First there is a dropdown to choose available NLUs then select supermodel Match with feature enables you to specify which label in supermodel that you want to use in your intent For example if you want your bot to identify a persons name you will use a person label Fill in with person Next click on the kebab menu to choose Add custom option It will show a code block Fill the code box as follows labels true Your result when creating a classifier will be as follows Figure 3 Add classifier example Then click the button Add attribute This feature enables you to insert your NLUs inside the intent similar to the Add Classifier feature with differentiation that bot developers can create a condition in state or transition by using the entitys label It is because an attribute is a variable that has an array form In the 5th step you will use person label from Super Model then fill in the field as follows Name name NLU supermodNL Path person Your result after creating the attribute will be as follows Figure 4 Add attribute example Click Create to create an intent The next step is to use the intent as a condition in transition most common If you want to create your chatbot recognize a persons name by filling in the condition as follows intentsupermodNLThis is the end of the guidance You can contact supportkataai if you have any difficulties when implementing this ",
      "excerpt": "Super Model or Kata Entity is a highly maintained entity that you can use right out of the box This feature lets you build your NL faster and easier without training This model lets you extract specific words in a sentence like a persons name location and more",
      "id": "how-to-use-super-model-to-improve-your-bot-intelligence",
      "title": "How to Use Super Model (“Kata Entity”) to Improve Your Bot Intelligence",
      "prev": "how-to-use-nlu-threshold-to-enhance-customer-experience",
      "next": "how-to-use-training-data-generator-to-automate-generating-training-data",
      "meta": {
        "relativePath": "how-to\\how-to-use-super-model-to-improve-your-bot-intelligence.html",
        "createdAt": "2022-01-27T05:49:26.403Z",
        "lastModified": "2022-01-27T05:49:26.403Z",
        "size": 9473,
        "formattedSize": "9.3 KB"
      }
    },
    {
      "contents": "Introduction Training Data Generator is a feature that enables you to automatically generate training data up to 100 data using sentence samples or we call it data samples Before creating a data sample you will need to define the keyword and synonyms inside the word bank feature Why is it required We do permutations from data samples and keyword variants to generate the training data Lets try a case You create a word bank from Kenapa which consists of variant words or synonyms from Kenapa For example knp ngap ngaps kenaps So you have 4 word variants Next you create a data sample For example Kenapa ATM saya bermasalah ya We will create a permutation or combination from a data sample with variant words For example expected generated data will be like this knp ATM saya bermasalah ngap ATM saya bermasalah ATM saya bermasalah ngaps kenaps ATM saya bermasalah And many more Also we have a feature that is bulk tagging to tag all generated training data with your available entities and labels It enables faster tagging rather than manually annotating This guidance will elaborate on how to use training data generators and do bulk tagging after generated data shows up Lets get started Create Entity and Labels Before you start you will need to create at least one entity To create an entity go to the NLU gt Models menu Then click the Entity menu Figure 1 Models menu Click Create Entity to set up a new entity It will show a form on the right screen Fill in the entity name Here is the explanation of each field Inherit lets you copy an entity from any public NLU on the Kata Platform To inherit an NLU simply type the NLU ID with usernameproject name Inherited entities will sync to the original entity including the labels and training data For example in the getting started chatbot section your NLU ID format is muhfadhiilkatatest_simple_bot Type is intended for the entity type In Kata Platform we have 3 entity types which are Trait is a text classifier that classifies a sentence into particular labels This type is suitable for making your bot recognize nuance in a sentence Dictionary is a word tagger which has keys and labels It will form an array The Phrase is a word tagger Figure 2 Entity type dictionary The Profile is an AI model that is available to use by users You can choose any profiles you want depending on data training and the dataset you have The default profile is suitable for a large number of data samples so that this profile is available in all entity types intent profile is suitable for entity type trait default_v2 profile is our newest profile and is suitable if you have a large amount of data Root enables you to create an entity using other users NLU to copy the training data and add new labels Therefore it is suitable if you have a trained NLU and want to add more labels in the NLU To use this you can type an NLU ID which consists of username and project with format usernameproject name Labels is a feature to determine classes or categories from an entity To add a new label you can type and press enter on your keyboard If you choose entity type dictionary it will show a dropdown name Belongs to This feature enables you to define relationships between entities Belongs to feature can only be used for entities in the same NLU with entity type phrase or dictionary It is suitable if your data sample is like this Saya mau beli es kopi susu 2 dan less sugarEs kopi susu is the main menu 2 and less sugar are modifiers to detailing the order So in Belongs To concept you will tag 2 and choose belongsTo For this guide you will create 1 entity type trait to extract sentences 1 entity type phrase and 1 entity type dictionary to extract words Click the Create Entity button Then fill in as follows for the first entity Name intent Type Trait Label statementHere is the screenshot Figure 3 Create an entity Click the Create Entity button to create the following entity Fill in as follows for the second entity Name object Type phrase Label personHere is the screenshot Figure 4 Create an entity Fill in as follows for the last entity Name things Type dictionary Key car Labels suv van lcgcHere is the screenshot Figure 5 Create an entity Click Create to finalize The next step is to create a word bank when youre done Create a Word Bank In this part you will create synonyms or variants from the keyword Here is the guidance for adding variants You can add 2 words as 1 variant by using space Maximum 20 characters You must create at least 2 variants to create a word bank with a maximum of 20 characters for each variant You can remove a variant by clicking the x button next to the word Step by step to create a word bank Click the Word Bank tab then click the Create button It will show a dialog Fill in the name for your word bank For example you can fill in Kenapa Then create variants by typing a synonym from Kenapa word For example ngaps ngapa kenp knp kenopo Press Enter on your keyboard Figure 6 Create a word bank Finally you have variants Then click the Create button to create a word bank Create a Data Sample Once youve created a word bank now youre ready to make a data sample Data sample is a sample sentence that consists of a word bank and several words as a base to generate training data or called a pattern Here are the steps Go to NLU gt Training Click on Bulk Training dropdown then choose Data Generator Figure 7 Go to Data Generator feature You will see a row to input a data sample For example to add your available word bank type to show the word bank list Figure 8 Type to show word bank list Input a data sample for example Kenapa kemarin Sinta tidak sekolah Figure 9 Type a data sample Press Add Row to submit You can edit or delete your data sample after it has been created Figure 10 Update and delete data sample On the data sample page there is information Total data possibilities mean total generated data that can be created from available data samples So for this example you have 2 data samples multiplied with 1 word bank then multiply again with 5 word variants So finally there will be 10 data possibilities Figure 11 Total data possibilities from available data samples Data to Generate is several generated data that you wanted The number must be below or equal to the total data possibilities Figure 12 Data to generate must be equal to or below than total data possibilities Important note Make sure you put a space before the next word or after the previous word Example Kenapa Sinta tidak sekolah or Aku lagi Kenapa ya hari ini Generate Training Data This step will guide you to generate training data from created data samples Generated training data might not match your expectations because we are duplicating words However you can prepare the training data and do bulk training instead if you want specific training data Learn more about bulk training Before you start ensure your data samples are created The generate button will enable if data samples are available and data to generate is equal to or below the total data possibilities Lets put 10 data to generate Click the Generate button on the top right of your screen Figure 13 Generate button It redirects you to the Generated Data page where you can train using the bulk labeling feature You will see a training data list as follows Figure 14 Generated data from data sample and a word bank You can delete generated data by clicking on the remove button in the listBulk labeling Youre going to train generated data by using bulk labeling Bulk labeling is a feature to tag entity type trait phrase or dictionary by doing it at once Lets start to tag an entity type trait that youve created before In the Bulk Labeling section select the entity name intent This entity type is trait Next it will show available labels in the entity Because you only create 1 label then select the statement label Important note Bulk labeling for entity type trait will tag all generated data Figure 15 Tag entity type trait Click the button Add more entity Then select the entity name object Next select the person label Then it will show a text area named Words to Tag Words to Tag is a feature to search words you want to tag For example you will tag sinta word Press Enter on your keyboard to submit the word It will show like this Figure 16 Tag sinta word in bulk labeling Important note Bulk labeling for entity type phrase and dictionary will tag words only Then add the entity dictionary type Click Add more Entity to start Then select entity name things Then it will show a text area named Words to Tag Words to Tag is a feature to search words you want to tag For example you will tag a sekolah word Important note Bulk labeling for entity type dictionary will not show specific labels to tag So it will train the entity Figure 17 Tag sekolah word in bulk labeling Finally you can click the button Train It will train all generated data into entity intent with statement label and entity object with person label When successfully trained you will redirect to the Training page On this page you can see the generated data has been trained Figure 18 Data has been trained as intentstatement objectperson and things You can click the arrow on the right of the box to open the trained data detail Figure 19 How to show trained data detail Figure 20 Trained data detail Limitations There are several important notes when using a data generator such as You can create unlimited data samples and word banks but the system only generates up to 100 training data You can create data again if you want to add more than 100 generated training data or sentences It recommended using new data samples when generating new training data to make similar combination training data or sentence results If youre not satisfied with generated training data we recommend these approaches Create a new data sample with a different pattern from previous data samples If you want a specific sentence but the system does not show what you want then we recommend you to use the training feature in NLU gt Training instead If you have another NLU and want to use word banks or data samples from the current project it cannot be done now The bulk labeling feature is only for the Data Generator feature You cannot use it for now independently This is the end of the guidance You can contact supportkataai if you have any difficulties when implementing this ",
      "excerpt": "Training Data Generator is a feature that enables you to automatically generate training data up to 100 data using sentence samples or we call it data samples",
      "id": "how-to-use-training-data-generator-to-automate-generating-training-data",
      "title": "How to use Training Data Generator to automate generating training data when training your NLU",
      "prev": "how-to-use-super-model-to-improve-your-bot-intelligence",
      "next": "how-to-use-bulk-training-for-faster-training-process",
      "meta": {
        "relativePath": "how-to\\how-to-use-training-data-generator-to-automate-generating-training-data.html",
        "createdAt": "2022-01-27T05:49:26.404Z",
        "lastModified": "2022-01-27T05:49:26.404Z",
        "size": 15570,
        "formattedSize": "15.2 KB"
      }
    },
    {
      "contents": "In this guidance you will be able to implement a bot that uses an action type API Introduction For using an API to access thirdparty applications from your chatbot you will need to create an action API Also a state must be created before creating an action Important Platform has a timeout API in 10 seconds If your API result is shows more than 10 second to chatbot it will show a automatic message from your chatbot Maaf pesan anda sedang diproses tunggu beberapa saat lagi yaa How to Use Go to your project then click Flow Create a state for example a apiExample state Click icon in bottom right to create new state Click in the action box to create a new action When all actions available are shown then choose API Click tab Custom API Each field explanation Field Name Description Action name Name of your action Max 30 characters with alphanumeric Condition Which condition can trigger this action URI Your API URL Method Choose POST or GET Body Input API body by creating key and value Headers Input API headers by creating key and value Query Form Data Result Path Click the Create Action button to create action Click the Create to finalize state creation How to Collect API Result If you want to collect API results you just need to write result in a variable you want to put it For example this is a case if the API result wants to implement an action type Command Figure 1 API result in action type Command To access the value the API result can be stored in payload then you can access it by writing payloadresult For example this is a case if you want to access the first data from API result in action type Command Figure 2 Access value from API result This is the end of the guidance You can contact supportkataai if you have any difficulties when implementing this ",
      "excerpt": "In this guidance you will be able to implement a bot that uses an action type API",
      "id": "using-custom-api-to-access-third-party-application",
      "title": "Using Custom API to Access Third-Party Application",
      "prev": "how-to-use-bulk-training-for-faster-training-process",
      "next": "how-to-change-error-messages-in-your-chatbot",
      "meta": {
        "relativePath": "how-to\\using-custom-api-to-access-third-party-application.html",
        "createdAt": "2022-01-27T05:49:26.450Z",
        "lastModified": "2022-01-27T05:49:26.450Z",
        "size": 3189,
        "formattedSize": "3.1 KB"
      }
    },
    {
      "contents": " What is Kata Platform Kata Platform is a botdeveloping and Natural Language Understanding platform to help you design your conversational AI product Using the Kata Platform you can build automated text conversations understand messages and connect to messaging channels or APIs ",
      "excerpt": "Kata Platform is a botdeveloping and Natural Language Understanding platform to help you design your conversational AI product Using the Kata Platform you can build automated text conversations understand messages and connect to messaging channels or APIs",
      "id": "about",
      "title": "What is Kata Platform",
      "next": "benefits-with-kata-platform",
      "meta": {
        "relativePath": "introduction\\about.html",
        "createdAt": "2022-01-24T07:53:20.951Z",
        "lastModified": "2022-01-24T07:53:20.951Z",
        "size": 502,
        "formattedSize": "502 Bytes"
      }
    },
    {
      "contents": "Deliver Naturally Build more human and natural conversational experiences with products that support multimodal conversations backed up by deep learning technologies Connect Universally Decrease development time by using our drag and drop builder Then deploy your product across messaging platforms including web and mobile Monitor Comprehensively Keep track of your product from the prerelease to the postrelease and conduct a continuous evaluation using our Analytics feature with easytounderstand visualization ",
      "excerpt": "Build more human and natural conversational experiences with products that support multimodal conversations backed up by deep learning technologies",
      "id": "benefits-with-kata-platform",
      "title": "Benefits With Kata Platform",
      "prev": "about",
      "next": "kata-platform-features",
      "meta": {
        "relativePath": "introduction\\benefits-with-kata-platform.html",
        "createdAt": "2022-01-20T06:29:51.344Z",
        "lastModified": "2022-01-20T06:29:51.344Z",
        "size": 672,
        "formattedSize": "672 Bytes"
      }
    },
    {
      "contents": "Here are the key features Drag and drop visual Lessen product development time with interactive drag and drop visualization This feature allows users with minimum coding capability to build products quickly Basic or advanced conversational product Build a simple chatbot or advanced virtual assistant according to the products goal and objective You can build product ranges from an uncomplicated key ordbased bot to an advanced AI product with natural language understanding NLU knowledge Omnichannel integration Create once and deploy everywhere Integrate your bots seamlessly across web mobile or any messenger platforms Error log history Investigating errors is made easy with our error log history Monitor product errors that may occur and fix them by reading our documentation Product Analytics Tool Analyze enduser activities with easytounderstand visualization ",
      "excerpt": "Here are the key features",
      "id": "kata-platform-features",
      "title": "Kata Platform Features",
      "prev": "benefits-with-kata-platform",
      "next": "all-use-cases",
      "meta": {
        "relativePath": "introduction\\kata-platform-features.html",
        "createdAt": "2022-01-26T04:28:47.279Z",
        "lastModified": "2022-01-26T04:28:47.279Z",
        "size": 1068,
        "formattedSize": "1.0 KB"
      }
    },
    {
      "contents": "Chatbots For Customer Service Build 247 virtual agent service to accommodate customers needs such as answering common questions accessing specific information or assisting simple requests with seamless handoffs to human agents for complex issues Chatbots For Customer Engagement Engage and support your customers on their preferred platform at any time Whether to share the newest product information engage customers in a marketing campaign or deliver a relevant and personal conversational experience for your customers ",
      "excerpt": "Build 247 virtual agent service to accommodate customers needs such as answering common questions accessing specific information or assisting simple requests with seamless handoffs to human agents for complex issues",
      "id": "all-use-cases",
      "title": "All Use Cases",
      "prev": "kata-platform-features",
      "next": "what-is-conversation-design",
      "meta": {
        "relativePath": "use-case\\all-use-cases.html",
        "createdAt": "2022-01-24T00:16:44.200Z",
        "lastModified": "2022-01-24T00:16:44.200Z",
        "size": 678,
        "formattedSize": "678 Bytes"
      }
    }
  ]
}
